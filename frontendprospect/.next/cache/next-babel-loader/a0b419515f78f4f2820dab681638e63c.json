{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Signup.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation SIGNUP_MUTATION($email: String!, $name: String!, $password: String!) {\\n        signup(email: $email, name: $name, password: $password) {\\n            id\\n            email\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nvar SIGNUP_MUTATION = gql(_templateObject());\n\nvar Signup = /*#__PURE__*/function (_Component) {\n  _inherits(Signup, _Component);\n\n  var _super = _createSuper(Signup);\n\n  function Signup() {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: '',\n      password: '',\n      email: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: SIGNUP_MUTATION,\n        variables: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, function (signup, _ref) {\n        var error = _ref.error,\n            loading = _ref.loading;\n        return __jsx(Form, {\n          method: \"post\",\n          onSubmit: /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      e.preventDefault();\n                      _context.next = 3;\n                      return signup();\n\n                    case 3:\n                      _this2.setState({\n                        name: \"\",\n                        email: '',\n                        password: ''\n                      });\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }(),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, __jsx(\"fieldset\", {\n          disabled: loading,\n          \"aria-busy\": loading,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        }, __jsx(\"h2\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, \"Sign up for an account\"), __jsx(Error, {\n          error: error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        }), __jsx(\"label\", {\n          htmlFor: \"email\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, \"Email\", __jsx(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          value: _this2.state.email,\n          onChange: _this2.saveToState,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }\n        })), __jsx(\"label\", {\n          htmlFor: \"name\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }\n        }, \"Name\", __jsx(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"name\",\n          value: _this2.state.name,\n          onChange: _this2.saveToState,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }\n        })), __jsx(\"label\", {\n          htmlFor: \"password\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, \"Password\", __jsx(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          value: _this2.state.password,\n          onChange: _this2.saveToState,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        })), __jsx(\"button\", {\n          type: \"submit\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }\n        }, \"Sign Up!\")));\n      });\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport default Signup;","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Signup.js"],"names":["React","Component","Mutation","gql","Form","Error","CURRENT_USER_QUERY","SIGNUP_MUTATION","Signup","name","password","email","e","setState","target","value","state","signup","error","loading","preventDefault","saveToState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY} from './User';\n\nconst SIGNUP_MUTATION = gql`\n    mutation SIGNUP_MUTATION($email: String!, $name: String!, $password: String!) {\n        signup(email: $email, name: $name, password: $password) {\n            id\n            email\n            name\n        }\n    }\n`;\n\nclass Signup extends Component {\n    state = {\n        name: '',\n        password: '',\n        email: '',\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    render() {\n        return (\n        <Mutation mutation={SIGNUP_MUTATION} variables={this.state}>\n            {(signup, { error, loading }) => (\n            <Form \n                method=\"post\" \n                onSubmit={async (e) => {\n                    e.preventDefault();\n                    await signup();\n                    this.setState({ name: \"\", email: '', password: ''});\n                }}\n            >\n            <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Sign up for an account</h2>\n                <Error error={error} />\n                <label htmlFor=\"email\">\n                 Email\n                 <input \n                    type=\"email\" \n                    name=\"email\" \n                    placeholder=\"email\" \n                    value={this.state.email} \n                    onChange={this.saveToState}\n                 />\n            </label>\n            <label htmlFor=\"name\">\n                Name\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    placeholder=\"name\" \n                    value={this.state.name} \n                    onChange={this.saveToState}\n                />\n            </label>\n            <label htmlFor=\"password\">\n                Password\n                <input \n                    type=\"password\" \n                    name=\"password\"\n                    placeholder=\"password\" \n                    value={this.state.password} \n                    onChange={this.saveToState}\n                />\n            </label>\n            <button type=\"submit\">Sign Up!</button>\n        </fieldset>\n        </Form>)\n            }\n        </Mutation>\n        );\n    };\n}\n\n   \n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}