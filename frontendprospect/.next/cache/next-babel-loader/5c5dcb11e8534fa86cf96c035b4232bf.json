{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/UpdateItem.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        item(where: { id: $id }) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n    mutation UPDATE_ITEM_MUTATION(\n        $id: ID!,\n        $title: String,\n        $description: String,\n        $price: Int\n    )   {\n        updateItem(\n            id: $id,\n            title: $title,\n            description: $description,\n            price: $price,\n        ) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\n\nclass UpdateItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: '122 Main St. Loomis, CA',\n      description: 'Industrial Property with 8 units',\n      image: 'property.jpg',\n      largeImage: 'large_property.jpg',\n      price: 25000000\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === 'number' ? parseFloat(value) : value;\n      this.setState({\n        [name]: val\n      });\n    });\n\n    _defineProperty(this, \"updateItem\", async (e, updateItemMutation) => {\n      e.preventDefault();\n      console.log('Updating Item!!');\n      console.log(this.state);\n      const res = await updateItemMutation({\n        variables: _objectSpread({\n          id: this.props.id\n        }, this.state)\n      });\n      console.log('Updated!!!');\n    });\n  }\n\n  render() {\n    return __jsx(Query, {\n      query: SINGLE_ITEM_QUERY,\n      variables: {\n        id: this.props.id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, ({\n      data,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      }, \"Loading...\");\n      if (!data.item) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }\n      }, \"No Item Found for ID\", this.props.id);\n      return __jsx(Mutation, {\n        mutation: UPDATE_ITEM_MUTATION,\n        variables: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, (updateItem, {\n        loading,\n        error\n      }) => __jsx(Form, {\n        onSubmit: e => this.updateItem(e, updateItem),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 27\n        }\n      }, __jsx(Error, {\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }), __jsx(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }, \"Title\", __jsx(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        placeholder: \"Title\",\n        required: true,\n        defaultValue: data.item.title,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }\n      })), __jsx(\"label\", {\n        htmlFor: \"price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, \"Amount\", __jsx(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        placeholder: \"price\",\n        required: true,\n        defaultValue: data.item.price,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }\n      })), __jsx(\"label\", {\n        htmlFor: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, \"Description\", __jsx(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        placeholder: \"Enter A Description\",\n        required: true,\n        defaultValue: data.item.description,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }\n      })), __jsx(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, \"Save Changes\"))));\n    });\n  }\n\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/UpdateItem.js"],"names":["React","Component","Mutation","Query","gql","Router","Form","formatMoney","Error","SINGLE_ITEM_QUERY","UPDATE_ITEM_MUTATION","UpdateItem","title","description","image","largeImage","price","e","name","type","value","target","val","parseFloat","setState","updateItemMutation","preventDefault","console","log","state","res","variables","id","props","render","data","loading","item","updateItem","error","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        item(where: { id: $id }) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n    mutation UPDATE_ITEM_MUTATION(\n        $id: ID!,\n        $title: String,\n        $description: String,\n        $price: Int\n    )   {\n        updateItem(\n            id: $id,\n            title: $title,\n            description: $description,\n            price: $price,\n        ) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\n\n\nclass UpdateItem extends Component {\n    state = {\n        title: '122 Main St. Loomis, CA',\n        description: 'Industrial Property with 8 units',\n        image: 'property.jpg',\n        largeImage: 'large_property.jpg',\n        price: 25000000,\n    };\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type ==='number' ? parseFloat(value) : value;\n        this.setState({ [name]: val });\n    };\n\n    updateItem = async (e, updateItemMutation) => {\n        e.preventDefault();\n        console.log('Updating Item!!');\n        console.log(this.state);\n        const res = await updateItemMutation({\n            variables: {\n                id: this.props.id,\n                ...this.state,\n            }\n        });     \n        console.log('Updated!!!');\n    };\n\n    render() {\n        return (\n            <Query \n                query={SINGLE_ITEM_QUERY} \n                variables={{ \n                    id: this.props.id,\n                }}\n            >\n                {({ data, loading }) => {\n                    if (loading) return <p>Loading...</p>;\n                    if (!data.item) return <p>No Item Found for ID{this.props.id}</p>\n                    return(    \n                    <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\n                        {(updateItem, { loading, error }) => (\n\n                          <Form onSubmit={e => this.updateItem(e, updateItem)}>\n                            <Error error={error} />\n                            <fieldset disabled={loading} aria-busy={loading}>\n        \n                            <label htmlFor=\"title\">\n                                Title\n                                <input \n                                    type=\"text\" \n                                    id=\"title\" \n                                    name=\"title\" \n                                    placeholder=\"Title\" \n                                    required \n                                    defaultValue={data.item.title}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"price\">\n                                Amount\n                                <input \n                                    type=\"number\" \n                                    id=\"price\" \n                                    name=\"price\" \n                                    placeholder=\"price\" \n                                    required \n                                    defaultValue={data.item.price}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"description\">\n                                Description\n                                <textarea\n                                    id=\"description\" \n                                    name=\"description\" \n                                    placeholder=\"Enter A Description\" \n                                    required \n                                    defaultValue={data.item.description}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <button type=\"submit\">Save Changes</button>\n                            </fieldset>\n                          </Form>\n                        )}\n                    </Mutation>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION as UPDATE_ITEM_MUTATION };"]},"metadata":{},"sourceType":"module"}