{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/UpdateItem.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        item(where: { id: $id }) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n    mutation UPDATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String\n    )   {\n        createItem(\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        ) {\n            id\n        }\n    }\n`;\n\nclass UpdateItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: '122 Main St. Loomis, CA',\n      description: 'Industrial Property with 8 units',\n      image: 'property.jpg',\n      largeImage: 'large_property.jpg',\n      price: 25000000\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === 'number' ? parseFloat(value) : value;\n      this.setState({\n        [name]: val\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Query, {\n      query: SINGLE_ITEM_QUERY,\n      variables: {\n        id: this.props.id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, ({\n      data,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }\n      }, \"Loading...\");\n      return __jsx(Mutation, {\n        mutation: UPDATE_ITEM_MUTATION,\n        variables: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, (createItem, {\n        loading,\n        error\n      }) => __jsx(Form, {\n        onSubmit: async e => {\n          //Stop the form from submitting\n          e.preventDefault(); // call the mutation\n\n          const res = await createItem(); // change them to the single item page\n\n          console.log(res);\n          Router.push({\n            pathname: '/item',\n            query: {\n              id: res.data.createItem.id\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, __jsx(Error, {\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }), __jsx(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, \"Title\", __jsx(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        placeholder: \"Title\",\n        required: true,\n        defaultValue: data.item.title,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }\n      })), __jsx(\"label\", {\n        htmlFor: \"price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, \"Amount\", __jsx(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        placeholder: \"price\",\n        required: true,\n        defaultValue: data.item.price,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      })), __jsx(\"label\", {\n        htmlFor: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, \"Description\", __jsx(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        placeholder: \"Enter A Description\",\n        required: true,\n        defaultValue: data.item.description,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      })), __jsx(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, \"Save Changes\"))));\n    });\n  }\n\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/UpdateItem.js"],"names":["React","Component","Mutation","Query","gql","Router","Form","formatMoney","Error","SINGLE_ITEM_QUERY","UPDATE_ITEM_MUTATION","UpdateItem","title","description","image","largeImage","price","e","name","type","value","target","val","parseFloat","setState","render","id","props","data","loading","state","createItem","error","preventDefault","res","console","log","push","pathname","query","item","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        item(where: { id: $id }) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n    mutation UPDATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String\n    )   {\n        createItem(\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        ) {\n            id\n        }\n    }\n`;\n\n\nclass UpdateItem extends Component {\n    state = {\n        title: '122 Main St. Loomis, CA',\n        description: 'Industrial Property with 8 units',\n        image: 'property.jpg',\n        largeImage: 'large_property.jpg',\n        price: 25000000,\n    };\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type ==='number' ? parseFloat(value) : value;\n        this.setState({ [name]: val });\n    };\n\n    render() {\n        return (\n            <Query \n                query={SINGLE_ITEM_QUERY} \n                variables={{ \n                    id: this.props.id,\n                }}\n            >\n                {({ data, loading }) => {\n                    if (loading) return <p>Loading...</p>;\n                    return(    \n                    <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\n                        {(createItem, { loading, error }) => (\n\n                            <Form \n                            onSubmit={async e => {\n                                //Stop the form from submitting\n                                e.preventDefault();\n                                // call the mutation\n                                const res = await createItem();\n                                // change them to the single item page\n                                console.log(res);\n                                Router.push({\n                                    pathname: '/item',\n                                    query: { id: res.data.createItem.id },\n                                });\n                            }}\n                    >\n                    <Error error={error} />\n                    <fieldset disabled={loading} aria-busy={loading}>\n        \n                        <label htmlFor=\"title\">\n                         Title\n                         <input \n                            type=\"text\" \n                            id=\"title\" \n                            name=\"title\" \n                            placeholder=\"Title\" \n                            required \n                            defaultValue={data.item.title}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n\n                    <label htmlFor=\"price\">\n                        Amount\n                        <input \n                            type=\"number\" \n                            id=\"price\" \n                            name=\"price\" \n                            placeholder=\"price\" \n                            required \n                            defaultValue={data.item.price}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n\n                    <label htmlFor=\"description\">\n                        Description\n                        <textarea\n                            id=\"description\" \n                            name=\"description\" \n                            placeholder=\"Enter A Description\" \n                            required \n                            defaultValue={data.item.description}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n                    <button type=\"submit\">Save Changes</button>\n                </fieldset>\n              </Form>\n            )}\n           </Mutation>\n          );\n        }}\n        </Query>\n      );\n    }\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION as UPDATE_ITEM_MUTATION };"]},"metadata":{},"sourceType":"module"}