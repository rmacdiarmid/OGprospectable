{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/DeleteItem.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation DELETE_ITEM_MUTATION($id: ID!) {\\n        deleteItem(id: $id) {\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nvar DELETE_ITEM_MUTATION = gql(_templateObject());\n\nupdate = function update(cache, payload) {\n  //manually update the cache on the client, so it matches the server\n  // 1. Read the cache for the items we want\n  var data = cache.readQuery({\n    query: ALL_ITEMS_QUERY\n  });\n  console.log(data); // 2. Filter the deleted itemout of the page\n\n  data.items = data.items.filter(function (item) {\n    return item.id !== payload.data.deleteItem.id;\n  }); // 3. Put the items back!\n\n  cache.writeQuery({\n    query: ALL_ITEMS_QUERY,\n    data: data\n  });\n};\n\nvar DeleteItem = /*#__PURE__*/function (_Component) {\n  _inherits(DeleteItem, _Component);\n\n  var _super = _createSuper(DeleteItem);\n\n  function DeleteItem() {\n    _classCallCheck(this, DeleteItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DeleteItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return __jsx(Mutation, {\n        mutation: DELETE_ITEM_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, function (deleteItem, _ref) {\n        var error = _ref.error;\n        return __jsx(\"button\", {\n          onClick: function onClick() {\n            if (confirm('Are you sure you want to delete this Bro?')) {\n              deleteItem();\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        }, _this.props.children);\n      });\n    }\n  }]);\n\n  return DeleteItem;\n}(Component);\n\nexport default DeleteItem;","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/DeleteItem.js"],"names":["React","Component","Mutation","gql","DELETE_ITEM_MUTATION","update","cache","payload","data","readQuery","query","ALL_ITEMS_QUERY","console","log","items","filter","item","id","deleteItem","writeQuery","DeleteItem","props","error","confirm","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;;AAOAE,MAAM,GAAG,gBAACC,KAAD,EAAQC,OAAR,EAAoB;AACzB;AACA;AACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAiB;AAAEC,IAAAA,KAAK,EAAEC;AAAT,GAAjB,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAJyB,CAKzB;;AACAA,EAAAA,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACM,KAAL,CAAWC,MAAX,CAAkB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYV,OAAO,CAACC,IAAR,CAAaU,UAAb,CAAwBD,EAAxC;AAAA,GAAtB,CAAb,CANyB,CAOzB;;AACAX,EAAAA,KAAK,CAACa,UAAN,CAAiB;AAAET,IAAAA,KAAK,EAAEC,eAAT;AAA0BH,IAAAA,IAAI,EAAJA;AAA1B,GAAjB;AACH,CATD;;IAWMY,U;;;;;;;;;;;;;6BACO;AAAA;;AACL,aACI,MAAC,QAAD;AAAU,QAAA,QAAQ,EAAEhB,oBAApB;AAA0C,QAAA,SAAS,EAAE;AACjDa,UAAAA,EAAE,EAAE,KAAKI,KAAL,CAAWJ;AADkC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,UAACC,UAAD;AAAA,YAAeI,KAAf,QAAeA,KAAf;AAAA,eACD;AAAQ,UAAA,OAAO,EAAE,mBAAM;AACnB,gBAAGC,OAAO,CAAC,2CAAD,CAAV,EAAyD;AACrDL,cAAAA,UAAU;AACb;AACJ,WAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII,KAAI,CAACG,KAAL,CAAWG,QAJf,CADC;AAAA,OAFL,CADJ;AAYH;;;;EAdoBvB,S;;AAiBzB,eAAemB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst DELETE_ITEM_MUTATION = gql`\n    mutation DELETE_ITEM_MUTATION($id: ID!) {\n        deleteItem(id: $id) {\n            id\n        }\n    }\n`;\nupdate = (cache, payload) => {\n    //manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery ({ query: ALL_ITEMS_QUERY });\n    console.log(data);\n    // 2. Filter the deleted itemout of the page\n    data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n    // 3. Put the items back!\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data})\n};\n\nclass DeleteItem extends Component {\n    render() {\n        return (\n            <Mutation mutation={DELETE_ITEM_MUTATION} variables={{\n                id: this.props.id }}>\n                {(deleteItem, { error }) => (\n                <button onClick={() => {\n                    if(confirm('Are you sure you want to delete this Bro?')) {\n                        deleteItem();\n                    }\n                }}>{this.props.children}</button>\n            )}\n           </Mutation>\n        );\n    }\n}\n\nexport default DeleteItem;"]},"metadata":{},"sourceType":"module"}