{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Pagination.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nconst PAGINATION_QUERY = gql`\n    query PAGINATION_QUERY {\n        itemsConnection {\n            aggregate {\n                count\n            }\n        }\n    }\n`;\n\nconst Pagination = props => __jsx(Query, {\n  query: PAGINATION_QUERY,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }\n}, ({\n  data,\n  loading,\n  error\n}) => {\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 37\n    }\n  }, \"Loading...\");\n  const count = data.itemsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  const page = props.page;\n  return __jsx(PaginationStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, \"Prospectable! - \", page, \" of \", pages, \" \")), __jsx(Link, {\n    prefetch: true,\n    href: {\n      pathname: 'items',\n      query: {\n        page: page - 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    className: \"prev\",\n    \"aria-disabled\": page <= 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, \"\\u2190 Prev\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Page \", props.page, \" of \", pages), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, count, \" Items Total\"));\n});\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Pagination.js"],"names":["React","Component","gql","Query","Head","Link","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","props","data","loading","error","count","itemsConnection","aggregate","pages","Math","ceil","page","pathname","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAGA,MAAMC,gBAAgB,GAAGN,GAAI;;;;;;;;CAA7B;;AAUA,MAAMO,UAAU,GAAGC,KAAK,IAEhB,MAAC,KAAD;AAAO,EAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAAC;AAAEG,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA8B;AAC3B,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,QAAME,KAAK,GAAGH,IAAI,CAACI,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,OAAlB,CAAd;AACA,QAAMa,IAAI,GAAGV,KAAK,CAACU,IAAnB;AACA,SACI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwBA,IAAxB,UAAkCH,KAAlC,MADJ,CADJ,EAII,MAAC,IAAD;AACA,IAAA,QAAQ,MADR;AAEA,IAAA,IAAI,EAAE;AACFI,MAAAA,QAAQ,EAAE,OADR;AAEFC,MAAAA,KAAK,EAAE;AAAEF,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFL,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,qBAAeA,IAAI,IAAI,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,CAJJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACMV,KAAK,CAACU,IADZ,UACsBH,KADtB,CAZJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,iBAfJ,CADJ;AAmBH,CAzBL,CAFR;;AA+BA,eAAeL,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\n\n\nconst PAGINATION_QUERY = gql`\n    query PAGINATION_QUERY {\n        itemsConnection {\n            aggregate {\n                count\n            }\n        }\n    }\n`;\n\nconst Pagination = props => (\n    \n        <Query query={PAGINATION_QUERY}>\n            {({ data, loading, error }) => {\n                if (loading) return <p>Loading...</p>;\n                const count = data.itemsConnection.aggregate.count;\n                const pages = Math.ceil(count / perPage);\n                const page = props.page;\n                return (\n                    <PaginationStyles>\n                        <Head>\n                            <title>Prospectable! - {page} of {pages} </title>\n                        </Head>\n                        <Link \n                        prefetch\n                        href={{ \n                            pathname: 'items',\n                            query: { page: page - 1 }\n                        }}>\n                            <a className=\"prev\" aria-disabled={page <= 1} >&#8592; Prev</a>\n                        </Link>\n                        <p>\n                        Page {props.page} of {pages}\n                        </p>\n                        <p>{count} Items Total</p>\n                    </PaginationStyles>\n                );\n            }}\n        </Query>\n);\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}