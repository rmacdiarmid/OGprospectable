{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Permissions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nconst possiblePermissions = ['ADMIN', 'USER', 'ITEMCREATE', 'ITEMUPDATE', 'ITEMDELETE', 'PERMISSIONUPDATE'];\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst Permissions = props => __jsx(Query, {\n  query: ALL_USERS_QUERY,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, ({\n  data,\n  loading,\n  error\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}, __jsx(Error, {\n  error: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }\n}), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }\n}, \"Manage Permissions\"), __jsx(Table, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 11\n  }\n}, __jsx(\"thead\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }\n}, __jsx(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 15\n  }\n}, __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 17\n  }\n}, \"Name\"), __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 17\n  }\n}, \"Email\"), possiblePermissions.map(permission => __jsx(\"th\", {\n  key: permission,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 56\n  }\n}, permission)), __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 17\n  }\n}, \"\\uD83D\\uDC47\\uD83C\\uDFFB\"))), __jsx(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }\n}, data.users.map(user => __jsx(UserPermissions, {\n  user: user,\n  key: user.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 44\n  }\n})))))));\n\nclass UserPermissions extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      permissions: this.props.user.permissions\n    });\n\n    _defineProperty(this, \"handlePermissionChange\", e => {\n      const checkbox = e.target; // take a copy of the current permissions\n\n      let updatedPermissions = [...this.state.permissions]; // figure out if we need to remove or add this permission\n\n      if (checkbox.checked) {\n        // add it in!\n        updatedPermissions.push(checkbox.value);\n      } else {\n        updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n      }\n\n      this.setState({\n        permissions: updatedPermissions\n      });\n      console.log(updatedPermissions);\n    });\n  }\n\n  render() {\n    const user = this.props.user;\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, user.name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, user.email), possiblePermissions.map(permission => __jsx(\"td\", {\n      key: permission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      htmlFor: `${user.id}-permission-${permission}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.permissions.includes(permission),\n      value: permission,\n      onChange: this.handlePermissionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    })))), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, __jsx(SickButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Update\")));\n  }\n\n}\n\n_defineProperty(UserPermissions, \"propTypes\", {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.string,\n    permissions: PropTypes.array\n  }).isRequired\n});\n\nexport default Permissions;","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Permissions.js"],"names":["Query","Error","gql","Table","SickButton","PropTypes","possiblePermissions","ALL_USERS_QUERY","Permissions","props","data","loading","error","map","permission","users","user","id","UserPermissions","React","Component","permissions","e","checkbox","target","updatedPermissions","state","checked","push","value","filter","setState","console","log","render","name","email","includes","handlePermissionChange","shape","string","array","isRequired"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,mBAAmB,GAAG,CAC1B,OAD0B,EAE1B,MAF0B,EAG1B,YAH0B,EAI1B,YAJ0B,EAK1B,YAL0B,EAM1B,kBAN0B,CAA5B;AASA,MAAMC,eAAe,GAAGL,GAAI;;;;;;;;;CAA5B;;AAWA,MAAMM,WAAW,GAAGC,KAAK,IACvB,MAAC,KAAD;AAAO,EAAA,KAAK,EAAEF,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEG,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD;AAAO,EAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGGN,mBAAmB,CAACO,GAApB,CAAwBC,UAAU,IAAI;AAAI,EAAA,GAAG,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsBA,UAAtB,CAAtC,CAHH,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAQJ,IAAI,CAACK,KAAL,CAAWF,GAAX,CAAeG,IAAI,IAAI,MAAC,eAAD;AAAiB,EAAA,IAAI,EAAEA,IAAvB;AAA6B,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvB,CAAR,CATF,CAFF,CAFF,CAFJ,CADF;;AAwBA,MAAMC,eAAN,SAA8BC,KAAK,CAACC,SAApC,CAA8C;AAAA;AAAA;;AAAA,mCASpC;AACNC,MAAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWO,IAAX,CAAgBK;AADvB,KAToC;;AAAA,oDAYnBC,CAAC,IAAI;AAC5B,YAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAnB,CAD4B,CAE5B;;AACA,UAAIC,kBAAkB,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWL,WAAf,CAAzB,CAH4B,CAI5B;;AACA,UAAIE,QAAQ,CAACI,OAAb,EAAsB;AACpB;AACAF,QAAAA,kBAAkB,CAACG,IAAnB,CAAwBL,QAAQ,CAACM,KAAjC;AACD,OAHD,MAGO;AACLJ,QAAAA,kBAAkB,GAAGA,kBAAkB,CAACK,MAAnB,CAA0BhB,UAAU,IAAIA,UAAU,KAAKS,QAAQ,CAACM,KAAhE,CAArB;AACD;;AACD,WAAKE,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEI;AAAf,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,kBAAZ;AACD,KAzB2C;AAAA;;AA0B5CS,EAAAA,MAAM,GAAG;AACP,UAAMlB,IAAI,GAAG,KAAKP,KAAL,CAAWO,IAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACmB,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKnB,IAAI,CAACoB,KAAV,CAFF,EAGG9B,mBAAmB,CAACO,GAApB,CAAwBC,UAAU,IACjC;AAAI,MAAA,GAAG,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAG,GAAEE,IAAI,CAACC,EAAG,eAAcH,UAAW,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAE,KAAKY,KAAL,CAAWL,WAAX,CAAuBgB,QAAvB,CAAgCvB,UAAhC,CAFX;AAGE,MAAA,KAAK,EAAEA,UAHT;AAIE,MAAA,QAAQ,EAAE,KAAKwB,sBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADD,CAHH,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAfF,CADF;AAqBD;;AAjD2C;;gBAAxCpB,e,eACe;AACjBF,EAAAA,IAAI,EAAEX,SAAS,CAACkC,KAAV,CAAgB;AACpBJ,IAAAA,IAAI,EAAE9B,SAAS,CAACmC,MADI;AAEpBJ,IAAAA,KAAK,EAAE/B,SAAS,CAACmC,MAFG;AAGpBvB,IAAAA,EAAE,EAAEZ,SAAS,CAACmC,MAHM;AAIpBnB,IAAAA,WAAW,EAAEhB,SAAS,CAACoC;AAJH,GAAhB,EAKHC;AANc,C;;AAmDrB,eAAelC,WAAf","sourcesContent":["import { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE',\n];\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst Permissions = props => (\n  <Query query={ALL_USERS_QUERY}>\n    {({ data, loading, error }) => (\n      <div>\n        <Error error={error} />\n        <div>\n          <h2>Manage Permissions</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\n                <th>👇🏻</th>\n              </tr>\n            </thead>\n            <tbody>{data.users.map(user => <UserPermissions user={user} key={user.id} />)}</tbody>\n          </Table>\n        </div>\n      </div>\n    )}\n  </Query>\n);\n\nclass UserPermissions extends React.Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired,\n  };\n  state = {\n    permissions: this.props.user.permissions,\n  };\n  handlePermissionChange = e => {\n    const checkbox = e.target;\n    // take a copy of the current permissions\n    let updatedPermissions = [...this.state.permissions];\n    // figure out if we need to remove or add this permission\n    if (checkbox.checked) {\n      // add it in!\n      updatedPermissions.push(checkbox.value);\n    } else {\n      updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n    }\n    this.setState({ permissions: updatedPermissions });\n    console.log(updatedPermissions);\n  };\n  render() {\n    const user = this.props.user;\n    return (\n      <tr>\n        <td>{user.name}</td>\n        <td>{user.email}</td>\n        {possiblePermissions.map(permission => (\n          <td key={permission}>\n            <label htmlFor={`${user.id}-permission-${permission}`}>\n              <input\n                type=\"checkbox\"\n                checked={this.state.permissions.includes(permission)}\n                value={permission}\n                onChange={this.handlePermissionChange}\n              />\n            </label>\n          </td>\n        ))}\n        <td>\n          <SickButton>Update</SickButton>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default Permissions\n"]},"metadata":{},"sourceType":"module"}