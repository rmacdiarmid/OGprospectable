{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/UpdateItem.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UPDATE_ITEM_MUTATION(\\n        $title: String!\\n        $description: String!\\n        $price: Int!\\n    )   {\\n        createItem(\\n            title: $title\\n            description: $description\\n            price: $price\\n        ) {\\n            id\\n            title\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ITEM_QUERY($id: ID!) {\\n        item(where: { id: $id }) {\\n            id\\n            title\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nvar UPDATE_ITEM_MUTATION = gql(_templateObject2());\n\nvar UpdateItem = /*#__PURE__*/function (_Component) {\n  _inherits(UpdateItem, _Component);\n\n  var _super = _createSuper(UpdateItem);\n\n  function UpdateItem() {\n    var _this;\n\n    _classCallCheck(this, UpdateItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      title: '122 Main St. Loomis, CA',\n      description: 'Industrial Property with 8 units',\n      image: 'property.jpg',\n      largeImage: 'large_property.jpg',\n      price: 25000000\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n      var val = type === 'number' ? parseFloat(value) : value;\n\n      _this.setState(_defineProperty({}, name, val));\n    });\n\n    return _this;\n  }\n\n  _createClass(UpdateItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Query, {\n        query: SINGLE_ITEM_QUERY,\n        variables: {\n          id: this.props.id\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n        if (loading) return __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 41\n          }\n        }, \"Loading...\");\n        return __jsx(Mutation, {\n          mutation: UPDATE_ITEM_MUTATION,\n          variables: _this2.state,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, function (updateItem, _ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error;\n          return __jsx(Form, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 27\n            }\n          }, __jsx(Error, {\n            error: error,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }\n          }), __jsx(\"fieldset\", {\n            disabled: loading,\n            \"aria-busy\": loading,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }\n          }, __jsx(\"label\", {\n            htmlFor: \"title\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }\n          }, \"Title\", __jsx(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            placeholder: \"Title\",\n            required: true,\n            defaultValue: data.item.title,\n            onChange: _this2.handleChange,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }\n          })), __jsx(\"label\", {\n            htmlFor: \"price\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }\n          }, \"Amount\", __jsx(\"input\", {\n            type: \"number\",\n            id: \"price\",\n            name: \"price\",\n            placeholder: \"price\",\n            required: true,\n            defaultValue: data.item.price,\n            onChange: _this2.handleChange,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }\n          })), __jsx(\"label\", {\n            htmlFor: \"description\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }\n          }, \"Description\", __jsx(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Enter A Description\",\n            required: true,\n            defaultValue: data.item.description,\n            onChange: _this2.handleChange,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }\n          })), __jsx(\"button\", {\n            type: \"submit\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }\n          }, \"Save Changes\")));\n        });\n      });\n    }\n  }]);\n\n  return UpdateItem;\n}(Component);\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/UpdateItem.js"],"names":["React","Component","Mutation","Query","gql","Router","Form","formatMoney","Error","SINGLE_ITEM_QUERY","UPDATE_ITEM_MUTATION","UpdateItem","title","description","image","largeImage","price","e","target","name","type","value","val","parseFloat","setState","id","props","data","loading","state","updateItem","error","item","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        item(where: { id: $id }) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n    mutation UPDATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n    )   {\n        createItem(\n            title: $title\n            description: $description\n            price: $price\n        ) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\n\n\nclass UpdateItem extends Component {\n    state = {\n        title: '122 Main St. Loomis, CA',\n        description: 'Industrial Property with 8 units',\n        image: 'property.jpg',\n        largeImage: 'large_property.jpg',\n        price: 25000000,\n    };\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type ==='number' ? parseFloat(value) : value;\n        this.setState({ [name]: val });\n    };\n\n    render() {\n        return (\n            <Query \n                query={SINGLE_ITEM_QUERY} \n                variables={{ \n                    id: this.props.id,\n                }}\n            >\n                {({ data, loading }) => {\n                    if (loading) return <p>Loading...</p>;\n                    return(    \n                    <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\n                        {(updateItem, { loading, error }) => (\n\n                          <Form \n                        \n                          >\n                            <Error error={error} />\n                            <fieldset disabled={loading} aria-busy={loading}>\n        \n                            <label htmlFor=\"title\">\n                                Title\n                                <input \n                                    type=\"text\" \n                                    id=\"title\" \n                                    name=\"title\" \n                                    placeholder=\"Title\" \n                                    required \n                                    defaultValue={data.item.title}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"price\">\n                                Amount\n                                <input \n                                    type=\"number\" \n                                    id=\"price\" \n                                    name=\"price\" \n                                    placeholder=\"price\" \n                                    required \n                                    defaultValue={data.item.price}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"description\">\n                                Description\n                                <textarea\n                                    id=\"description\" \n                                    name=\"description\" \n                                    placeholder=\"Enter A Description\" \n                                    required \n                                    defaultValue={data.item.description}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <button type=\"submit\">Save Changes</button>\n                            </fieldset>\n                          </Form>\n                        )}\n                    </Mutation>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION as UPDATE_ITEM_MUTATION };"]},"metadata":{},"sourceType":"module"}