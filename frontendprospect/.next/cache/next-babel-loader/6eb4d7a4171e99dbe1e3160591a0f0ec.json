{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/DeleteItem.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nconst DELETE_ITEM_MUTATION = gql`\n    mutation DELETE_ITEM_MUTATION($id: ID!) {\n        deleteItem(id: $id) {\n            id\n        }\n    }\n`;\n\nupdate = (cache, payload) => {\n  //manually update the cache on the client, so it matches the server\n  // 1. Read the cache for the items we want\n  const data = cache.readQuery({\n    query: ALL_ITEMS_QUERY\n  });\n  console.log(data); // 2. Filter the deleted itemout of the page\n\n  data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id); // 3. Put the items back!\n\n  cache.writeQuery({\n    query: ALL_ITEMS_QUERY,\n    data\n  });\n};\n\nclass DeleteItem extends Component {\n  render() {\n    return __jsx(Mutation, {\n      mutation: DELETE_ITEM_MUTATION,\n      variables: {\n        id: this.props.id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, (deleteItem, {\n      error\n    }) => __jsx(\"button\", {\n      onClick: () => {\n        if (confirm('Are you sure you want to delete this Bro?')) {\n          deleteItem();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, this.props.children));\n  }\n\n}\n\nexport default DeleteItem;","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/DeleteItem.js"],"names":["React","Component","Mutation","gql","DELETE_ITEM_MUTATION","update","cache","payload","data","readQuery","query","ALL_ITEMS_QUERY","console","log","items","filter","item","id","deleteItem","writeQuery","DeleteItem","render","props","error","confirm","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,oBAAoB,GAAGD,GAAI;;;;;;CAAjC;;AAOAE,MAAM,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzB;AACA;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAiB;AAAEC,IAAAA,KAAK,EAAEC;AAAT,GAAjB,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAJyB,CAKzB;;AACAA,EAAAA,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACM,KAAL,CAAWC,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYV,OAAO,CAACC,IAAR,CAAaU,UAAb,CAAwBD,EAA9D,CAAb,CANyB,CAOzB;;AACAX,EAAAA,KAAK,CAACa,UAAN,CAAiB;AAAET,IAAAA,KAAK,EAAEC,eAAT;AAA0BH,IAAAA;AAA1B,GAAjB;AACH,CATD;;AAWA,MAAMY,UAAN,SAAyBnB,SAAzB,CAAmC;AAC/BoB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,QAAD;AAAU,MAAA,QAAQ,EAAEjB,oBAApB;AAA0C,MAAA,SAAS,EAAE;AACjDa,QAAAA,EAAE,EAAE,KAAKK,KAAL,CAAWL;AADkC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,CAACC,UAAD,EAAa;AAAEK,MAAAA;AAAF,KAAb,KACD;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnB,YAAGC,OAAO,CAAC,2CAAD,CAAV,EAAyD;AACrDN,UAAAA,UAAU;AACb;AACJ,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,KAAKI,KAAL,CAAWG,QAJf,CAHJ,CADJ;AAYH;;AAd8B;;AAiBnC,eAAeL,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst DELETE_ITEM_MUTATION = gql`\n    mutation DELETE_ITEM_MUTATION($id: ID!) {\n        deleteItem(id: $id) {\n            id\n        }\n    }\n`;\nupdate = (cache, payload) => {\n    //manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery ({ query: ALL_ITEMS_QUERY });\n    console.log(data);\n    // 2. Filter the deleted itemout of the page\n    data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n    // 3. Put the items back!\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data})\n};\n\nclass DeleteItem extends Component {\n    render() {\n        return (\n            <Mutation mutation={DELETE_ITEM_MUTATION} variables={{\n                id: this.props.id }}>\n                {(deleteItem, { error }) => (\n                <button onClick={() => {\n                    if(confirm('Are you sure you want to delete this Bro?')) {\n                        deleteItem();\n                    }\n                }}>{this.props.children}</button>\n            )}\n           </Mutation>\n        );\n    }\n}\n\nexport default DeleteItem;"]},"metadata":{},"sourceType":"module"}