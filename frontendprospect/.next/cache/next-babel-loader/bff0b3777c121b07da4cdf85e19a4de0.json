{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Permissions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nconst possiblePermissions = ['ADMIN', 'USER', 'ITEMCREATE', 'ITEMUPDATE', 'ITEMDELETE', 'PERMISSIONPUPDATE'];\nconst ALL_USERS_QUERY = gql`\n    query {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = props => __jsx(Query, {\n  query: ALL_USERS_QUERY,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, ({\n  data,\n  loading,\n  error\n}) => console.log(data) || __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }\n}, __jsx(Error, {\n  error: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 15\n  }\n}), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 15\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 19\n  }\n}, \"Manage Permissions\"), __jsx(Table, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 19\n  }\n}, __jsx(\"thead\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }\n}, __jsx(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 27\n  }\n}, __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 31\n  }\n}, \"Name\"), __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 31\n  }\n}, \"Email\"), possiblePermissions.map(permission => __jsx(\"th\", {\n  key: permission,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 31\n  }\n}, permission)), __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 31\n  }\n}, \"\\uD83D\\uDC47\"))), __jsx(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }\n}, data.users.map(user => __jsx(UserPermissions, {\n  user: user,\n  key: user.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 47\n  }\n})))))));\n\nclass UserPermissions extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      permissions: this.props.user.permissions\n    });\n  }\n\n  render() {\n    const user = this.props.user;\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, user.name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, user.email), possiblePermissions.map(permission => __jsx(\"td\", {\n      key: permission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      htmlFor: `${user.id}-permission-${permission}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    })))), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, __jsx(SickButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Update\")));\n  }\n\n}\n\n_defineProperty(UserPermissions, \"propTypes\", {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.string,\n    permissions: PropTypes.array\n  }).isRequired\n});\n\nexport default Permissions;","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Permissions.js"],"names":["Query","Error","gql","Table","SickButton","PropTypes","possiblePermissions","ALL_USERS_QUERY","Permissions","props","data","loading","error","console","log","map","permission","users","user","id","UserPermissions","React","Component","permissions","render","name","email","shape","string","array","isRequired"],"mappings":"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","sourcesContent":["import { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n    'ADMIN',\n    'USER',\n    'ITEMCREATE',\n    'ITEMUPDATE',\n    'ITEMDELETE',\n    'PERMISSIONPUPDATE',\n];\n\nconst ALL_USERS_QUERY = gql`\n    query {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = (props) => (\n    <Query query={ALL_USERS_QUERY}>\n        {({ data, loading, error }) => \n        console.log(data) || (\n            <div>\n              <Error error={error} />\n              <div>\n                  <h2>Manage Permissions</h2>\n                  <Table>\n                      <thead>\n                          <tr>\n                              <th>Name</th>\n                              <th>Email</th>\n                              {possiblePermissions.map(permission => \n                              <th key={permission}>{permission}</th>)}\n                              <th>ðŸ‘‡</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                      {data.users.map(user => <UserPermissions user={user} key={user.id} />)}\n                      </tbody>\n                  </Table>\n              </div>\n            </div>\n        )}\n    </Query>\n);\n\nclass UserPermissions extends React.Component {\n    static propTypes = {\n        user: PropTypes.shape({\n            name: PropTypes.string,\n            email: PropTypes.string,\n            id: PropTypes.string,\n            permissions: PropTypes.array,\n        }).isRequired,\n    };\n    state = {\n        permissions:this.props.user.permissions,\n    };\n    render() {\n        const user = this.props.user;\n        return (\n            <tr>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                {possiblePermissions.map(permission => (\n                    <td key={permission}>\n                        <label htmlFor={`${user.id}-permission-${permission}`}>\n                            <input type=\"checkbox\" checked=\"true\" />\n                        </label>\n                    </td>\n                ))}\n                <td>\n                    <SickButton>Update</SickButton>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default Permissions;"]},"metadata":{},"sourceType":"module"}