webpackHotUpdate("static/development/pages/index.js",{

/***/ "./components/Pagination.js":
/*!**********************************!*\
  !*** ./components/Pagination.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_PaginationStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/PaginationStyles */ \"./components/styles/PaginationStyles.js\");\n/* harmony import */ var graphql_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql-tools */ \"./node_modules/graphql-tools/dist/index.js\");\n/* harmony import */ var graphql_tools__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(graphql_tools__WEBPACK_IMPORTED_MODULE_2__);\nvar _this = undefined,\n    _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendprospect/components/Pagination.js\";\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\n\n\nvar Pagination = function Pagination(props) {\n  return __jsx(_styles_PaginationStyles__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, \"Hi I'm the Pagination\"));\n};\n\n_c = Pagination;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Pagination);\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL1BhZ2luYXRpb24uanM/MmIzMyJdLCJuYW1lcyI6WyJQYWdpbmF0aW9uIiwicHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQUMsS0FBSztBQUFBLFNBQ3BCLE1BQUMsZ0VBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUNJO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNkJBREosQ0FEb0I7QUFBQSxDQUF4Qjs7S0FBTUQsVTtBQU1TQSx5RUFBZiIsImZpbGUiOiIuL2NvbXBvbmVudHMvUGFnaW5hdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUGFnaW5hdGlvblN0eWxlcyBmcm9tICcuL3N0eWxlcy9QYWdpbmF0aW9uU3R5bGVzJztcbmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10b29scyc7XG5cbmNvbnN0IFBhZ2luYXRpb24gPSBwcm9wcyA9PiAoXG4gICAgPFBhZ2luYXRpb25TdHlsZXM+XG4gICAgICAgIDxwPkhpIEknbSB0aGUgUGFnaW5hdGlvbjwvcD5cbiAgICA8L1BhZ2luYXRpb25TdHlsZXM+XG4pXG5cbmV4cG9ydCBkZWZhdWx0IFBhZ2luYXRpb247Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Pagination.js\n");

/***/ }),

/***/ "./node_modules/deprecated-decorator/bld/index.js":
/*!********************************************************!*\
  !*** ./node_modules/deprecated-decorator/bld/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\r\n    Deprecated Decorator v0.1\r\n    https://github.com/vilic/deprecated-decorator\r\n*/\r\n\r\n/** @internal */\r\nexports.options = {\r\n    getWarner: undefined\r\n};\r\nfunction createWarner(type, name, alternative, version, url) {\r\n    var warnedPositions = {};\r\n    return function () {\r\n        var stack = (new Error()).stack || '';\r\n        var at = (stack.match(/(?:\\s+at\\s.+){2}\\s+at\\s(.+)/) || [undefined, ''])[1];\r\n        if (/\\)$/.test(at)) {\r\n            at = at.match(/[^(]+(?=\\)$)/)[0];\r\n        }\r\n        else {\r\n            at = at.trim();\r\n        }\r\n        if (at in warnedPositions) {\r\n            return;\r\n        }\r\n        warnedPositions[at] = true;\r\n        var message;\r\n        switch (type) {\r\n            case 'class':\r\n                message = 'Class';\r\n                break;\r\n            case 'property':\r\n                message = 'Property';\r\n                break;\r\n            case 'method':\r\n                message = 'Method';\r\n                break;\r\n            case 'function':\r\n                message = 'Function';\r\n                break;\r\n        }\r\n        message += \" `\" + name + \"` has been deprecated\";\r\n        if (version) {\r\n            message += \" since version \" + version;\r\n        }\r\n        if (alternative) {\r\n            message += \", use `\" + alternative + \"` instead\";\r\n        }\r\n        message += '.';\r\n        if (at) {\r\n            message += \"\\n    at \" + at;\r\n        }\r\n        if (url) {\r\n            message += \"\\nCheck out \" + url + \" for more information.\";\r\n        }\r\n        console.warn(message);\r\n    };\r\n}\r\nfunction decorateProperty(type, name, descriptor, alternative, version, url) {\r\n    var warner = (exports.options.getWarner || createWarner)(type, name, alternative, version, url);\r\n    descriptor = descriptor || {\r\n        writable: true,\r\n        enumerable: false,\r\n        configurable: true\r\n    };\r\n    var deprecatedDescriptor = {\r\n        enumerable: descriptor.enumerable,\r\n        configurable: descriptor.configurable\r\n    };\r\n    if (descriptor.get || descriptor.set) {\r\n        if (descriptor.get) {\r\n            deprecatedDescriptor.get = function () {\r\n                warner();\r\n                return descriptor.get.call(this);\r\n            };\r\n        }\r\n        if (descriptor.set) {\r\n            deprecatedDescriptor.set = function (value) {\r\n                warner();\r\n                return descriptor.set.call(this, value);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        var propertyValue_1 = descriptor.value;\r\n        deprecatedDescriptor.get = function () {\r\n            warner();\r\n            return propertyValue_1;\r\n        };\r\n        if (descriptor.writable) {\r\n            deprecatedDescriptor.set = function (value) {\r\n                warner();\r\n                propertyValue_1 = value;\r\n            };\r\n        }\r\n    }\r\n    return deprecatedDescriptor;\r\n}\r\nfunction decorateFunction(type, target, alternative, version, url) {\r\n    var name = target.name;\r\n    var warner = (exports.options.getWarner || createWarner)(type, name, alternative, version, url);\r\n    var fn = function () {\r\n        warner();\r\n        return target.apply(this, arguments);\r\n    };\r\n    for (var _i = 0, _a = Object.getOwnPropertyNames(target); _i < _a.length; _i++) {\r\n        var propertyName = _a[_i];\r\n        var descriptor = Object.getOwnPropertyDescriptor(target, propertyName);\r\n        if (descriptor.writable) {\r\n            fn[propertyName] = target[propertyName];\r\n        }\r\n        else if (descriptor.configurable) {\r\n            Object.defineProperty(fn, propertyName, descriptor);\r\n        }\r\n    }\r\n    return fn;\r\n}\r\nfunction deprecated() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i - 0] = arguments[_i];\r\n    }\r\n    var fn = args[args.length - 1];\r\n    if (typeof fn === 'function') {\r\n        fn = args.pop();\r\n    }\r\n    else {\r\n        fn = undefined;\r\n    }\r\n    var options = args[0];\r\n    var alternative;\r\n    var version;\r\n    var url;\r\n    if (typeof options === 'string') {\r\n        alternative = options;\r\n        version = args[1];\r\n        url = args[2];\r\n    }\r\n    else if (options) {\r\n        (alternative = options.alternative, version = options.version, url = options.url, options);\r\n    }\r\n    if (fn) {\r\n        return decorateFunction('function', fn, alternative, version, url);\r\n    }\r\n    return function (target, name, descriptor) {\r\n        if (typeof name === 'string') {\r\n            var type = descriptor && typeof descriptor.value === 'function' ?\r\n                'method' : 'property';\r\n            return decorateProperty(type, name, descriptor, alternative, version, url);\r\n        }\r\n        else if (typeof target === 'function') {\r\n            var constructor = decorateFunction('class', target, alternative, version, url);\r\n            var className = target.name;\r\n            for (var _i = 0, _a = Object.getOwnPropertyNames(constructor); _i < _a.length; _i++) {\r\n                var propertyName = _a[_i];\r\n                var descriptor_1 = Object.getOwnPropertyDescriptor(constructor, propertyName);\r\n                descriptor_1 = decorateProperty('class', className, descriptor_1, alternative, version, url);\r\n                if (descriptor_1.writable) {\r\n                    constructor[propertyName] = target[propertyName];\r\n                }\r\n                else if (descriptor_1.configurable) {\r\n                    Object.defineProperty(constructor, propertyName, descriptor_1);\r\n                }\r\n            }\r\n            return constructor;\r\n        }\r\n    };\r\n}\r\nexports.deprecated = deprecated;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = deprecated;\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/deprecated-decorator/bld/index.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/SchemaError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/SchemaError.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @schemaDefinition: A GraphQL type schema in shorthand\n// @resolvers: Definitions for resolvers to be merged with schema\nvar SchemaError = /** @class */ (function (_super) {\n    __extends(SchemaError, _super);\n    function SchemaError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        Error.captureStackTrace(_this, _this.constructor);\n        return _this;\n    }\n    return SchemaError;\n}(Error));\nexports.default = SchemaError;\n//# sourceMappingURL=SchemaError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL1NjaGVtYUVycm9yLmpzPzUzYzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0Isc0NBQXNDLGlCQUFpQixFQUFFO0FBQ3ZGLDZCQUE2Qix1REFBdUQ7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC9nZW5lcmF0ZS9TY2hlbWFFcnJvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyBAc2NoZW1hRGVmaW5pdGlvbjogQSBHcmFwaFFMIHR5cGUgc2NoZW1hIGluIHNob3J0aGFuZFxuLy8gQHJlc29sdmVyczogRGVmaW5pdGlvbnMgZm9yIHJlc29sdmVycyB0byBiZSBtZXJnZWQgd2l0aCBzY2hlbWFcbnZhciBTY2hlbWFFcnJvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU2NoZW1hRXJyb3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gU2NoZW1hRXJyb3IobWVzc2FnZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBtZXNzYWdlKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UoX3RoaXMsIF90aGlzLmNvbnN0cnVjdG9yKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gU2NoZW1hRXJyb3I7XG59KEVycm9yKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBTY2hlbWFFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjaGVtYUVycm9yLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/SchemaError.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/addResolveFunctionsToSchema.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/addResolveFunctionsToSchema.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/graphql-tools/dist/generate/index.js\");\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar transforms_1 = __webpack_require__(/*! ../transforms/transforms */ \"./node_modules/graphql-tools/dist/transforms/transforms.js\");\nvar _2 = __webpack_require__(/*! . */ \"./node_modules/graphql-tools/dist/generate/index.js\");\nvar ConvertEnumValues_1 = __webpack_require__(/*! ../transforms/ConvertEnumValues */ \"./node_modules/graphql-tools/dist/transforms/ConvertEnumValues.js\");\nfunction addResolveFunctionsToSchema(options, legacyInputResolvers, legacyInputValidationOptions) {\n    if (options instanceof graphql_1.GraphQLSchema) {\n        console.warn('The addResolveFunctionsToSchema function takes named options now; see IAddResolveFunctionsToSchemaOptions');\n        options = {\n            schema: options,\n            resolvers: legacyInputResolvers,\n            resolverValidationOptions: legacyInputValidationOptions,\n        };\n    }\n    var schema = options.schema, inputResolvers = options.resolvers, _a = options.resolverValidationOptions, resolverValidationOptions = _a === void 0 ? {} : _a, _b = options.inheritResolversFromInterfaces, inheritResolversFromInterfaces = _b === void 0 ? false : _b;\n    var _c = resolverValidationOptions.allowResolversNotInSchema, allowResolversNotInSchema = _c === void 0 ? false : _c, requireResolversForResolveType = resolverValidationOptions.requireResolversForResolveType;\n    var resolvers = inheritResolversFromInterfaces\n        ? _2.extendResolversFromInterfaces(schema, inputResolvers)\n        : inputResolvers;\n    // Used to map the external value of an enum to its internal value, when\n    // that internal value is provided by a resolver.\n    var enumValueMap = Object.create(null);\n    Object.keys(resolvers).forEach(function (typeName) {\n        var resolverValue = resolvers[typeName];\n        var resolverType = typeof resolverValue;\n        if (resolverType !== 'object' && resolverType !== 'function') {\n            throw new _1.SchemaError(\"\\\"\" + typeName + \"\\\" defined in resolvers, but has invalid value \\\"\" + resolverValue + \"\\\". A resolver's value \" +\n                \"must be of type object or function.\");\n        }\n        var type = schema.getType(typeName);\n        if (!type && typeName !== '__schema') {\n            if (allowResolversNotInSchema) {\n                return;\n            }\n            throw new _1.SchemaError(\"\\\"\" + typeName + \"\\\" defined in resolvers, but not in schema\");\n        }\n        Object.keys(resolverValue).forEach(function (fieldName) {\n            var _a;\n            if (fieldName.startsWith('__')) {\n                // this is for isTypeOf and resolveType and all the other stuff.\n                type[fieldName.substring(2)] = resolverValue[fieldName];\n                return;\n            }\n            if (type instanceof graphql_1.GraphQLScalarType) {\n                type[fieldName] = resolverValue[fieldName];\n                return;\n            }\n            if (type instanceof graphql_1.GraphQLEnumType) {\n                if (!type.getValue(fieldName)) {\n                    if (allowResolversNotInSchema) {\n                        return;\n                    }\n                    throw new _1.SchemaError(typeName + \".\" + fieldName + \" was defined in resolvers, but enum is not in schema\");\n                }\n                // We've encountered an enum resolver that is being used to provide an\n                // internal enum value.\n                // Reference: https://www.apollographql.com/docs/graphql-tools/scalars.html#internal-values\n                //\n                // We're storing a map of the current enums external facing value to\n                // its resolver provided internal value. This map is used to transform\n                // the current schema to a new schema that includes enums with the new\n                // internal value.\n                enumValueMap[type.name] = (_a = {},\n                    _a[fieldName] = resolverValue[fieldName],\n                    _a);\n                return;\n            }\n            // object type\n            var fields = getFieldsForType(type);\n            if (!fields) {\n                if (allowResolversNotInSchema) {\n                    return;\n                }\n                throw new _1.SchemaError(typeName + \" was defined in resolvers, but it's not an object\");\n            }\n            if (!fields[fieldName]) {\n                if (allowResolversNotInSchema) {\n                    return;\n                }\n                throw new _1.SchemaError(typeName + \".\" + fieldName + \" defined in resolvers, but not in schema\");\n            }\n            var field = fields[fieldName];\n            var fieldResolve = resolverValue[fieldName];\n            if (typeof fieldResolve === 'function') {\n                // for convenience. Allows shorter syntax in resolver definition file\n                setFieldProperties(field, { resolve: fieldResolve });\n            }\n            else {\n                if (typeof fieldResolve !== 'object') {\n                    throw new _1.SchemaError(\"Resolver \" + typeName + \".\" + fieldName + \" must be object or function\");\n                }\n                setFieldProperties(field, fieldResolve);\n            }\n        });\n    });\n    _2.checkForResolveTypeResolver(schema, requireResolversForResolveType);\n    // If there are any enum resolver functions (that are used to return\n    // internal enum values), create a new schema that includes enums with the\n    // new internal facing values.\n    var updatedSchema = transforms_1.applySchemaTransforms(schema, [new ConvertEnumValues_1.default(enumValueMap)]);\n    return updatedSchema;\n}\nfunction getFieldsForType(type) {\n    if (type instanceof graphql_1.GraphQLObjectType ||\n        type instanceof graphql_1.GraphQLInterfaceType) {\n        return type.getFields();\n    }\n    else {\n        return undefined;\n    }\n}\nfunction setFieldProperties(field, propertiesObj) {\n    Object.keys(propertiesObj).forEach(function (propertyName) {\n        field[propertyName] = propertiesObj[propertyName];\n    });\n}\nexports.default = addResolveFunctionsToSchema;\n//# sourceMappingURL=addResolveFunctionsToSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/addResolveFunctionsToSchema.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/addSchemaLevelResolveFunction.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/addSchemaLevelResolveFunction.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\n// wraps all resolve functions of query, mutation or subscription fields\n// with the provided function to simulate a root schema level resolve funciton\nfunction addSchemaLevelResolveFunction(schema, fn) {\n    // TODO test that schema is a schema, fn is a function\n    var rootTypes = [\n        schema.getQueryType(),\n        schema.getMutationType(),\n        schema.getSubscriptionType(),\n    ].filter(function (x) { return !!x; });\n    rootTypes.forEach(function (type) {\n        // XXX this should run at most once per request to simulate a true root resolver\n        // for graphql-js this is an approximation that works with queries but not mutations\n        var rootResolveFn = runAtMostOncePerRequest(fn);\n        var fields = type.getFields();\n        Object.keys(fields).forEach(function (fieldName) {\n            // XXX if the type is a subscription, a same query AST will be ran multiple times so we\n            // deactivate here the runOnce if it's a subscription. This may not be optimal though...\n            if (type === schema.getSubscriptionType()) {\n                fields[fieldName].resolve = wrapResolver(fields[fieldName].resolve, fn);\n            }\n            else {\n                fields[fieldName].resolve = wrapResolver(fields[fieldName].resolve, rootResolveFn);\n            }\n        });\n    });\n}\n// XXX badly named function. this doesn't really wrap, it just chains resolvers...\nfunction wrapResolver(innerResolver, outerResolver) {\n    return function (obj, args, ctx, info) {\n        return Promise.resolve(outerResolver(obj, args, ctx, info)).then(function (root) {\n            if (innerResolver) {\n                return innerResolver(root, args, ctx, info);\n            }\n            return graphql_1.defaultFieldResolver(root, args, ctx, info);\n        });\n    };\n}\n// XXX this function only works for resolvers\n// XXX very hacky way to remember if the function\n// already ran for this request. This will only work\n// if people don't actually cache the operation.\n// if they do cache the operation, they will have to\n// manually remove the __runAtMostOnce before every request.\nfunction runAtMostOncePerRequest(fn) {\n    var value;\n    var randomNumber = Math.random();\n    return function (root, args, ctx, info) {\n        if (!info.operation['__runAtMostOnce']) {\n            info.operation['__runAtMostOnce'] = {};\n        }\n        if (!info.operation['__runAtMostOnce'][randomNumber]) {\n            info.operation['__runAtMostOnce'][randomNumber] = true;\n            value = fn(root, args, ctx, info);\n        }\n        return value;\n    };\n}\nexports.default = addSchemaLevelResolveFunction;\n//# sourceMappingURL=addSchemaLevelResolveFunction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2FkZFNjaGVtYUxldmVsUmVzb2x2ZUZ1bmN0aW9uLmpzPzQ0MzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsaURBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixZQUFZLEVBQUU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvZ2VuZXJhdGUvYWRkU2NoZW1hTGV2ZWxSZXNvbHZlRnVuY3Rpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG4vLyB3cmFwcyBhbGwgcmVzb2x2ZSBmdW5jdGlvbnMgb2YgcXVlcnksIG11dGF0aW9uIG9yIHN1YnNjcmlwdGlvbiBmaWVsZHNcbi8vIHdpdGggdGhlIHByb3ZpZGVkIGZ1bmN0aW9uIHRvIHNpbXVsYXRlIGEgcm9vdCBzY2hlbWEgbGV2ZWwgcmVzb2x2ZSBmdW5jaXRvblxuZnVuY3Rpb24gYWRkU2NoZW1hTGV2ZWxSZXNvbHZlRnVuY3Rpb24oc2NoZW1hLCBmbikge1xuICAgIC8vIFRPRE8gdGVzdCB0aGF0IHNjaGVtYSBpcyBhIHNjaGVtYSwgZm4gaXMgYSBmdW5jdGlvblxuICAgIHZhciByb290VHlwZXMgPSBbXG4gICAgICAgIHNjaGVtYS5nZXRRdWVyeVR5cGUoKSxcbiAgICAgICAgc2NoZW1hLmdldE11dGF0aW9uVHlwZSgpLFxuICAgICAgICBzY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpLFxuICAgIF0uZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiAhIXg7IH0pO1xuICAgIHJvb3RUeXBlcy5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIC8vIFhYWCB0aGlzIHNob3VsZCBydW4gYXQgbW9zdCBvbmNlIHBlciByZXF1ZXN0IHRvIHNpbXVsYXRlIGEgdHJ1ZSByb290IHJlc29sdmVyXG4gICAgICAgIC8vIGZvciBncmFwaHFsLWpzIHRoaXMgaXMgYW4gYXBwcm94aW1hdGlvbiB0aGF0IHdvcmtzIHdpdGggcXVlcmllcyBidXQgbm90IG11dGF0aW9uc1xuICAgICAgICB2YXIgcm9vdFJlc29sdmVGbiA9IHJ1bkF0TW9zdE9uY2VQZXJSZXF1ZXN0KGZuKTtcbiAgICAgICAgdmFyIGZpZWxkcyA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgIE9iamVjdC5rZXlzKGZpZWxkcykuZm9yRWFjaChmdW5jdGlvbiAoZmllbGROYW1lKSB7XG4gICAgICAgICAgICAvLyBYWFggaWYgdGhlIHR5cGUgaXMgYSBzdWJzY3JpcHRpb24sIGEgc2FtZSBxdWVyeSBBU1Qgd2lsbCBiZSByYW4gbXVsdGlwbGUgdGltZXMgc28gd2VcbiAgICAgICAgICAgIC8vIGRlYWN0aXZhdGUgaGVyZSB0aGUgcnVuT25jZSBpZiBpdCdzIGEgc3Vic2NyaXB0aW9uLiBUaGlzIG1heSBub3QgYmUgb3B0aW1hbCB0aG91Z2guLi5cbiAgICAgICAgICAgIGlmICh0eXBlID09PSBzY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpKSB7XG4gICAgICAgICAgICAgICAgZmllbGRzW2ZpZWxkTmFtZV0ucmVzb2x2ZSA9IHdyYXBSZXNvbHZlcihmaWVsZHNbZmllbGROYW1lXS5yZXNvbHZlLCBmbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmaWVsZHNbZmllbGROYW1lXS5yZXNvbHZlID0gd3JhcFJlc29sdmVyKGZpZWxkc1tmaWVsZE5hbWVdLnJlc29sdmUsIHJvb3RSZXNvbHZlRm4pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbi8vIFhYWCBiYWRseSBuYW1lZCBmdW5jdGlvbi4gdGhpcyBkb2Vzbid0IHJlYWxseSB3cmFwLCBpdCBqdXN0IGNoYWlucyByZXNvbHZlcnMuLi5cbmZ1bmN0aW9uIHdyYXBSZXNvbHZlcihpbm5lclJlc29sdmVyLCBvdXRlclJlc29sdmVyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIGFyZ3MsIGN0eCwgaW5mbykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG91dGVyUmVzb2x2ZXIob2JqLCBhcmdzLCBjdHgsIGluZm8pKS50aGVuKGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICBpZiAoaW5uZXJSZXNvbHZlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBpbm5lclJlc29sdmVyKHJvb3QsIGFyZ3MsIGN0eCwgaW5mbyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZ3JhcGhxbF8xLmRlZmF1bHRGaWVsZFJlc29sdmVyKHJvb3QsIGFyZ3MsIGN0eCwgaW5mbyk7XG4gICAgICAgIH0pO1xuICAgIH07XG59XG4vLyBYWFggdGhpcyBmdW5jdGlvbiBvbmx5IHdvcmtzIGZvciByZXNvbHZlcnNcbi8vIFhYWCB2ZXJ5IGhhY2t5IHdheSB0byByZW1lbWJlciBpZiB0aGUgZnVuY3Rpb25cbi8vIGFscmVhZHkgcmFuIGZvciB0aGlzIHJlcXVlc3QuIFRoaXMgd2lsbCBvbmx5IHdvcmtcbi8vIGlmIHBlb3BsZSBkb24ndCBhY3R1YWxseSBjYWNoZSB0aGUgb3BlcmF0aW9uLlxuLy8gaWYgdGhleSBkbyBjYWNoZSB0aGUgb3BlcmF0aW9uLCB0aGV5IHdpbGwgaGF2ZSB0b1xuLy8gbWFudWFsbHkgcmVtb3ZlIHRoZSBfX3J1bkF0TW9zdE9uY2UgYmVmb3JlIGV2ZXJ5IHJlcXVlc3QuXG5mdW5jdGlvbiBydW5BdE1vc3RPbmNlUGVyUmVxdWVzdChmbikge1xuICAgIHZhciB2YWx1ZTtcbiAgICB2YXIgcmFuZG9tTnVtYmVyID0gTWF0aC5yYW5kb20oKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHJvb3QsIGFyZ3MsIGN0eCwgaW5mbykge1xuICAgICAgICBpZiAoIWluZm8ub3BlcmF0aW9uWydfX3J1bkF0TW9zdE9uY2UnXSkge1xuICAgICAgICAgICAgaW5mby5vcGVyYXRpb25bJ19fcnVuQXRNb3N0T25jZSddID0ge307XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpbmZvLm9wZXJhdGlvblsnX19ydW5BdE1vc3RPbmNlJ11bcmFuZG9tTnVtYmVyXSkge1xuICAgICAgICAgICAgaW5mby5vcGVyYXRpb25bJ19fcnVuQXRNb3N0T25jZSddW3JhbmRvbU51bWJlcl0gPSB0cnVlO1xuICAgICAgICAgICAgdmFsdWUgPSBmbihyb290LCBhcmdzLCBjdHgsIGluZm8pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gYWRkU2NoZW1hTGV2ZWxSZXNvbHZlRnVuY3Rpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGRTY2hlbWFMZXZlbFJlc29sdmVGdW5jdGlvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/addSchemaLevelResolveFunction.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/assertResolveFunctionsPresent.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/assertResolveFunctionsPresent.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/graphql-tools/dist/generate/index.js\");\nfunction assertResolveFunctionsPresent(schema, resolverValidationOptions) {\n    if (resolverValidationOptions === void 0) { resolverValidationOptions = {}; }\n    var _a = resolverValidationOptions.requireResolversForArgs, requireResolversForArgs = _a === void 0 ? false : _a, _b = resolverValidationOptions.requireResolversForNonScalar, requireResolversForNonScalar = _b === void 0 ? false : _b, _c = resolverValidationOptions.requireResolversForAllFields, requireResolversForAllFields = _c === void 0 ? false : _c;\n    if (requireResolversForAllFields &&\n        (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    _1.forEachField(schema, function (field, typeName, fieldName) {\n        // requires a resolve function for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolveFunction(field, typeName, fieldName);\n        }\n        // requires a resolve function on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolveFunction(field, typeName, fieldName);\n        }\n        // requires a resolve function on every field that returns a non-scalar type\n        if (requireResolversForNonScalar &&\n            !(graphql_1.getNamedType(field.type) instanceof graphql_1.GraphQLScalarType)) {\n            expectResolveFunction(field, typeName, fieldName);\n        }\n    });\n}\nfunction expectResolveFunction(field, typeName, fieldName) {\n    if (!field.resolve) {\n        console.warn(\n        // tslint:disable-next-line: max-line-length\n        \"Resolve function missing for \\\"\" + typeName + \".\" + fieldName + \"\\\". To disable this warning check https://github.com/apollostack/graphql-tools/issues/131\");\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new _1.SchemaError(\"Resolver \\\"\" + typeName + \".\" + fieldName + \"\\\" must be a function\");\n    }\n}\nexports.default = assertResolveFunctionsPresent;\n//# sourceMappingURL=assertResolveFunctionsPresent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2Fzc2VydFJlc29sdmVGdW5jdGlvbnNQcmVzZW50LmpzPzZmZGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsaURBQVM7QUFDakMsU0FBUyxtQkFBTyxDQUFDLDhEQUFHO0FBQ3BCO0FBQ0EsK0NBQStDLGdDQUFnQztBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvZ2VuZXJhdGUvYXNzZXJ0UmVzb2x2ZUZ1bmN0aW9uc1ByZXNlbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG52YXIgXzEgPSByZXF1aXJlKFwiLlwiKTtcbmZ1bmN0aW9uIGFzc2VydFJlc29sdmVGdW5jdGlvbnNQcmVzZW50KHNjaGVtYSwgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucykge1xuICAgIGlmIChyZXNvbHZlclZhbGlkYXRpb25PcHRpb25zID09PSB2b2lkIDApIHsgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucyA9IHt9OyB9XG4gICAgdmFyIF9hID0gcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucy5yZXF1aXJlUmVzb2x2ZXJzRm9yQXJncywgcmVxdWlyZVJlc29sdmVyc0ZvckFyZ3MgPSBfYSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYSwgX2IgPSByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zLnJlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXIsIHJlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXIgPSBfYiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYiwgX2MgPSByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zLnJlcXVpcmVSZXNvbHZlcnNGb3JBbGxGaWVsZHMsIHJlcXVpcmVSZXNvbHZlcnNGb3JBbGxGaWVsZHMgPSBfYyA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYztcbiAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcyAmJlxuICAgICAgICAocmVxdWlyZVJlc29sdmVyc0ZvckFyZ3MgfHwgcmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigncmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcyB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgdGhlIG1vcmUgc3BlY2lmaWMgYXNzZXJ0aW9ucy4gJyArXG4gICAgICAgICAgICAnUGxlYXNlIGNvbmZpZ3VyZSBlaXRoZXIgcmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcyBvciByZXF1aXJlUmVzb2x2ZXJzRm9yQXJncyAvICcgK1xuICAgICAgICAgICAgJ3JlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXIsIGJ1dCBub3QgYSBjb21iaW5hdGlvbiBvZiB0aGVtLicpO1xuICAgIH1cbiAgICBfMS5mb3JFYWNoRmllbGQoc2NoZW1hLCBmdW5jdGlvbiAoZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpIHtcbiAgICAgICAgLy8gcmVxdWlyZXMgYSByZXNvbHZlIGZ1bmN0aW9uIGZvciAqZXZlcnkqIGZpZWxkLlxuICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcykge1xuICAgICAgICAgICAgZXhwZWN0UmVzb2x2ZUZ1bmN0aW9uKGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgfVxuICAgICAgICAvLyByZXF1aXJlcyBhIHJlc29sdmUgZnVuY3Rpb24gb24gZXZlcnkgZmllbGQgdGhhdCBoYXMgYXJndW1lbnRzXG4gICAgICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQXJncyAmJiBmaWVsZC5hcmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGV4cGVjdFJlc29sdmVGdW5jdGlvbihmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVxdWlyZXMgYSByZXNvbHZlIGZ1bmN0aW9uIG9uIGV2ZXJ5IGZpZWxkIHRoYXQgcmV0dXJucyBhIG5vbi1zY2FsYXIgdHlwZVxuICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhciAmJlxuICAgICAgICAgICAgIShncmFwaHFsXzEuZ2V0TmFtZWRUeXBlKGZpZWxkLnR5cGUpIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxTY2FsYXJUeXBlKSkge1xuICAgICAgICAgICAgZXhwZWN0UmVzb2x2ZUZ1bmN0aW9uKGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZnVuY3Rpb24gZXhwZWN0UmVzb2x2ZUZ1bmN0aW9uKGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKSB7XG4gICAgaWYgKCFmaWVsZC5yZXNvbHZlKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBtYXgtbGluZS1sZW5ndGhcbiAgICAgICAgXCJSZXNvbHZlIGZ1bmN0aW9uIG1pc3NpbmcgZm9yIFxcXCJcIiArIHR5cGVOYW1lICsgXCIuXCIgKyBmaWVsZE5hbWUgKyBcIlxcXCIuIFRvIGRpc2FibGUgdGhpcyB3YXJuaW5nIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9hcG9sbG9zdGFjay9ncmFwaHFsLXRvb2xzL2lzc3Vlcy8xMzFcIik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBmaWVsZC5yZXNvbHZlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBfMS5TY2hlbWFFcnJvcihcIlJlc29sdmVyIFxcXCJcIiArIHR5cGVOYW1lICsgXCIuXCIgKyBmaWVsZE5hbWUgKyBcIlxcXCIgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGFzc2VydFJlc29sdmVGdW5jdGlvbnNQcmVzZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXNzZXJ0UmVzb2x2ZUZ1bmN0aW9uc1ByZXNlbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/assertResolveFunctionsPresent.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar deprecated_decorator_1 = __webpack_require__(/*! deprecated-decorator */ \"./node_modules/deprecated-decorator/bld/index.js\");\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/graphql-tools/dist/generate/index.js\");\n// takes a GraphQL-JS schema and an object of connectors, then attaches\n// the connectors to the context by wrapping each query or mutation resolve\n// function with a function that attaches connectors if they don't exist.\n// attaches connectors only once to make sure they are singletons\nvar attachConnectorsToContext = deprecated_decorator_1.deprecated({\n    version: '0.7.0',\n    url: 'https://github.com/apollostack/graphql-tools/issues/140',\n}, function (schema, connectors) {\n    if (!schema || !(schema instanceof graphql_1.GraphQLSchema)) {\n        throw new Error('schema must be an instance of GraphQLSchema. ' +\n            'This error could be caused by installing more than one version of GraphQL-JS');\n    }\n    if (typeof connectors !== 'object') {\n        var connectorType = typeof connectors;\n        throw new Error(\"Expected connectors to be of type object, got \" + connectorType);\n    }\n    if (Object.keys(connectors).length === 0) {\n        throw new Error('Expected connectors to not be an empty object');\n    }\n    if (Array.isArray(connectors)) {\n        throw new Error('Expected connectors to be of type object, got Array');\n    }\n    if (schema['_apolloConnectorsAttached']) {\n        throw new Error('Connectors already attached to context, cannot attach more than once');\n    }\n    schema['_apolloConnectorsAttached'] = true;\n    var attachconnectorFn = function (root, args, ctx) {\n        if (typeof ctx !== 'object') {\n            // if in any way possible, we should throw an error when the attachconnectors\n            // function is called, not when a query is executed.\n            var contextType = typeof ctx;\n            throw new Error(\"Cannot attach connector because context is not an object: \" + contextType);\n        }\n        if (typeof ctx.connectors === 'undefined') {\n            ctx.connectors = {};\n        }\n        Object.keys(connectors).forEach(function (connectorName) {\n            var connector = connectors[connectorName];\n            if (!!connector.prototype) {\n                ctx.connectors[connectorName] = new connector(ctx);\n            }\n            else {\n                throw new Error(\"Connector must be a function or an class\");\n            }\n        });\n        return root;\n    };\n    _1.addSchemaLevelResolveFunction(schema, attachconnectorFn);\n});\nexports.default = attachConnectorsToContext;\n//# sourceMappingURL=attachConnectorsToContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2F0dGFjaENvbm5lY3RvcnNUb0NvbnRleHQuanM/ZWUyZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQyw2QkFBNkIsbUJBQU8sQ0FBQyw4RUFBc0I7QUFDM0QsU0FBUyxtQkFBTyxDQUFDLDhEQUFHO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvZ2VuZXJhdGUvYXR0YWNoQ29ubmVjdG9yc1RvQ29udGV4dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbnZhciBkZXByZWNhdGVkX2RlY29yYXRvcl8xID0gcmVxdWlyZShcImRlcHJlY2F0ZWQtZGVjb3JhdG9yXCIpO1xudmFyIF8xID0gcmVxdWlyZShcIi5cIik7XG4vLyB0YWtlcyBhIEdyYXBoUUwtSlMgc2NoZW1hIGFuZCBhbiBvYmplY3Qgb2YgY29ubmVjdG9ycywgdGhlbiBhdHRhY2hlc1xuLy8gdGhlIGNvbm5lY3RvcnMgdG8gdGhlIGNvbnRleHQgYnkgd3JhcHBpbmcgZWFjaCBxdWVyeSBvciBtdXRhdGlvbiByZXNvbHZlXG4vLyBmdW5jdGlvbiB3aXRoIGEgZnVuY3Rpb24gdGhhdCBhdHRhY2hlcyBjb25uZWN0b3JzIGlmIHRoZXkgZG9uJ3QgZXhpc3QuXG4vLyBhdHRhY2hlcyBjb25uZWN0b3JzIG9ubHkgb25jZSB0byBtYWtlIHN1cmUgdGhleSBhcmUgc2luZ2xldG9uc1xudmFyIGF0dGFjaENvbm5lY3RvcnNUb0NvbnRleHQgPSBkZXByZWNhdGVkX2RlY29yYXRvcl8xLmRlcHJlY2F0ZWQoe1xuICAgIHZlcnNpb246ICcwLjcuMCcsXG4gICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL2Fwb2xsb3N0YWNrL2dyYXBocWwtdG9vbHMvaXNzdWVzLzE0MCcsXG59LCBmdW5jdGlvbiAoc2NoZW1hLCBjb25uZWN0b3JzKSB7XG4gICAgaWYgKCFzY2hlbWEgfHwgIShzY2hlbWEgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTFNjaGVtYSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzY2hlbWEgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBHcmFwaFFMU2NoZW1hLiAnICtcbiAgICAgICAgICAgICdUaGlzIGVycm9yIGNvdWxkIGJlIGNhdXNlZCBieSBpbnN0YWxsaW5nIG1vcmUgdGhhbiBvbmUgdmVyc2lvbiBvZiBHcmFwaFFMLUpTJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29ubmVjdG9ycyAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgdmFyIGNvbm5lY3RvclR5cGUgPSB0eXBlb2YgY29ubmVjdG9ycztcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgY29ubmVjdG9ycyB0byBiZSBvZiB0eXBlIG9iamVjdCwgZ290IFwiICsgY29ubmVjdG9yVHlwZSk7XG4gICAgfVxuICAgIGlmIChPYmplY3Qua2V5cyhjb25uZWN0b3JzKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBjb25uZWN0b3JzIHRvIG5vdCBiZSBhbiBlbXB0eSBvYmplY3QnKTtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY29ubmVjdG9ycykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBjb25uZWN0b3JzIHRvIGJlIG9mIHR5cGUgb2JqZWN0LCBnb3QgQXJyYXknKTtcbiAgICB9XG4gICAgaWYgKHNjaGVtYVsnX2Fwb2xsb0Nvbm5lY3RvcnNBdHRhY2hlZCddKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ29ubmVjdG9ycyBhbHJlYWR5IGF0dGFjaGVkIHRvIGNvbnRleHQsIGNhbm5vdCBhdHRhY2ggbW9yZSB0aGFuIG9uY2UnKTtcbiAgICB9XG4gICAgc2NoZW1hWydfYXBvbGxvQ29ubmVjdG9yc0F0dGFjaGVkJ10gPSB0cnVlO1xuICAgIHZhciBhdHRhY2hjb25uZWN0b3JGbiA9IGZ1bmN0aW9uIChyb290LCBhcmdzLCBjdHgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjdHggIT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAvLyBpZiBpbiBhbnkgd2F5IHBvc3NpYmxlLCB3ZSBzaG91bGQgdGhyb3cgYW4gZXJyb3Igd2hlbiB0aGUgYXR0YWNoY29ubmVjdG9yc1xuICAgICAgICAgICAgLy8gZnVuY3Rpb24gaXMgY2FsbGVkLCBub3Qgd2hlbiBhIHF1ZXJ5IGlzIGV4ZWN1dGVkLlxuICAgICAgICAgICAgdmFyIGNvbnRleHRUeXBlID0gdHlwZW9mIGN0eDtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBhdHRhY2ggY29ubmVjdG9yIGJlY2F1c2UgY29udGV4dCBpcyBub3QgYW4gb2JqZWN0OiBcIiArIGNvbnRleHRUeXBlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGN0eC5jb25uZWN0b3JzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgY3R4LmNvbm5lY3RvcnMgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyhjb25uZWN0b3JzKS5mb3JFYWNoKGZ1bmN0aW9uIChjb25uZWN0b3JOYW1lKSB7XG4gICAgICAgICAgICB2YXIgY29ubmVjdG9yID0gY29ubmVjdG9yc1tjb25uZWN0b3JOYW1lXTtcbiAgICAgICAgICAgIGlmICghIWNvbm5lY3Rvci5wcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICBjdHguY29ubmVjdG9yc1tjb25uZWN0b3JOYW1lXSA9IG5ldyBjb25uZWN0b3IoY3R4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbm5lY3RvciBtdXN0IGJlIGEgZnVuY3Rpb24gb3IgYW4gY2xhc3NcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcm9vdDtcbiAgICB9O1xuICAgIF8xLmFkZFNjaGVtYUxldmVsUmVzb2x2ZUZ1bmN0aW9uKHNjaGVtYSwgYXR0YWNoY29ubmVjdG9yRm4pO1xufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBhdHRhY2hDb25uZWN0b3JzVG9Db250ZXh0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXR0YWNoQ29ubmVjdG9yc1RvQ29udGV4dC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/attachDirectiveResolvers.js":
/*!******************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/attachDirectiveResolvers.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar schemaVisitor_1 = __webpack_require__(/*! ../schemaVisitor */ \"./node_modules/graphql-tools/dist/schemaVisitor.js\");\nfunction attachDirectiveResolvers(schema, directiveResolvers) {\n    if (typeof directiveResolvers !== 'object') {\n        throw new Error(\"Expected directiveResolvers to be of type object, got \" + typeof directiveResolvers);\n    }\n    if (Array.isArray(directiveResolvers)) {\n        throw new Error('Expected directiveResolvers to be of type object, got Array');\n    }\n    var schemaDirectives = Object.create(null);\n    Object.keys(directiveResolvers).forEach(function (directiveName) {\n        schemaDirectives[directiveName] = /** @class */ (function (_super) {\n            __extends(class_1, _super);\n            function class_1() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_1.prototype.visitFieldDefinition = function (field) {\n                var _this = this;\n                var resolver = directiveResolvers[directiveName];\n                var originalResolver = field.resolve || graphql_1.defaultFieldResolver;\n                var directiveArgs = this.args;\n                field.resolve = function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var source = args[0] /* original args */, context = args[2], info = args[3];\n                    return resolver(function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, originalResolver.apply(field, args)];\n                    }); }); }, source, directiveArgs, context, info);\n                };\n            };\n            return class_1;\n        }(schemaVisitor_1.SchemaDirectiveVisitor));\n    });\n    schemaVisitor_1.SchemaDirectiveVisitor.visitSchemaDirectives(schema, schemaDirectives);\n}\nexports.default = attachDirectiveResolvers;\n//# sourceMappingURL=attachDirectiveResolvers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/attachDirectiveResolvers.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/buildSchemaFromTypeDefinitions.js":
/*!************************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/buildSchemaFromTypeDefinitions.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/graphql-tools/dist/generate/index.js\");\nfunction buildSchemaFromTypeDefinitions(typeDefinitions, parseOptions) {\n    // TODO: accept only array here, otherwise interfaces get confusing.\n    var myDefinitions = typeDefinitions;\n    var astDocument;\n    if (isDocumentNode(typeDefinitions)) {\n        astDocument = typeDefinitions;\n    }\n    else if (typeof myDefinitions !== 'string') {\n        if (!Array.isArray(myDefinitions)) {\n            var type = typeof myDefinitions;\n            throw new _1.SchemaError(\"typeDefs must be a string, array or schema AST, got \" + type);\n        }\n        myDefinitions = _1.concatenateTypeDefs(myDefinitions);\n    }\n    if (typeof myDefinitions === 'string') {\n        astDocument = graphql_1.parse(myDefinitions, parseOptions);\n    }\n    var backcompatOptions = { commentDescriptions: true };\n    // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n    var schema = graphql_1.buildASTSchema(astDocument, backcompatOptions);\n    var extensionsAst = _1.extractExtensionDefinitions(astDocument);\n    if (extensionsAst.definitions.length > 0) {\n        // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n        schema = graphql_1.extendSchema(schema, extensionsAst, backcompatOptions);\n    }\n    return schema;\n}\nfunction isDocumentNode(typeDefinitions) {\n    return typeDefinitions.kind !== undefined;\n}\nexports.default = buildSchemaFromTypeDefinitions;\n//# sourceMappingURL=buildSchemaFromTypeDefinitions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2J1aWxkU2NoZW1hRnJvbVR5cGVEZWZpbml0aW9ucy5qcz80OTRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDLFNBQVMsbUJBQU8sQ0FBQyw4REFBRztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2J1aWxkU2NoZW1hRnJvbVR5cGVEZWZpbml0aW9ucy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbnZhciBfMSA9IHJlcXVpcmUoXCIuXCIpO1xuZnVuY3Rpb24gYnVpbGRTY2hlbWFGcm9tVHlwZURlZmluaXRpb25zKHR5cGVEZWZpbml0aW9ucywgcGFyc2VPcHRpb25zKSB7XG4gICAgLy8gVE9ETzogYWNjZXB0IG9ubHkgYXJyYXkgaGVyZSwgb3RoZXJ3aXNlIGludGVyZmFjZXMgZ2V0IGNvbmZ1c2luZy5cbiAgICB2YXIgbXlEZWZpbml0aW9ucyA9IHR5cGVEZWZpbml0aW9ucztcbiAgICB2YXIgYXN0RG9jdW1lbnQ7XG4gICAgaWYgKGlzRG9jdW1lbnROb2RlKHR5cGVEZWZpbml0aW9ucykpIHtcbiAgICAgICAgYXN0RG9jdW1lbnQgPSB0eXBlRGVmaW5pdGlvbnM7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBteURlZmluaXRpb25zICE9PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkobXlEZWZpbml0aW9ucykpIHtcbiAgICAgICAgICAgIHZhciB0eXBlID0gdHlwZW9mIG15RGVmaW5pdGlvbnM7XG4gICAgICAgICAgICB0aHJvdyBuZXcgXzEuU2NoZW1hRXJyb3IoXCJ0eXBlRGVmcyBtdXN0IGJlIGEgc3RyaW5nLCBhcnJheSBvciBzY2hlbWEgQVNULCBnb3QgXCIgKyB0eXBlKTtcbiAgICAgICAgfVxuICAgICAgICBteURlZmluaXRpb25zID0gXzEuY29uY2F0ZW5hdGVUeXBlRGVmcyhteURlZmluaXRpb25zKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBteURlZmluaXRpb25zID09PSAnc3RyaW5nJykge1xuICAgICAgICBhc3REb2N1bWVudCA9IGdyYXBocWxfMS5wYXJzZShteURlZmluaXRpb25zLCBwYXJzZU9wdGlvbnMpO1xuICAgIH1cbiAgICB2YXIgYmFja2NvbXBhdE9wdGlvbnMgPSB7IGNvbW1lbnREZXNjcmlwdGlvbnM6IHRydWUgfTtcbiAgICAvLyBUT0RPIGZpeCB0eXBlcyBodHRwczovL2dpdGh1Yi5jb20vYXBvbGxvZ3JhcGhxbC9ncmFwaHFsLXRvb2xzL2lzc3Vlcy81NDJcbiAgICB2YXIgc2NoZW1hID0gZ3JhcGhxbF8xLmJ1aWxkQVNUU2NoZW1hKGFzdERvY3VtZW50LCBiYWNrY29tcGF0T3B0aW9ucyk7XG4gICAgdmFyIGV4dGVuc2lvbnNBc3QgPSBfMS5leHRyYWN0RXh0ZW5zaW9uRGVmaW5pdGlvbnMoYXN0RG9jdW1lbnQpO1xuICAgIGlmIChleHRlbnNpb25zQXN0LmRlZmluaXRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgLy8gVE9ETyBmaXggdHlwZXMgaHR0cHM6Ly9naXRodWIuY29tL2Fwb2xsb2dyYXBocWwvZ3JhcGhxbC10b29scy9pc3N1ZXMvNTQyXG4gICAgICAgIHNjaGVtYSA9IGdyYXBocWxfMS5leHRlbmRTY2hlbWEoc2NoZW1hLCBleHRlbnNpb25zQXN0LCBiYWNrY29tcGF0T3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWE7XG59XG5mdW5jdGlvbiBpc0RvY3VtZW50Tm9kZSh0eXBlRGVmaW5pdGlvbnMpIHtcbiAgICByZXR1cm4gdHlwZURlZmluaXRpb25zLmtpbmQgIT09IHVuZGVmaW5lZDtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGJ1aWxkU2NoZW1hRnJvbVR5cGVEZWZpbml0aW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1aWxkU2NoZW1hRnJvbVR5cGVEZWZpbml0aW9ucy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/buildSchemaFromTypeDefinitions.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/chainResolvers.js":
/*!********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/chainResolvers.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nfunction chainResolvers(resolvers) {\n    return function (root, args, ctx, info) {\n        return resolvers.reduce(function (prev, curResolver) {\n            if (curResolver) {\n                return curResolver(prev, args, ctx, info);\n            }\n            return graphql_1.defaultFieldResolver(prev, args, ctx, info);\n        }, root);\n    };\n}\nexports.chainResolvers = chainResolvers;\n//# sourceMappingURL=chainResolvers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2NoYWluUmVzb2x2ZXJzLmpzP2QxMDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsaURBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2NoYWluUmVzb2x2ZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gY2hhaW5SZXNvbHZlcnMocmVzb2x2ZXJzKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChyb290LCBhcmdzLCBjdHgsIGluZm8pIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVycy5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIGN1clJlc29sdmVyKSB7XG4gICAgICAgICAgICBpZiAoY3VyUmVzb2x2ZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VyUmVzb2x2ZXIocHJldiwgYXJncywgY3R4LCBpbmZvKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBncmFwaHFsXzEuZGVmYXVsdEZpZWxkUmVzb2x2ZXIocHJldiwgYXJncywgY3R4LCBpbmZvKTtcbiAgICAgICAgfSwgcm9vdCk7XG4gICAgfTtcbn1cbmV4cG9ydHMuY2hhaW5SZXNvbHZlcnMgPSBjaGFpblJlc29sdmVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYWluUmVzb2x2ZXJzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/chainResolvers.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/checkForResolveTypeResolver.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/checkForResolveTypeResolver.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/graphql-tools/dist/generate/index.js\");\n// If we have any union or interface types throw if no there is no resolveType or isTypeOf resolvers\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    Object.keys(schema.getTypeMap())\n        .map(function (typeName) { return schema.getType(typeName); })\n        .forEach(function (type) {\n        if (!(type instanceof graphql_1.GraphQLUnionType ||\n            type instanceof graphql_1.GraphQLInterfaceType)) {\n            return;\n        }\n        if (!type.resolveType) {\n            if (requireResolversForResolveType === false) {\n                return;\n            }\n            if (requireResolversForResolveType === true) {\n                throw new _1.SchemaError(\"Type \\\"\" + type.name + \"\\\" is missing a \\\"resolveType\\\" resolver\");\n            }\n            // tslint:disable-next-line:max-line-length\n            console.warn(\"Type \\\"\" + type.name + \"\\\" is missing a \\\"__resolveType\\\" resolver. Pass false into \" +\n                \"\\\"resolverValidationOptions.requireResolversForResolveType\\\" to disable this warning.\");\n        }\n    });\n}\nexports.default = checkForResolveTypeResolver;\n//# sourceMappingURL=checkForResolveTypeResolver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2NoZWNrRm9yUmVzb2x2ZVR5cGVSZXNvbHZlci5qcz8zOTU2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDLFNBQVMsbUJBQU8sQ0FBQyw4REFBRztBQUNwQjtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsaUNBQWlDLEVBQUU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC9nZW5lcmF0ZS9jaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG52YXIgXzEgPSByZXF1aXJlKFwiLlwiKTtcbi8vIElmIHdlIGhhdmUgYW55IHVuaW9uIG9yIGludGVyZmFjZSB0eXBlcyB0aHJvdyBpZiBubyB0aGVyZSBpcyBubyByZXNvbHZlVHlwZSBvciBpc1R5cGVPZiByZXNvbHZlcnNcbmZ1bmN0aW9uIGNoZWNrRm9yUmVzb2x2ZVR5cGVSZXNvbHZlcihzY2hlbWEsIHJlcXVpcmVSZXNvbHZlcnNGb3JSZXNvbHZlVHlwZSkge1xuICAgIE9iamVjdC5rZXlzKHNjaGVtYS5nZXRUeXBlTWFwKCkpXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKHR5cGVOYW1lKSB7IHJldHVybiBzY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSk7IH0pXG4gICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIGlmICghKHR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTFVuaW9uVHlwZSB8fFxuICAgICAgICAgICAgdHlwZSBpbnN0YW5jZW9mIGdyYXBocWxfMS5HcmFwaFFMSW50ZXJmYWNlVHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXR5cGUucmVzb2x2ZVR5cGUpIHtcbiAgICAgICAgICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yUmVzb2x2ZVR5cGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JSZXNvbHZlVHlwZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBfMS5TY2hlbWFFcnJvcihcIlR5cGUgXFxcIlwiICsgdHlwZS5uYW1lICsgXCJcXFwiIGlzIG1pc3NpbmcgYSBcXFwicmVzb2x2ZVR5cGVcXFwiIHJlc29sdmVyXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiVHlwZSBcXFwiXCIgKyB0eXBlLm5hbWUgKyBcIlxcXCIgaXMgbWlzc2luZyBhIFxcXCJfX3Jlc29sdmVUeXBlXFxcIiByZXNvbHZlci4gUGFzcyBmYWxzZSBpbnRvIFwiICtcbiAgICAgICAgICAgICAgICBcIlxcXCJyZXNvbHZlclZhbGlkYXRpb25PcHRpb25zLnJlcXVpcmVSZXNvbHZlcnNGb3JSZXNvbHZlVHlwZVxcXCIgdG8gZGlzYWJsZSB0aGlzIHdhcm5pbmcuXCIpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBjaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/checkForResolveTypeResolver.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/concatenateTypeDefs.js":
/*!*************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/concatenateTypeDefs.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/graphql-tools/dist/generate/index.js\");\nfunction concatenateTypeDefs(typeDefinitionsAry, calledFunctionRefs) {\n    if (calledFunctionRefs === void 0) { calledFunctionRefs = []; }\n    var resolvedTypeDefinitions = [];\n    typeDefinitionsAry.forEach(function (typeDef) {\n        if (typeDef.kind !== undefined) {\n            typeDef = graphql_1.print(typeDef);\n        }\n        if (typeof typeDef === 'function') {\n            if (calledFunctionRefs.indexOf(typeDef) === -1) {\n                calledFunctionRefs.push(typeDef);\n                resolvedTypeDefinitions = resolvedTypeDefinitions.concat(concatenateTypeDefs(typeDef(), calledFunctionRefs));\n            }\n        }\n        else if (typeof typeDef === 'string') {\n            resolvedTypeDefinitions.push(typeDef.trim());\n        }\n        else {\n            var type = typeof typeDef;\n            throw new _1.SchemaError(\"typeDef array must contain only strings and functions, got \" + type);\n        }\n    });\n    return uniq(resolvedTypeDefinitions.map(function (x) { return x.trim(); })).join('\\n');\n}\nfunction uniq(array) {\n    return array.reduce(function (accumulator, currentValue) {\n        return accumulator.indexOf(currentValue) === -1\n            ? accumulator.concat([currentValue]) : accumulator;\n    }, []);\n}\nexports.default = concatenateTypeDefs;\n//# sourceMappingURL=concatenateTypeDefs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2NvbmNhdGVuYXRlVHlwZURlZnMuanM/MThmNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQyxTQUFTLG1CQUFPLENBQUMsOERBQUc7QUFDcEI7QUFDQSx3Q0FBd0MseUJBQXlCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCwwREFBMEQsaUJBQWlCLEVBQUU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2NvbmNhdGVuYXRlVHlwZURlZnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG52YXIgXzEgPSByZXF1aXJlKFwiLlwiKTtcbmZ1bmN0aW9uIGNvbmNhdGVuYXRlVHlwZURlZnModHlwZURlZmluaXRpb25zQXJ5LCBjYWxsZWRGdW5jdGlvblJlZnMpIHtcbiAgICBpZiAoY2FsbGVkRnVuY3Rpb25SZWZzID09PSB2b2lkIDApIHsgY2FsbGVkRnVuY3Rpb25SZWZzID0gW107IH1cbiAgICB2YXIgcmVzb2x2ZWRUeXBlRGVmaW5pdGlvbnMgPSBbXTtcbiAgICB0eXBlRGVmaW5pdGlvbnNBcnkuZm9yRWFjaChmdW5jdGlvbiAodHlwZURlZikge1xuICAgICAgICBpZiAodHlwZURlZi5raW5kICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHR5cGVEZWYgPSBncmFwaHFsXzEucHJpbnQodHlwZURlZik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB0eXBlRGVmID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBpZiAoY2FsbGVkRnVuY3Rpb25SZWZzLmluZGV4T2YodHlwZURlZikgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgY2FsbGVkRnVuY3Rpb25SZWZzLnB1c2godHlwZURlZik7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZWRUeXBlRGVmaW5pdGlvbnMgPSByZXNvbHZlZFR5cGVEZWZpbml0aW9ucy5jb25jYXQoY29uY2F0ZW5hdGVUeXBlRGVmcyh0eXBlRGVmKCksIGNhbGxlZEZ1bmN0aW9uUmVmcykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiB0eXBlRGVmID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmVzb2x2ZWRUeXBlRGVmaW5pdGlvbnMucHVzaCh0eXBlRGVmLnRyaW0oKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgdHlwZSA9IHR5cGVvZiB0eXBlRGVmO1xuICAgICAgICAgICAgdGhyb3cgbmV3IF8xLlNjaGVtYUVycm9yKFwidHlwZURlZiBhcnJheSBtdXN0IGNvbnRhaW4gb25seSBzdHJpbmdzIGFuZCBmdW5jdGlvbnMsIGdvdCBcIiArIHR5cGUpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHVuaXEocmVzb2x2ZWRUeXBlRGVmaW5pdGlvbnMubWFwKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LnRyaW0oKTsgfSkpLmpvaW4oJ1xcbicpO1xufVxuZnVuY3Rpb24gdW5pcShhcnJheSkge1xuICAgIHJldHVybiBhcnJheS5yZWR1Y2UoZnVuY3Rpb24gKGFjY3VtdWxhdG9yLCBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yLmluZGV4T2YoY3VycmVudFZhbHVlKSA9PT0gLTFcbiAgICAgICAgICAgID8gYWNjdW11bGF0b3IuY29uY2F0KFtjdXJyZW50VmFsdWVdKSA6IGFjY3VtdWxhdG9yO1xuICAgIH0sIFtdKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGNvbmNhdGVuYXRlVHlwZURlZnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25jYXRlbmF0ZVR5cGVEZWZzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/concatenateTypeDefs.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/decorateWithLogger.js":
/*!************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/decorateWithLogger.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\n/*\n * fn: The function to decorate with the logger\n * logger: an object instance of type Logger\n * hint: an optional hint to add to the error's message\n */\nfunction decorateWithLogger(fn, logger, hint) {\n    if (typeof fn === 'undefined') {\n        fn = graphql_1.defaultFieldResolver;\n    }\n    var logError = function (e) {\n        // TODO: clone the error properly\n        var newE = new Error();\n        newE.stack = e.stack;\n        /* istanbul ignore else: always get the hint from addErrorLoggingToSchema */\n        if (hint) {\n            newE['originalMessage'] = e.message;\n            newE['message'] = \"Error in resolver \" + hint + \"\\n\" + e.message;\n        }\n        logger.log(newE);\n    };\n    return function (root, args, ctx, info) {\n        try {\n            var result = fn(root, args, ctx, info);\n            // If the resolve function returns a Promise log any Promise rejects.\n            if (result &&\n                typeof result.then === 'function' &&\n                typeof result.catch === 'function') {\n                result.catch(function (reason) {\n                    // make sure that it's an error we're logging.\n                    var error = reason instanceof Error ? reason : new Error(reason);\n                    logError(error);\n                    // We don't want to leave an unhandled exception so pass on error.\n                    return reason;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            logError(e);\n            // we want to pass on the error, just in case.\n            throw e;\n        }\n    };\n}\nexports.default = decorateWithLogger;\n//# sourceMappingURL=decorateWithLogger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2RlY29yYXRlV2l0aExvZ2dlci5qcz9iMGQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2RlY29yYXRlV2l0aExvZ2dlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbi8qXG4gKiBmbjogVGhlIGZ1bmN0aW9uIHRvIGRlY29yYXRlIHdpdGggdGhlIGxvZ2dlclxuICogbG9nZ2VyOiBhbiBvYmplY3QgaW5zdGFuY2Ugb2YgdHlwZSBMb2dnZXJcbiAqIGhpbnQ6IGFuIG9wdGlvbmFsIGhpbnQgdG8gYWRkIHRvIHRoZSBlcnJvcidzIG1lc3NhZ2VcbiAqL1xuZnVuY3Rpb24gZGVjb3JhdGVXaXRoTG9nZ2VyKGZuLCBsb2dnZXIsIGhpbnQpIHtcbiAgICBpZiAodHlwZW9mIGZuID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBmbiA9IGdyYXBocWxfMS5kZWZhdWx0RmllbGRSZXNvbHZlcjtcbiAgICB9XG4gICAgdmFyIGxvZ0Vycm9yID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgLy8gVE9ETzogY2xvbmUgdGhlIGVycm9yIHByb3Blcmx5XG4gICAgICAgIHZhciBuZXdFID0gbmV3IEVycm9yKCk7XG4gICAgICAgIG5ld0Uuc3RhY2sgPSBlLnN0YWNrO1xuICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZTogYWx3YXlzIGdldCB0aGUgaGludCBmcm9tIGFkZEVycm9yTG9nZ2luZ1RvU2NoZW1hICovXG4gICAgICAgIGlmIChoaW50KSB7XG4gICAgICAgICAgICBuZXdFWydvcmlnaW5hbE1lc3NhZ2UnXSA9IGUubWVzc2FnZTtcbiAgICAgICAgICAgIG5ld0VbJ21lc3NhZ2UnXSA9IFwiRXJyb3IgaW4gcmVzb2x2ZXIgXCIgKyBoaW50ICsgXCJcXG5cIiArIGUubWVzc2FnZTtcbiAgICAgICAgfVxuICAgICAgICBsb2dnZXIubG9nKG5ld0UpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChyb290LCBhcmdzLCBjdHgsIGluZm8pIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSBmbihyb290LCBhcmdzLCBjdHgsIGluZm8pO1xuICAgICAgICAgICAgLy8gSWYgdGhlIHJlc29sdmUgZnVuY3Rpb24gcmV0dXJucyBhIFByb21pc2UgbG9nIGFueSBQcm9taXNlIHJlamVjdHMuXG4gICAgICAgICAgICBpZiAocmVzdWx0ICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIHJlc3VsdC50aGVuID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIHJlc3VsdC5jYXRjaCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5jYXRjaChmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIG1ha2Ugc3VyZSB0aGF0IGl0J3MgYW4gZXJyb3Igd2UncmUgbG9nZ2luZy5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yID0gcmVhc29uIGluc3RhbmNlb2YgRXJyb3IgPyByZWFzb24gOiBuZXcgRXJyb3IocmVhc29uKTtcbiAgICAgICAgICAgICAgICAgICAgbG9nRXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIGxlYXZlIGFuIHVuaGFuZGxlZCBleGNlcHRpb24gc28gcGFzcyBvbiBlcnJvci5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlYXNvbjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGxvZ0Vycm9yKGUpO1xuICAgICAgICAgICAgLy8gd2Ugd2FudCB0byBwYXNzIG9uIHRoZSBlcnJvciwganVzdCBpbiBjYXNlLlxuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnRzLmRlZmF1bHQgPSBkZWNvcmF0ZVdpdGhMb2dnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvcmF0ZVdpdGhMb2dnZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/decorateWithLogger.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/extendResolversFromInterfaces.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/extendResolversFromInterfaces.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    var typeNames = Object.keys(__assign({}, schema.getTypeMap(), resolvers));\n    var extendedResolvers = {};\n    typeNames.forEach(function (typeName) {\n        var typeResolvers = resolvers[typeName];\n        var type = schema.getType(typeName);\n        if (type instanceof graphql_1.GraphQLObjectType) {\n            var interfaceResolvers = type\n                .getInterfaces()\n                .map(function (iFace) { return resolvers[iFace.name]; });\n            extendedResolvers[typeName] = Object.assign.apply(Object, [{}].concat(interfaceResolvers, [typeResolvers]));\n        }\n        else {\n            if (typeResolvers) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    });\n    return extendedResolvers;\n}\nexports.default = extendResolversFromInterfaces;\n//# sourceMappingURL=extendResolversFromInterfaces.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2V4dGVuZFJlc29sdmVyc0Zyb21JbnRlcmZhY2VzLmpzPzY0YzciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLGdEQUFnRCxPQUFPO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQztBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyw4QkFBOEIsRUFBRTtBQUN2RSx5RUFBeUU7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC9nZW5lcmF0ZS9leHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5mdW5jdGlvbiBleHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcyhzY2hlbWEsIHJlc29sdmVycykge1xuICAgIHZhciB0eXBlTmFtZXMgPSBPYmplY3Qua2V5cyhfX2Fzc2lnbih7fSwgc2NoZW1hLmdldFR5cGVNYXAoKSwgcmVzb2x2ZXJzKSk7XG4gICAgdmFyIGV4dGVuZGVkUmVzb2x2ZXJzID0ge307XG4gICAgdHlwZU5hbWVzLmZvckVhY2goZnVuY3Rpb24gKHR5cGVOYW1lKSB7XG4gICAgICAgIHZhciB0eXBlUmVzb2x2ZXJzID0gcmVzb2x2ZXJzW3R5cGVOYW1lXTtcbiAgICAgICAgdmFyIHR5cGUgPSBzY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSk7XG4gICAgICAgIGlmICh0eXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxPYmplY3RUeXBlKSB7XG4gICAgICAgICAgICB2YXIgaW50ZXJmYWNlUmVzb2x2ZXJzID0gdHlwZVxuICAgICAgICAgICAgICAgIC5nZXRJbnRlcmZhY2VzKClcbiAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChpRmFjZSkgeyByZXR1cm4gcmVzb2x2ZXJzW2lGYWNlLm5hbWVdOyB9KTtcbiAgICAgICAgICAgIGV4dGVuZGVkUmVzb2x2ZXJzW3R5cGVOYW1lXSA9IE9iamVjdC5hc3NpZ24uYXBwbHkoT2JqZWN0LCBbe31dLmNvbmNhdChpbnRlcmZhY2VSZXNvbHZlcnMsIFt0eXBlUmVzb2x2ZXJzXSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKHR5cGVSZXNvbHZlcnMpIHtcbiAgICAgICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0gPSB0eXBlUmVzb2x2ZXJzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGV4dGVuZGVkUmVzb2x2ZXJzO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/extendResolversFromInterfaces.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/extractExtensionDefinitions.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/extractExtensionDefinitions.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar newExtensionDefinitionKind = 'ObjectTypeExtension';\nvar interfaceExtensionDefinitionKind = 'InterfaceTypeExtension';\nvar inputObjectExtensionDefinitionKind = 'InputObjectTypeExtension';\nfunction extractExtensionDefinitions(ast) {\n    var extensionDefs = ast.definitions.filter(function (def) {\n        return def.kind === newExtensionDefinitionKind ||\n            def.kind === interfaceExtensionDefinitionKind ||\n            def.kind === inputObjectExtensionDefinitionKind;\n    });\n    return Object.assign({}, ast, {\n        definitions: extensionDefs,\n    });\n}\nexports.default = extractExtensionDefinitions;\n//# sourceMappingURL=extractExtensionDefinitions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2V4dHJhY3RFeHRlbnNpb25EZWZpbml0aW9ucy5qcz8xZmM2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCO0FBQzNCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvZ2VuZXJhdGUvZXh0cmFjdEV4dGVuc2lvbkRlZmluaXRpb25zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5ld0V4dGVuc2lvbkRlZmluaXRpb25LaW5kID0gJ09iamVjdFR5cGVFeHRlbnNpb24nO1xudmFyIGludGVyZmFjZUV4dGVuc2lvbkRlZmluaXRpb25LaW5kID0gJ0ludGVyZmFjZVR5cGVFeHRlbnNpb24nO1xudmFyIGlucHV0T2JqZWN0RXh0ZW5zaW9uRGVmaW5pdGlvbktpbmQgPSAnSW5wdXRPYmplY3RUeXBlRXh0ZW5zaW9uJztcbmZ1bmN0aW9uIGV4dHJhY3RFeHRlbnNpb25EZWZpbml0aW9ucyhhc3QpIHtcbiAgICB2YXIgZXh0ZW5zaW9uRGVmcyA9IGFzdC5kZWZpbml0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKGRlZikge1xuICAgICAgICByZXR1cm4gZGVmLmtpbmQgPT09IG5ld0V4dGVuc2lvbkRlZmluaXRpb25LaW5kIHx8XG4gICAgICAgICAgICBkZWYua2luZCA9PT0gaW50ZXJmYWNlRXh0ZW5zaW9uRGVmaW5pdGlvbktpbmQgfHxcbiAgICAgICAgICAgIGRlZi5raW5kID09PSBpbnB1dE9iamVjdEV4dGVuc2lvbkRlZmluaXRpb25LaW5kO1xuICAgIH0pO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBhc3QsIHtcbiAgICAgICAgZGVmaW5pdGlvbnM6IGV4dGVuc2lvbkRlZnMsXG4gICAgfSk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBleHRyYWN0RXh0ZW5zaW9uRGVmaW5pdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHRyYWN0RXh0ZW5zaW9uRGVmaW5pdGlvbnMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/extractExtensionDefinitions.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/forEachField.js":
/*!******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/forEachField.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nfunction forEachField(schema, fn) {\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!graphql_1.getNamedType(type).name.startsWith('__') &&\n            type instanceof graphql_1.GraphQLObjectType) {\n            var fields_1 = type.getFields();\n            Object.keys(fields_1).forEach(function (fieldName) {\n                var field = fields_1[fieldName];\n                fn(field, typeName, fieldName);\n            });\n        }\n    });\n}\nexports.default = forEachField;\n//# sourceMappingURL=forEachField.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2ZvckVhY2hGaWVsZC5qcz83ZWNmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC9nZW5lcmF0ZS9mb3JFYWNoRmllbGQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG5mdW5jdGlvbiBmb3JFYWNoRmllbGQoc2NoZW1hLCBmbikge1xuICAgIHZhciB0eXBlTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBPYmplY3Qua2V5cyh0eXBlTWFwKS5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlTmFtZSkge1xuICAgICAgICB2YXIgdHlwZSA9IHR5cGVNYXBbdHlwZU5hbWVdO1xuICAgICAgICAvLyBUT0RPOiBtYXliZSBoYXZlIGFuIG9wdGlvbiB0byBpbmNsdWRlIHRoZXNlP1xuICAgICAgICBpZiAoIWdyYXBocWxfMS5nZXROYW1lZFR5cGUodHlwZSkubmFtZS5zdGFydHNXaXRoKCdfXycpICYmXG4gICAgICAgICAgICB0eXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxPYmplY3RUeXBlKSB7XG4gICAgICAgICAgICB2YXIgZmllbGRzXzEgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgT2JqZWN0LmtleXMoZmllbGRzXzEpLmZvckVhY2goZnVuY3Rpb24gKGZpZWxkTmFtZSkge1xuICAgICAgICAgICAgICAgIHZhciBmaWVsZCA9IGZpZWxkc18xW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgZm4oZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGZvckVhY2hGaWVsZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvckVhY2hGaWVsZC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/forEachField.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/generate/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/graphql-tools/dist/generate/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar addResolveFunctionsToSchema_1 = __webpack_require__(/*! ./addResolveFunctionsToSchema */ \"./node_modules/graphql-tools/dist/generate/addResolveFunctionsToSchema.js\");\nexports.addResolveFunctionsToSchema = addResolveFunctionsToSchema_1.default;\nvar addSchemaLevelResolveFunction_1 = __webpack_require__(/*! ./addSchemaLevelResolveFunction */ \"./node_modules/graphql-tools/dist/generate/addSchemaLevelResolveFunction.js\");\nexports.addSchemaLevelResolveFunction = addSchemaLevelResolveFunction_1.default;\nvar assertResolveFunctionsPresent_1 = __webpack_require__(/*! ./assertResolveFunctionsPresent */ \"./node_modules/graphql-tools/dist/generate/assertResolveFunctionsPresent.js\");\nexports.assertResolveFunctionsPresent = assertResolveFunctionsPresent_1.default;\nvar attachDirectiveResolvers_1 = __webpack_require__(/*! ./attachDirectiveResolvers */ \"./node_modules/graphql-tools/dist/generate/attachDirectiveResolvers.js\");\nexports.attachDirectiveResolvers = attachDirectiveResolvers_1.default;\nvar attachConnectorsToContext_1 = __webpack_require__(/*! ./attachConnectorsToContext */ \"./node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js\");\nexports.attachConnectorsToContext = attachConnectorsToContext_1.default;\nvar buildSchemaFromTypeDefinitions_1 = __webpack_require__(/*! ./buildSchemaFromTypeDefinitions */ \"./node_modules/graphql-tools/dist/generate/buildSchemaFromTypeDefinitions.js\");\nexports.buildSchemaFromTypeDefinitions = buildSchemaFromTypeDefinitions_1.default;\nvar chainResolvers_1 = __webpack_require__(/*! ./chainResolvers */ \"./node_modules/graphql-tools/dist/generate/chainResolvers.js\");\nexports.chainResolvers = chainResolvers_1.chainResolvers;\nvar checkForResolveTypeResolver_1 = __webpack_require__(/*! ./checkForResolveTypeResolver */ \"./node_modules/graphql-tools/dist/generate/checkForResolveTypeResolver.js\");\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver_1.default;\nvar concatenateTypeDefs_1 = __webpack_require__(/*! ./concatenateTypeDefs */ \"./node_modules/graphql-tools/dist/generate/concatenateTypeDefs.js\");\nexports.concatenateTypeDefs = concatenateTypeDefs_1.default;\nvar decorateWithLogger_1 = __webpack_require__(/*! ./decorateWithLogger */ \"./node_modules/graphql-tools/dist/generate/decorateWithLogger.js\");\nexports.decorateWithLogger = decorateWithLogger_1.default;\nvar extendResolversFromInterfaces_1 = __webpack_require__(/*! ./extendResolversFromInterfaces */ \"./node_modules/graphql-tools/dist/generate/extendResolversFromInterfaces.js\");\nexports.extendResolversFromInterfaces = extendResolversFromInterfaces_1.default;\nvar extractExtensionDefinitions_1 = __webpack_require__(/*! ./extractExtensionDefinitions */ \"./node_modules/graphql-tools/dist/generate/extractExtensionDefinitions.js\");\nexports.extractExtensionDefinitions = extractExtensionDefinitions_1.default;\nvar forEachField_1 = __webpack_require__(/*! ./forEachField */ \"./node_modules/graphql-tools/dist/generate/forEachField.js\");\nexports.forEachField = forEachField_1.default;\nvar SchemaError_1 = __webpack_require__(/*! ./SchemaError */ \"./node_modules/graphql-tools/dist/generate/SchemaError.js\");\nexports.SchemaError = SchemaError_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2dlbmVyYXRlL2luZGV4LmpzPzQ2YjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQsb0NBQW9DLG1CQUFPLENBQUMsZ0hBQStCO0FBQzNFO0FBQ0Esc0NBQXNDLG1CQUFPLENBQUMsb0hBQWlDO0FBQy9FO0FBQ0Esc0NBQXNDLG1CQUFPLENBQUMsb0hBQWlDO0FBQy9FO0FBQ0EsaUNBQWlDLG1CQUFPLENBQUMsMEdBQTRCO0FBQ3JFO0FBQ0Esa0NBQWtDLG1CQUFPLENBQUMsNEdBQTZCO0FBQ3ZFO0FBQ0EsdUNBQXVDLG1CQUFPLENBQUMsc0hBQWtDO0FBQ2pGO0FBQ0EsdUJBQXVCLG1CQUFPLENBQUMsc0ZBQWtCO0FBQ2pEO0FBQ0Esb0NBQW9DLG1CQUFPLENBQUMsZ0hBQStCO0FBQzNFO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMsZ0dBQXVCO0FBQzNEO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsOEZBQXNCO0FBQ3pEO0FBQ0Esc0NBQXNDLG1CQUFPLENBQUMsb0hBQWlDO0FBQy9FO0FBQ0Esb0NBQW9DLG1CQUFPLENBQUMsZ0hBQStCO0FBQzNFO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsa0ZBQWdCO0FBQzdDO0FBQ0Esb0JBQW9CLG1CQUFPLENBQUMsZ0ZBQWU7QUFDM0M7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvZ2VuZXJhdGUvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYWRkUmVzb2x2ZUZ1bmN0aW9uc1RvU2NoZW1hXzEgPSByZXF1aXJlKFwiLi9hZGRSZXNvbHZlRnVuY3Rpb25zVG9TY2hlbWFcIik7XG5leHBvcnRzLmFkZFJlc29sdmVGdW5jdGlvbnNUb1NjaGVtYSA9IGFkZFJlc29sdmVGdW5jdGlvbnNUb1NjaGVtYV8xLmRlZmF1bHQ7XG52YXIgYWRkU2NoZW1hTGV2ZWxSZXNvbHZlRnVuY3Rpb25fMSA9IHJlcXVpcmUoXCIuL2FkZFNjaGVtYUxldmVsUmVzb2x2ZUZ1bmN0aW9uXCIpO1xuZXhwb3J0cy5hZGRTY2hlbWFMZXZlbFJlc29sdmVGdW5jdGlvbiA9IGFkZFNjaGVtYUxldmVsUmVzb2x2ZUZ1bmN0aW9uXzEuZGVmYXVsdDtcbnZhciBhc3NlcnRSZXNvbHZlRnVuY3Rpb25zUHJlc2VudF8xID0gcmVxdWlyZShcIi4vYXNzZXJ0UmVzb2x2ZUZ1bmN0aW9uc1ByZXNlbnRcIik7XG5leHBvcnRzLmFzc2VydFJlc29sdmVGdW5jdGlvbnNQcmVzZW50ID0gYXNzZXJ0UmVzb2x2ZUZ1bmN0aW9uc1ByZXNlbnRfMS5kZWZhdWx0O1xudmFyIGF0dGFjaERpcmVjdGl2ZVJlc29sdmVyc18xID0gcmVxdWlyZShcIi4vYXR0YWNoRGlyZWN0aXZlUmVzb2x2ZXJzXCIpO1xuZXhwb3J0cy5hdHRhY2hEaXJlY3RpdmVSZXNvbHZlcnMgPSBhdHRhY2hEaXJlY3RpdmVSZXNvbHZlcnNfMS5kZWZhdWx0O1xudmFyIGF0dGFjaENvbm5lY3RvcnNUb0NvbnRleHRfMSA9IHJlcXVpcmUoXCIuL2F0dGFjaENvbm5lY3RvcnNUb0NvbnRleHRcIik7XG5leHBvcnRzLmF0dGFjaENvbm5lY3RvcnNUb0NvbnRleHQgPSBhdHRhY2hDb25uZWN0b3JzVG9Db250ZXh0XzEuZGVmYXVsdDtcbnZhciBidWlsZFNjaGVtYUZyb21UeXBlRGVmaW5pdGlvbnNfMSA9IHJlcXVpcmUoXCIuL2J1aWxkU2NoZW1hRnJvbVR5cGVEZWZpbml0aW9uc1wiKTtcbmV4cG9ydHMuYnVpbGRTY2hlbWFGcm9tVHlwZURlZmluaXRpb25zID0gYnVpbGRTY2hlbWFGcm9tVHlwZURlZmluaXRpb25zXzEuZGVmYXVsdDtcbnZhciBjaGFpblJlc29sdmVyc18xID0gcmVxdWlyZShcIi4vY2hhaW5SZXNvbHZlcnNcIik7XG5leHBvcnRzLmNoYWluUmVzb2x2ZXJzID0gY2hhaW5SZXNvbHZlcnNfMS5jaGFpblJlc29sdmVycztcbnZhciBjaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXJfMSA9IHJlcXVpcmUoXCIuL2NoZWNrRm9yUmVzb2x2ZVR5cGVSZXNvbHZlclwiKTtcbmV4cG9ydHMuY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyID0gY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyXzEuZGVmYXVsdDtcbnZhciBjb25jYXRlbmF0ZVR5cGVEZWZzXzEgPSByZXF1aXJlKFwiLi9jb25jYXRlbmF0ZVR5cGVEZWZzXCIpO1xuZXhwb3J0cy5jb25jYXRlbmF0ZVR5cGVEZWZzID0gY29uY2F0ZW5hdGVUeXBlRGVmc18xLmRlZmF1bHQ7XG52YXIgZGVjb3JhdGVXaXRoTG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9kZWNvcmF0ZVdpdGhMb2dnZXJcIik7XG5leHBvcnRzLmRlY29yYXRlV2l0aExvZ2dlciA9IGRlY29yYXRlV2l0aExvZ2dlcl8xLmRlZmF1bHQ7XG52YXIgZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXNfMSA9IHJlcXVpcmUoXCIuL2V4dGVuZFJlc29sdmVyc0Zyb21JbnRlcmZhY2VzXCIpO1xuZXhwb3J0cy5leHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcyA9IGV4dGVuZFJlc29sdmVyc0Zyb21JbnRlcmZhY2VzXzEuZGVmYXVsdDtcbnZhciBleHRyYWN0RXh0ZW5zaW9uRGVmaW5pdGlvbnNfMSA9IHJlcXVpcmUoXCIuL2V4dHJhY3RFeHRlbnNpb25EZWZpbml0aW9uc1wiKTtcbmV4cG9ydHMuZXh0cmFjdEV4dGVuc2lvbkRlZmluaXRpb25zID0gZXh0cmFjdEV4dGVuc2lvbkRlZmluaXRpb25zXzEuZGVmYXVsdDtcbnZhciBmb3JFYWNoRmllbGRfMSA9IHJlcXVpcmUoXCIuL2ZvckVhY2hGaWVsZFwiKTtcbmV4cG9ydHMuZm9yRWFjaEZpZWxkID0gZm9yRWFjaEZpZWxkXzEuZGVmYXVsdDtcbnZhciBTY2hlbWFFcnJvcl8xID0gcmVxdWlyZShcIi4vU2NoZW1hRXJyb3JcIik7XG5leHBvcnRzLlNjaGVtYUVycm9yID0gU2NoZW1hRXJyb3JfMS5kZWZhdWx0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/generate/index.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/implementsAbstractType.js":
/*!*******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/implementsAbstractType.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nfunction implementsAbstractType(schema, typeA, typeB) {\n    if (typeA === typeB) {\n        return true;\n    }\n    else if (graphql_1.isCompositeType(typeA) && graphql_1.isCompositeType(typeB)) {\n        return graphql_1.doTypesOverlap(schema, typeA, typeB);\n    }\n    else {\n        return false;\n    }\n}\nexports.default = implementsAbstractType;\n//# sourceMappingURL=implementsAbstractType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2ltcGxlbWVudHNBYnN0cmFjdFR5cGUuanM/NDE1NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvaW1wbGVtZW50c0Fic3RyYWN0VHlwZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmZ1bmN0aW9uIGltcGxlbWVudHNBYnN0cmFjdFR5cGUoc2NoZW1hLCB0eXBlQSwgdHlwZUIpIHtcbiAgICBpZiAodHlwZUEgPT09IHR5cGVCKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBlbHNlIGlmIChncmFwaHFsXzEuaXNDb21wb3NpdGVUeXBlKHR5cGVBKSAmJiBncmFwaHFsXzEuaXNDb21wb3NpdGVUeXBlKHR5cGVCKSkge1xuICAgICAgICByZXR1cm4gZ3JhcGhxbF8xLmRvVHlwZXNPdmVybGFwKHNjaGVtYSwgdHlwZUEsIHR5cGVCKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBpbXBsZW1lbnRzQWJzdHJhY3RUeXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1wbGVtZW50c0Fic3RyYWN0VHlwZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/implementsAbstractType.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/graphql-tools/dist/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./makeExecutableSchema */ \"./node_modules/graphql-tools/dist/makeExecutableSchema.js\"));\n__export(__webpack_require__(/*! ./mock */ \"./node_modules/graphql-tools/dist/mock.js\"));\n__export(__webpack_require__(/*! ./stitching */ \"./node_modules/graphql-tools/dist/stitching/index.js\"));\n__export(__webpack_require__(/*! ./transforms */ \"./node_modules/graphql-tools/dist/transforms/index.js\"));\nvar schemaVisitor_1 = __webpack_require__(/*! ./schemaVisitor */ \"./node_modules/graphql-tools/dist/schemaVisitor.js\");\nexports.SchemaDirectiveVisitor = schemaVisitor_1.SchemaDirectiveVisitor;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2luZGV4LmpzPzNiZmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsU0FBUyxtQkFBTyxDQUFDLHlGQUF3QjtBQUN6QyxTQUFTLG1CQUFPLENBQUMseURBQVE7QUFDekIsU0FBUyxtQkFBTyxDQUFDLHlFQUFhO0FBQzlCLFNBQVMsbUJBQU8sQ0FBQywyRUFBYztBQUMvQixzQkFBc0IsbUJBQU8sQ0FBQywyRUFBaUI7QUFDL0M7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnQocmVxdWlyZShcIi4vbWFrZUV4ZWN1dGFibGVTY2hlbWFcIikpO1xuX19leHBvcnQocmVxdWlyZShcIi4vbW9ja1wiKSk7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9zdGl0Y2hpbmdcIikpO1xuX19leHBvcnQocmVxdWlyZShcIi4vdHJhbnNmb3Jtc1wiKSk7XG52YXIgc2NoZW1hVmlzaXRvcl8xID0gcmVxdWlyZShcIi4vc2NoZW1hVmlzaXRvclwiKTtcbmV4cG9ydHMuU2NoZW1hRGlyZWN0aXZlVmlzaXRvciA9IHNjaGVtYVZpc2l0b3JfMS5TY2hlbWFEaXJlY3RpdmVWaXNpdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/index.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/isEmptyObject.js":
/*!**********************************************************!*\
  !*** ./node_modules/graphql-tools/dist/isEmptyObject.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEmptyObject(obj) {\n    if (!obj) {\n        return true;\n    }\n    for (var key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.default = isEmptyObject;\n//# sourceMappingURL=isEmptyObject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2lzRW1wdHlPYmplY3QuanM/MmE5YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvaXNFbXB0eU9iamVjdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGlzRW1wdHlPYmplY3Qob2JqKSB7XG4gICAgaWYgKCFvYmopIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgICAgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gaXNFbXB0eU9iamVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzRW1wdHlPYmplY3QuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/isEmptyObject.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/isSpecifiedScalarType.js":
/*!******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/isSpecifiedScalarType.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\n// FIXME: Replace with https://github.com/graphql/graphql-js/blob/master/src/type/scalars.js#L139\nexports.specifiedScalarTypes = [\n    graphql_1.GraphQLString,\n    graphql_1.GraphQLInt,\n    graphql_1.GraphQLFloat,\n    graphql_1.GraphQLBoolean,\n    graphql_1.GraphQLID,\n];\nfunction isSpecifiedScalarType(type) {\n    return (graphql_1.isNamedType(type) &&\n        // Would prefer to use specifiedScalarTypes.some(), however %checks needs\n        // a simple expression.\n        (type.name === graphql_1.GraphQLString.name ||\n            type.name === graphql_1.GraphQLInt.name ||\n            type.name === graphql_1.GraphQLFloat.name ||\n            type.name === graphql_1.GraphQLBoolean.name ||\n            type.name === graphql_1.GraphQLID.name));\n}\nexports.default = isSpecifiedScalarType;\n//# sourceMappingURL=isSpecifiedScalarType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2lzU3BlY2lmaWVkU2NhbGFyVHlwZS5qcz81ZjljIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L2lzU3BlY2lmaWVkU2NhbGFyVHlwZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbi8vIEZJWE1FOiBSZXBsYWNlIHdpdGggaHR0cHM6Ly9naXRodWIuY29tL2dyYXBocWwvZ3JhcGhxbC1qcy9ibG9iL21hc3Rlci9zcmMvdHlwZS9zY2FsYXJzLmpzI0wxMzlcbmV4cG9ydHMuc3BlY2lmaWVkU2NhbGFyVHlwZXMgPSBbXG4gICAgZ3JhcGhxbF8xLkdyYXBoUUxTdHJpbmcsXG4gICAgZ3JhcGhxbF8xLkdyYXBoUUxJbnQsXG4gICAgZ3JhcGhxbF8xLkdyYXBoUUxGbG9hdCxcbiAgICBncmFwaHFsXzEuR3JhcGhRTEJvb2xlYW4sXG4gICAgZ3JhcGhxbF8xLkdyYXBoUUxJRCxcbl07XG5mdW5jdGlvbiBpc1NwZWNpZmllZFNjYWxhclR5cGUodHlwZSkge1xuICAgIHJldHVybiAoZ3JhcGhxbF8xLmlzTmFtZWRUeXBlKHR5cGUpICYmXG4gICAgICAgIC8vIFdvdWxkIHByZWZlciB0byB1c2Ugc3BlY2lmaWVkU2NhbGFyVHlwZXMuc29tZSgpLCBob3dldmVyICVjaGVja3MgbmVlZHNcbiAgICAgICAgLy8gYSBzaW1wbGUgZXhwcmVzc2lvbi5cbiAgICAgICAgKHR5cGUubmFtZSA9PT0gZ3JhcGhxbF8xLkdyYXBoUUxTdHJpbmcubmFtZSB8fFxuICAgICAgICAgICAgdHlwZS5uYW1lID09PSBncmFwaHFsXzEuR3JhcGhRTEludC5uYW1lIHx8XG4gICAgICAgICAgICB0eXBlLm5hbWUgPT09IGdyYXBocWxfMS5HcmFwaFFMRmxvYXQubmFtZSB8fFxuICAgICAgICAgICAgdHlwZS5uYW1lID09PSBncmFwaHFsXzEuR3JhcGhRTEJvb2xlYW4ubmFtZSB8fFxuICAgICAgICAgICAgdHlwZS5uYW1lID09PSBncmFwaHFsXzEuR3JhcGhRTElELm5hbWUpKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGlzU3BlY2lmaWVkU2NhbGFyVHlwZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzU3BlY2lmaWVkU2NhbGFyVHlwZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/isSpecifiedScalarType.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/makeExecutableSchema.js":
/*!*****************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/makeExecutableSchema.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar schemaVisitor_1 = __webpack_require__(/*! ./schemaVisitor */ \"./node_modules/graphql-tools/dist/schemaVisitor.js\");\nvar mergeDeep_1 = __webpack_require__(/*! ./mergeDeep */ \"./node_modules/graphql-tools/dist/mergeDeep.js\");\nvar generate_1 = __webpack_require__(/*! ./generate */ \"./node_modules/graphql-tools/dist/generate/index.js\");\nfunction makeExecutableSchema(_a) {\n    var typeDefs = _a.typeDefs, _b = _a.resolvers, resolvers = _b === void 0 ? {} : _b, connectors = _a.connectors, logger = _a.logger, _c = _a.allowUndefinedInResolve, allowUndefinedInResolve = _c === void 0 ? true : _c, _d = _a.resolverValidationOptions, resolverValidationOptions = _d === void 0 ? {} : _d, _e = _a.directiveResolvers, directiveResolvers = _e === void 0 ? null : _e, _f = _a.schemaDirectives, schemaDirectives = _f === void 0 ? null : _f, _g = _a.parseOptions, parseOptions = _g === void 0 ? {} : _g, _h = _a.inheritResolversFromInterfaces, inheritResolversFromInterfaces = _h === void 0 ? false : _h;\n    // Validate and clean up arguments\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new generate_1.SchemaError('Expected `resolverValidationOptions` to be an object');\n    }\n    if (!typeDefs) {\n        throw new generate_1.SchemaError('Must provide typeDefs');\n    }\n    if (!resolvers) {\n        throw new generate_1.SchemaError('Must provide resolvers');\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    var resolverMap = Array.isArray(resolvers)\n        ? resolvers.filter(function (resolverObj) { return typeof resolverObj === 'object'; }).reduce(mergeDeep_1.default, {})\n        : resolvers;\n    // Arguments are now validated and cleaned up\n    var schema = generate_1.buildSchemaFromTypeDefinitions(typeDefs, parseOptions);\n    schema = generate_1.addResolveFunctionsToSchema({\n        schema: schema,\n        resolvers: resolverMap,\n        resolverValidationOptions: resolverValidationOptions,\n        inheritResolversFromInterfaces: inheritResolversFromInterfaces\n    });\n    generate_1.assertResolveFunctionsPresent(schema, resolverValidationOptions);\n    if (!allowUndefinedInResolve) {\n        addCatchUndefinedToSchema(schema);\n    }\n    if (logger) {\n        addErrorLoggingToSchema(schema, logger);\n    }\n    if (typeof resolvers['__schema'] === 'function') {\n        // TODO a bit of a hack now, better rewrite generateSchema to attach it there.\n        // not doing that now, because I'd have to rewrite a lot of tests.\n        generate_1.addSchemaLevelResolveFunction(schema, resolvers['__schema']);\n    }\n    if (connectors) {\n        // connectors are optional, at least for now. That means you can just import them in the resolve\n        // function if you want.\n        generate_1.attachConnectorsToContext(schema, connectors);\n    }\n    if (directiveResolvers) {\n        generate_1.attachDirectiveResolvers(schema, directiveResolvers);\n    }\n    if (schemaDirectives) {\n        schemaVisitor_1.SchemaDirectiveVisitor.visitSchemaDirectives(schema, schemaDirectives);\n    }\n    return schema;\n}\nexports.makeExecutableSchema = makeExecutableSchema;\nfunction decorateToCatchUndefined(fn, hint) {\n    if (typeof fn === 'undefined') {\n        fn = graphql_1.defaultFieldResolver;\n    }\n    return function (root, args, ctx, info) {\n        var result = fn(root, args, ctx, info);\n        if (typeof result === 'undefined') {\n            throw new Error(\"Resolve function for \\\"\" + hint + \"\\\" returned undefined\");\n        }\n        return result;\n    };\n}\nfunction addCatchUndefinedToSchema(schema) {\n    generate_1.forEachField(schema, function (field, typeName, fieldName) {\n        var errorHint = typeName + \".\" + fieldName;\n        field.resolve = decorateToCatchUndefined(field.resolve, errorHint);\n    });\n}\nexports.addCatchUndefinedToSchema = addCatchUndefinedToSchema;\nfunction addErrorLoggingToSchema(schema, logger) {\n    if (!logger) {\n        throw new Error('Must provide a logger');\n    }\n    if (typeof logger.log !== 'function') {\n        throw new Error('Logger.log must be a function');\n    }\n    generate_1.forEachField(schema, function (field, typeName, fieldName) {\n        var errorHint = typeName + \".\" + fieldName;\n        field.resolve = generate_1.decorateWithLogger(field.resolve, logger, errorHint);\n    });\n}\nexports.addErrorLoggingToSchema = addErrorLoggingToSchema;\n__export(__webpack_require__(/*! ./generate */ \"./node_modules/graphql-tools/dist/generate/index.js\"));\n//# sourceMappingURL=makeExecutableSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L21ha2VFeGVjdXRhYmxlU2NoZW1hLmpzPzRhMmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsaURBQVM7QUFDakMsc0JBQXNCLG1CQUFPLENBQUMsMkVBQWlCO0FBQy9DLGtCQUFrQixtQkFBTyxDQUFDLG1FQUFhO0FBQ3ZDLGlCQUFpQixtQkFBTyxDQUFDLHVFQUFZO0FBQ3JDO0FBQ0EsaUZBQWlGLDhOQUE4TixrTkFBa047QUFDamdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCx3Q0FBd0MsRUFBRSxnQ0FBZ0M7QUFDN0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxTQUFTLG1CQUFPLENBQUMsdUVBQVk7QUFDN0IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L21ha2VFeGVjdXRhYmxlU2NoZW1hLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbnZhciBzY2hlbWFWaXNpdG9yXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFWaXNpdG9yXCIpO1xudmFyIG1lcmdlRGVlcF8xID0gcmVxdWlyZShcIi4vbWVyZ2VEZWVwXCIpO1xudmFyIGdlbmVyYXRlXzEgPSByZXF1aXJlKFwiLi9nZW5lcmF0ZVwiKTtcbmZ1bmN0aW9uIG1ha2VFeGVjdXRhYmxlU2NoZW1hKF9hKSB7XG4gICAgdmFyIHR5cGVEZWZzID0gX2EudHlwZURlZnMsIF9iID0gX2EucmVzb2x2ZXJzLCByZXNvbHZlcnMgPSBfYiA9PT0gdm9pZCAwID8ge30gOiBfYiwgY29ubmVjdG9ycyA9IF9hLmNvbm5lY3RvcnMsIGxvZ2dlciA9IF9hLmxvZ2dlciwgX2MgPSBfYS5hbGxvd1VuZGVmaW5lZEluUmVzb2x2ZSwgYWxsb3dVbmRlZmluZWRJblJlc29sdmUgPSBfYyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9jLCBfZCA9IF9hLnJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMsIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMgPSBfZCA9PT0gdm9pZCAwID8ge30gOiBfZCwgX2UgPSBfYS5kaXJlY3RpdmVSZXNvbHZlcnMsIGRpcmVjdGl2ZVJlc29sdmVycyA9IF9lID09PSB2b2lkIDAgPyBudWxsIDogX2UsIF9mID0gX2Euc2NoZW1hRGlyZWN0aXZlcywgc2NoZW1hRGlyZWN0aXZlcyA9IF9mID09PSB2b2lkIDAgPyBudWxsIDogX2YsIF9nID0gX2EucGFyc2VPcHRpb25zLCBwYXJzZU9wdGlvbnMgPSBfZyA9PT0gdm9pZCAwID8ge30gOiBfZywgX2ggPSBfYS5pbmhlcml0UmVzb2x2ZXJzRnJvbUludGVyZmFjZXMsIGluaGVyaXRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcyA9IF9oID09PSB2b2lkIDAgPyBmYWxzZSA6IF9oO1xuICAgIC8vIFZhbGlkYXRlIGFuZCBjbGVhbiB1cCBhcmd1bWVudHNcbiAgICBpZiAodHlwZW9mIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHRocm93IG5ldyBnZW5lcmF0ZV8xLlNjaGVtYUVycm9yKCdFeHBlY3RlZCBgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9uc2AgdG8gYmUgYW4gb2JqZWN0Jyk7XG4gICAgfVxuICAgIGlmICghdHlwZURlZnMpIHtcbiAgICAgICAgdGhyb3cgbmV3IGdlbmVyYXRlXzEuU2NoZW1hRXJyb3IoJ011c3QgcHJvdmlkZSB0eXBlRGVmcycpO1xuICAgIH1cbiAgICBpZiAoIXJlc29sdmVycykge1xuICAgICAgICB0aHJvdyBuZXcgZ2VuZXJhdGVfMS5TY2hlbWFFcnJvcignTXVzdCBwcm92aWRlIHJlc29sdmVycycpO1xuICAgIH1cbiAgICAvLyBXZSBhbGxvdyBwYXNzaW5nIGluIGFuIGFycmF5IG9mIHJlc29sdmVyIG1hcHMsIGluIHdoaWNoIGNhc2Ugd2UgbWVyZ2UgdGhlbVxuICAgIHZhciByZXNvbHZlck1hcCA9IEFycmF5LmlzQXJyYXkocmVzb2x2ZXJzKVxuICAgICAgICA/IHJlc29sdmVycy5maWx0ZXIoZnVuY3Rpb24gKHJlc29sdmVyT2JqKSB7IHJldHVybiB0eXBlb2YgcmVzb2x2ZXJPYmogPT09ICdvYmplY3QnOyB9KS5yZWR1Y2UobWVyZ2VEZWVwXzEuZGVmYXVsdCwge30pXG4gICAgICAgIDogcmVzb2x2ZXJzO1xuICAgIC8vIEFyZ3VtZW50cyBhcmUgbm93IHZhbGlkYXRlZCBhbmQgY2xlYW5lZCB1cFxuICAgIHZhciBzY2hlbWEgPSBnZW5lcmF0ZV8xLmJ1aWxkU2NoZW1hRnJvbVR5cGVEZWZpbml0aW9ucyh0eXBlRGVmcywgcGFyc2VPcHRpb25zKTtcbiAgICBzY2hlbWEgPSBnZW5lcmF0ZV8xLmFkZFJlc29sdmVGdW5jdGlvbnNUb1NjaGVtYSh7XG4gICAgICAgIHNjaGVtYTogc2NoZW1hLFxuICAgICAgICByZXNvbHZlcnM6IHJlc29sdmVyTWFwLFxuICAgICAgICByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zOiByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zLFxuICAgICAgICBpbmhlcml0UmVzb2x2ZXJzRnJvbUludGVyZmFjZXM6IGluaGVyaXRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlc1xuICAgIH0pO1xuICAgIGdlbmVyYXRlXzEuYXNzZXJ0UmVzb2x2ZUZ1bmN0aW9uc1ByZXNlbnQoc2NoZW1hLCByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zKTtcbiAgICBpZiAoIWFsbG93VW5kZWZpbmVkSW5SZXNvbHZlKSB7XG4gICAgICAgIGFkZENhdGNoVW5kZWZpbmVkVG9TY2hlbWEoc2NoZW1hKTtcbiAgICB9XG4gICAgaWYgKGxvZ2dlcikge1xuICAgICAgICBhZGRFcnJvckxvZ2dpbmdUb1NjaGVtYShzY2hlbWEsIGxvZ2dlcik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVzb2x2ZXJzWydfX3NjaGVtYSddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIFRPRE8gYSBiaXQgb2YgYSBoYWNrIG5vdywgYmV0dGVyIHJld3JpdGUgZ2VuZXJhdGVTY2hlbWEgdG8gYXR0YWNoIGl0IHRoZXJlLlxuICAgICAgICAvLyBub3QgZG9pbmcgdGhhdCBub3csIGJlY2F1c2UgSSdkIGhhdmUgdG8gcmV3cml0ZSBhIGxvdCBvZiB0ZXN0cy5cbiAgICAgICAgZ2VuZXJhdGVfMS5hZGRTY2hlbWFMZXZlbFJlc29sdmVGdW5jdGlvbihzY2hlbWEsIHJlc29sdmVyc1snX19zY2hlbWEnXSk7XG4gICAgfVxuICAgIGlmIChjb25uZWN0b3JzKSB7XG4gICAgICAgIC8vIGNvbm5lY3RvcnMgYXJlIG9wdGlvbmFsLCBhdCBsZWFzdCBmb3Igbm93LiBUaGF0IG1lYW5zIHlvdSBjYW4ganVzdCBpbXBvcnQgdGhlbSBpbiB0aGUgcmVzb2x2ZVxuICAgICAgICAvLyBmdW5jdGlvbiBpZiB5b3Ugd2FudC5cbiAgICAgICAgZ2VuZXJhdGVfMS5hdHRhY2hDb25uZWN0b3JzVG9Db250ZXh0KHNjaGVtYSwgY29ubmVjdG9ycyk7XG4gICAgfVxuICAgIGlmIChkaXJlY3RpdmVSZXNvbHZlcnMpIHtcbiAgICAgICAgZ2VuZXJhdGVfMS5hdHRhY2hEaXJlY3RpdmVSZXNvbHZlcnMoc2NoZW1hLCBkaXJlY3RpdmVSZXNvbHZlcnMpO1xuICAgIH1cbiAgICBpZiAoc2NoZW1hRGlyZWN0aXZlcykge1xuICAgICAgICBzY2hlbWFWaXNpdG9yXzEuU2NoZW1hRGlyZWN0aXZlVmlzaXRvci52aXNpdFNjaGVtYURpcmVjdGl2ZXMoc2NoZW1hLCBzY2hlbWFEaXJlY3RpdmVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHNjaGVtYTtcbn1cbmV4cG9ydHMubWFrZUV4ZWN1dGFibGVTY2hlbWEgPSBtYWtlRXhlY3V0YWJsZVNjaGVtYTtcbmZ1bmN0aW9uIGRlY29yYXRlVG9DYXRjaFVuZGVmaW5lZChmbiwgaGludCkge1xuICAgIGlmICh0eXBlb2YgZm4gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGZuID0gZ3JhcGhxbF8xLmRlZmF1bHRGaWVsZFJlc29sdmVyO1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24gKHJvb3QsIGFyZ3MsIGN0eCwgaW5mbykge1xuICAgICAgICB2YXIgcmVzdWx0ID0gZm4ocm9vdCwgYXJncywgY3R4LCBpbmZvKTtcbiAgICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZXNvbHZlIGZ1bmN0aW9uIGZvciBcXFwiXCIgKyBoaW50ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG59XG5mdW5jdGlvbiBhZGRDYXRjaFVuZGVmaW5lZFRvU2NoZW1hKHNjaGVtYSkge1xuICAgIGdlbmVyYXRlXzEuZm9yRWFjaEZpZWxkKHNjaGVtYSwgZnVuY3Rpb24gKGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKSB7XG4gICAgICAgIHZhciBlcnJvckhpbnQgPSB0eXBlTmFtZSArIFwiLlwiICsgZmllbGROYW1lO1xuICAgICAgICBmaWVsZC5yZXNvbHZlID0gZGVjb3JhdGVUb0NhdGNoVW5kZWZpbmVkKGZpZWxkLnJlc29sdmUsIGVycm9ySGludCk7XG4gICAgfSk7XG59XG5leHBvcnRzLmFkZENhdGNoVW5kZWZpbmVkVG9TY2hlbWEgPSBhZGRDYXRjaFVuZGVmaW5lZFRvU2NoZW1hO1xuZnVuY3Rpb24gYWRkRXJyb3JMb2dnaW5nVG9TY2hlbWEoc2NoZW1hLCBsb2dnZXIpIHtcbiAgICBpZiAoIWxvZ2dlcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ011c3QgcHJvdmlkZSBhIGxvZ2dlcicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGxvZ2dlci5sb2cgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdMb2dnZXIubG9nIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuICAgIH1cbiAgICBnZW5lcmF0ZV8xLmZvckVhY2hGaWVsZChzY2hlbWEsIGZ1bmN0aW9uIChmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSkge1xuICAgICAgICB2YXIgZXJyb3JIaW50ID0gdHlwZU5hbWUgKyBcIi5cIiArIGZpZWxkTmFtZTtcbiAgICAgICAgZmllbGQucmVzb2x2ZSA9IGdlbmVyYXRlXzEuZGVjb3JhdGVXaXRoTG9nZ2VyKGZpZWxkLnJlc29sdmUsIGxvZ2dlciwgZXJyb3JIaW50KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuYWRkRXJyb3JMb2dnaW5nVG9TY2hlbWEgPSBhZGRFcnJvckxvZ2dpbmdUb1NjaGVtYTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuL2dlbmVyYXRlXCIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ha2VFeGVjdXRhYmxlU2NoZW1hLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/makeExecutableSchema.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/mergeDeep.js":
/*!******************************************************!*\
  !*** ./node_modules/graphql-tools/dist/mergeDeep.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction mergeDeep(target, source) {\n    var output = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(function (key) {\n            var _a, _b;\n            if (isObject(source[key])) {\n                if (!(key in target)) {\n                    Object.assign(output, (_a = {}, _a[key] = source[key], _a));\n                }\n                else {\n                    output[key] = mergeDeep(target[key], source[key]);\n                }\n            }\n            else {\n                Object.assign(output, (_b = {}, _b[key] = source[key], _b));\n            }\n        });\n    }\n    return output;\n}\nexports.default = mergeDeep;\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceMappingURL=mergeDeep.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L21lcmdlRGVlcC5qcz9mMDU5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L21lcmdlRGVlcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIG1lcmdlRGVlcCh0YXJnZXQsIHNvdXJjZSkge1xuICAgIHZhciBvdXRwdXQgPSBPYmplY3QuYXNzaWduKHt9LCB0YXJnZXQpO1xuICAgIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgICAgT2JqZWN0LmtleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEoa2V5IGluIHRhcmdldCkpIHtcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvdXRwdXQsIChfYSA9IHt9LCBfYVtrZXldID0gc291cmNlW2tleV0sIF9hKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXRba2V5XSA9IG1lcmdlRGVlcCh0YXJnZXRba2V5XSwgc291cmNlW2tleV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob3V0cHV0LCAoX2IgPSB7fSwgX2Jba2V5XSA9IHNvdXJjZVtrZXldLCBfYikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IG1lcmdlRGVlcDtcbmZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXJnZURlZXAuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/mergeDeep.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/mock.js":
/*!*************************************************!*\
  !*** ./node_modules/graphql-tools/dist/mock.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar uuid = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nvar makeExecutableSchema_1 = __webpack_require__(/*! ./makeExecutableSchema */ \"./node_modules/graphql-tools/dist/makeExecutableSchema.js\");\n// This function wraps addMockFunctionsToSchema for more convenience\nfunction mockServer(schema, mocks, preserveResolvers) {\n    if (preserveResolvers === void 0) { preserveResolvers = false; }\n    var mySchema;\n    if (!(schema instanceof graphql_1.GraphQLSchema)) {\n        // TODO: provide useful error messages here if this fails\n        mySchema = makeExecutableSchema_1.buildSchemaFromTypeDefinitions(schema);\n    }\n    else {\n        mySchema = schema;\n    }\n    addMockFunctionsToSchema({ schema: mySchema, mocks: mocks, preserveResolvers: preserveResolvers });\n    return { query: function (query, vars) { return graphql_1.graphql(mySchema, query, {}, {}, vars); } };\n}\nexports.mockServer = mockServer;\nvar defaultMockMap = new Map();\ndefaultMockMap.set('Int', function () { return Math.round(Math.random() * 200) - 100; });\ndefaultMockMap.set('Float', function () { return Math.random() * 200 - 100; });\ndefaultMockMap.set('String', function () { return 'Hello World'; });\ndefaultMockMap.set('Boolean', function () { return Math.random() > 0.5; });\ndefaultMockMap.set('ID', function () { return uuid.v4(); });\n// TODO allow providing a seed such that lengths of list could be deterministic\n// this could be done by using casual to get a random list length if the casual\n// object is global.\nfunction addMockFunctionsToSchema(_a) {\n    var schema = _a.schema, _b = _a.mocks, mocks = _b === void 0 ? {} : _b, _c = _a.preserveResolvers, preserveResolvers = _c === void 0 ? false : _c;\n    if (!schema) {\n        throw new Error('Must provide schema to mock');\n    }\n    if (!(schema instanceof graphql_1.GraphQLSchema)) {\n        throw new Error('Value at \"schema\" must be of type GraphQLSchema');\n    }\n    if (!isObject(mocks)) {\n        throw new Error('mocks must be of type Object');\n    }\n    // use Map internally, because that API is nicer.\n    var mockFunctionMap = new Map();\n    Object.keys(mocks).forEach(function (typeName) {\n        mockFunctionMap.set(typeName, mocks[typeName]);\n    });\n    mockFunctionMap.forEach(function (mockFunction, mockTypeName) {\n        if (typeof mockFunction !== 'function') {\n            throw new Error(\"mockFunctionMap[\" + mockTypeName + \"] must be a function\");\n        }\n    });\n    var mockType = function (type, typeName, fieldName) {\n        // order of precendence for mocking:\n        // 1. if the object passed in already has fieldName, just use that\n        // --> if it's a function, that becomes your resolver\n        // --> if it's a value, the mock resolver will return that\n        // 2. if the nullableType is a list, recurse\n        // 2. if there's a mock defined for this typeName, that will be used\n        // 3. if there's no mock defined, use the default mocks for this type\n        return function (root, args, context, info) {\n            // nullability doesn't matter for the purpose of mocking.\n            var fieldType = graphql_1.getNullableType(type);\n            var namedFieldType = graphql_1.getNamedType(fieldType);\n            if (root && typeof root[fieldName] !== 'undefined') {\n                var result = void 0;\n                // if we're here, the field is already defined\n                if (typeof root[fieldName] === 'function') {\n                    result = root[fieldName](root, args, context, info);\n                    if (result instanceof MockList) {\n                        result = result.mock(root, args, context, info, fieldType, mockType);\n                    }\n                }\n                else {\n                    result = root[fieldName];\n                }\n                // Now we merge the result with the default mock for this type.\n                // This allows overriding defaults while writing very little code.\n                if (mockFunctionMap.has(namedFieldType.name)) {\n                    result = mergeMocks(mockFunctionMap\n                        .get(namedFieldType.name)\n                        .bind(null, root, args, context, info), result);\n                }\n                return result;\n            }\n            if (fieldType instanceof graphql_1.GraphQLList ||\n                fieldType instanceof graphql_1.GraphQLNonNull) {\n                return [\n                    mockType(fieldType.ofType)(root, args, context, info),\n                    mockType(fieldType.ofType)(root, args, context, info),\n                ];\n            }\n            if (mockFunctionMap.has(fieldType.name) &&\n                !(fieldType instanceof graphql_1.GraphQLUnionType ||\n                    fieldType instanceof graphql_1.GraphQLInterfaceType)) {\n                // the object passed doesn't have this field, so we apply the default mock\n                return mockFunctionMap.get(fieldType.name)(root, args, context, info);\n            }\n            if (fieldType instanceof graphql_1.GraphQLObjectType) {\n                // objects don't return actual data, we only need to mock scalars!\n                return {};\n            }\n            // if a mock function is provided for unionType or interfaceType, execute it to resolve the concrete type\n            // otherwise randomly pick a type from all implementation types\n            if (fieldType instanceof graphql_1.GraphQLUnionType ||\n                fieldType instanceof graphql_1.GraphQLInterfaceType) {\n                var implementationType = void 0;\n                if (mockFunctionMap.has(fieldType.name)) {\n                    var interfaceMockObj = mockFunctionMap.get(fieldType.name)(root, args, context, info);\n                    if (!interfaceMockObj || !interfaceMockObj.__typename) {\n                        return Error(\"Please return a __typename in \\\"\" + fieldType.name + \"\\\"\");\n                    }\n                    implementationType = schema.getType(interfaceMockObj.__typename);\n                }\n                else {\n                    var possibleTypes = schema.getPossibleTypes(fieldType);\n                    implementationType = getRandomElement(possibleTypes);\n                }\n                return Object.assign({ __typename: implementationType }, mockType(implementationType)(root, args, context, info));\n            }\n            if (fieldType instanceof graphql_1.GraphQLEnumType) {\n                return getRandomElement(fieldType.getValues()).value;\n            }\n            if (defaultMockMap.has(fieldType.name)) {\n                return defaultMockMap.get(fieldType.name)(root, args, context, info);\n            }\n            // if we get to here, we don't have a value, and we don't have a mock for this type,\n            // we could return undefined, but that would be hard to debug, so we throw instead.\n            // however, we returning it instead of throwing it, so preserveResolvers can handle the failures.\n            return Error(\"No mock defined for type \\\"\" + fieldType.name + \"\\\"\");\n        };\n    };\n    makeExecutableSchema_1.forEachField(schema, function (field, typeName, fieldName) {\n        assignResolveType(field.type, preserveResolvers);\n        var mockResolver;\n        // we have to handle the root mutation and root query types differently,\n        // because no resolver is called at the root.\n        /* istanbul ignore next: Must provide schema DefinitionNode with query type or a type named Query. */\n        var isOnQueryType = schema.getQueryType() && schema.getQueryType().name === typeName;\n        var isOnMutationType = schema.getMutationType() && schema.getMutationType().name === typeName;\n        if (isOnQueryType || isOnMutationType) {\n            if (mockFunctionMap.has(typeName)) {\n                var rootMock_1 = mockFunctionMap.get(typeName);\n                // XXX: BUG in here, need to provide proper signature for rootMock.\n                if (typeof rootMock_1(undefined, {}, {}, {})[fieldName] === 'function') {\n                    mockResolver = function (root, args, context, info) {\n                        var updatedRoot = root || {}; // TODO: should we clone instead?\n                        updatedRoot[fieldName] = rootMock_1(root, args, context, info)[fieldName];\n                        // XXX this is a bit of a hack to still use mockType, which\n                        // lets you mock lists etc. as well\n                        // otherwise we could just set field.resolve to rootMock()[fieldName]\n                        // it's like pretending there was a resolve function that ran before\n                        // the root resolve function.\n                        return mockType(field.type, typeName, fieldName)(updatedRoot, args, context, info);\n                    };\n                }\n            }\n        }\n        if (!mockResolver) {\n            mockResolver = mockType(field.type, typeName, fieldName);\n        }\n        if (!preserveResolvers || !field.resolve) {\n            field.resolve = mockResolver;\n        }\n        else {\n            var oldResolver_1 = field.resolve;\n            field.resolve = function (rootObject, args, context, info) {\n                return Promise.all([\n                    mockResolver(rootObject, args, context, info),\n                    oldResolver_1(rootObject, args, context, info),\n                ]).then(function (values) {\n                    var mockedValue = values[0], resolvedValue = values[1];\n                    // In case we couldn't mock\n                    if (mockedValue instanceof Error) {\n                        // only if value was not resolved, populate the error.\n                        if (undefined === resolvedValue) {\n                            throw mockedValue;\n                        }\n                        return resolvedValue;\n                    }\n                    if (resolvedValue instanceof Date && mockedValue instanceof Date) {\n                        return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                    }\n                    if (isObject(mockedValue) && isObject(resolvedValue)) {\n                        // Object.assign() won't do here, as we need to all properties, including\n                        // the non-enumerable ones and defined using Object.defineProperty\n                        var emptyObject = Object.create(Object.getPrototypeOf(resolvedValue));\n                        return copyOwnProps(emptyObject, resolvedValue, mockedValue);\n                    }\n                    return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                });\n            };\n        }\n    });\n}\nexports.addMockFunctionsToSchema = addMockFunctionsToSchema;\nfunction isObject(thing) {\n    return thing === Object(thing) && !Array.isArray(thing);\n}\n// returns a random element from that ary\nfunction getRandomElement(ary) {\n    var sample = Math.floor(Math.random() * ary.length);\n    return ary[sample];\n}\nfunction mergeObjects(a, b) {\n    return Object.assign(a, b);\n}\nfunction copyOwnPropsIfNotPresent(target, source) {\n    Object.getOwnPropertyNames(source).forEach(function (prop) {\n        if (!Object.getOwnPropertyDescriptor(target, prop)) {\n            Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));\n        }\n    });\n}\nfunction copyOwnProps(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        var chain = source;\n        while (chain) {\n            copyOwnPropsIfNotPresent(target, chain);\n            chain = Object.getPrototypeOf(chain);\n        }\n    });\n    return target;\n}\n// takes either an object or a (possibly nested) array\n// and completes the customMock object with any fields\n// defined on genericMock\n// only merges objects or arrays. Scalars are returned as is\nfunction mergeMocks(genericMockFunction, customMock) {\n    if (Array.isArray(customMock)) {\n        return customMock.map(function (el) { return mergeMocks(genericMockFunction, el); });\n    }\n    if (isObject(customMock)) {\n        return mergeObjects(genericMockFunction(), customMock);\n    }\n    return customMock;\n}\nfunction getResolveType(namedFieldType) {\n    if (namedFieldType instanceof graphql_1.GraphQLInterfaceType ||\n        namedFieldType instanceof graphql_1.GraphQLUnionType) {\n        return namedFieldType.resolveType;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction assignResolveType(type, preserveResolvers) {\n    var fieldType = graphql_1.getNullableType(type);\n    var namedFieldType = graphql_1.getNamedType(fieldType);\n    var oldResolveType = getResolveType(namedFieldType);\n    if (preserveResolvers && oldResolveType && oldResolveType.length) {\n        return;\n    }\n    if (namedFieldType instanceof graphql_1.GraphQLUnionType ||\n        namedFieldType instanceof graphql_1.GraphQLInterfaceType) {\n        // the default `resolveType` always returns null. We add a fallback\n        // resolution that works with how unions and interface are mocked\n        namedFieldType.resolveType = function (data, context, info) {\n            return info.schema.getType(data.__typename);\n        };\n    }\n}\nvar MockList = /** @class */ (function () {\n    // wrappedFunction can return another MockList or a value\n    function MockList(len, wrappedFunction) {\n        this.len = len;\n        if (typeof wrappedFunction !== 'undefined') {\n            if (typeof wrappedFunction !== 'function') {\n                throw new Error('Second argument to MockList must be a function or undefined');\n            }\n            this.wrappedFunction = wrappedFunction;\n        }\n    }\n    MockList.prototype.mock = function (root, args, context, info, fieldType, mockTypeFunc) {\n        var arr;\n        if (Array.isArray(this.len)) {\n            arr = new Array(this.randint(this.len[0], this.len[1]));\n        }\n        else {\n            arr = new Array(this.len);\n        }\n        for (var i = 0; i < arr.length; i++) {\n            if (typeof this.wrappedFunction === 'function') {\n                var res = this.wrappedFunction(root, args, context, info);\n                if (res instanceof MockList) {\n                    var nullableType = graphql_1.getNullableType(fieldType.ofType);\n                    arr[i] = res.mock(root, args, context, info, nullableType, mockTypeFunc);\n                }\n                else {\n                    arr[i] = res;\n                }\n            }\n            else {\n                arr[i] = mockTypeFunc(fieldType.ofType)(root, args, context, info);\n            }\n        }\n        return arr;\n    };\n    MockList.prototype.randint = function (low, high) {\n        return Math.floor(Math.random() * (high - low + 1) + low);\n    };\n    return MockList;\n}());\nexports.MockList = MockList;\n//# sourceMappingURL=mock.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/mock.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/schemaVisitor.js":
/*!**********************************************************!*\
  !*** ./node_modules/graphql-tools/dist/schemaVisitor.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar values_1 = __webpack_require__(/*! graphql/execution/values */ \"./node_modules/graphql/execution/values.mjs\");\nvar hasOwn = Object.prototype.hasOwnProperty;\n// Abstract base class of any visitor implementation, defining the available\n// visitor methods along with their parameter types, and providing a static\n// helper function for determining whether a subclass implements a given\n// visitor method, as opposed to inheriting one of the stubs defined here.\nvar SchemaVisitor = /** @class */ (function () {\n    function SchemaVisitor() {\n    }\n    // Determine if this SchemaVisitor (sub)class implements a particular\n    // visitor method.\n    SchemaVisitor.implementsVisitorMethod = function (methodName) {\n        if (!methodName.startsWith('visit')) {\n            return false;\n        }\n        var method = this.prototype[methodName];\n        if (typeof method !== 'function') {\n            return false;\n        }\n        if (this === SchemaVisitor) {\n            // The SchemaVisitor class implements every visitor method.\n            return true;\n        }\n        var stub = SchemaVisitor.prototype[methodName];\n        if (method === stub) {\n            // If this.prototype[methodName] was just inherited from SchemaVisitor,\n            // then this class does not really implement the method.\n            return false;\n        }\n        return true;\n    };\n    // Concrete subclasses of SchemaVisitor should override one or more of these\n    // visitor methods, in order to express their interest in handling certain\n    // schema types/locations. Each method may return null to remove the given\n    // type from the schema, a non-null value of the same type to update the\n    // type in the schema, or nothing to leave the type as it was.\n    /* tslint:disable:no-empty */\n    SchemaVisitor.prototype.visitSchema = function (schema) { };\n    SchemaVisitor.prototype.visitScalar = function (scalar) { };\n    SchemaVisitor.prototype.visitObject = function (object) { };\n    SchemaVisitor.prototype.visitFieldDefinition = function (field, details) { };\n    SchemaVisitor.prototype.visitArgumentDefinition = function (argument, details) { };\n    SchemaVisitor.prototype.visitInterface = function (iface) { };\n    SchemaVisitor.prototype.visitUnion = function (union) { };\n    SchemaVisitor.prototype.visitEnum = function (type) { };\n    SchemaVisitor.prototype.visitEnumValue = function (value, details) { };\n    SchemaVisitor.prototype.visitInputObject = function (object) { };\n    SchemaVisitor.prototype.visitInputFieldDefinition = function (field, details) { };\n    return SchemaVisitor;\n}());\nexports.SchemaVisitor = SchemaVisitor;\n// Generic function for visiting GraphQLSchema objects.\nfunction visitSchema(schema, \n// To accommodate as many different visitor patterns as possible, the\n// visitSchema function does not simply accept a single instance of the\n// SchemaVisitor class, but instead accepts a function that takes the\n// current VisitableSchemaType object and the name of a visitor method and\n// returns an array of SchemaVisitor instances that implement the visitor\n// method and have an interest in handling the given VisitableSchemaType\n// object. In the simplest case, this function can always return an array\n// containing a single visitor object, without even looking at the type or\n// methodName parameters. In other cases, this function might sometimes\n// return an empty array to indicate there are no visitors that should be\n// applied to the given VisitableSchemaType object. For an example of a\n// visitor pattern that benefits from this abstraction, see the\n// SchemaDirectiveVisitor class below.\nvisitorSelector) {\n    // Helper function that calls visitorSelector and applies the resulting\n    // visitors to the given type, with arguments [type, ...args].\n    function callMethod(methodName, type) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        visitorSelector(type, methodName).every(function (visitor) {\n            var newType = visitor[methodName].apply(visitor, [type].concat(args));\n            if (typeof newType === 'undefined') {\n                // Keep going without modifying type.\n                return true;\n            }\n            if (methodName === 'visitSchema' ||\n                type instanceof graphql_1.GraphQLSchema) {\n                throw new Error(\"Method \" + methodName + \" cannot replace schema with \" + newType);\n            }\n            if (newType === null) {\n                // Stop the loop and return null form callMethod, which will cause\n                // the type to be removed from the schema.\n                type = null;\n                return false;\n            }\n            // Update type to the new type returned by the visitor method, so that\n            // later directives will see the new type, and callMethod will return\n            // the final type.\n            type = newType;\n            return true;\n        });\n        // If there were no directives for this type object, or if all visitor\n        // methods returned nothing, type will be returned unmodified.\n        return type;\n    }\n    // Recursive helper function that calls any appropriate visitor methods for\n    // each object in the schema, then traverses the object's children (if any).\n    function visit(type) {\n        if (type instanceof graphql_1.GraphQLSchema) {\n            // Unlike the other types, the root GraphQLSchema object cannot be\n            // replaced by visitor methods, because that would make life very hard\n            // for SchemaVisitor subclasses that rely on the original schema object.\n            callMethod('visitSchema', type);\n            updateEachKey(type.getTypeMap(), function (namedType, typeName) {\n                if (!typeName.startsWith('__')) {\n                    // Call visit recursively to let it determine which concrete\n                    // subclass of GraphQLNamedType we found in the type map. Because\n                    // we're using updateEachKey, the result of visit(namedType) may\n                    // cause the type to be removed or replaced.\n                    return visit(namedType);\n                }\n            });\n            return type;\n        }\n        if (type instanceof graphql_1.GraphQLObjectType) {\n            // Note that callMethod('visitObject', type) may not actually call any\n            // methods, if there are no @directive annotations associated with this\n            // type, or if this SchemaDirectiveVisitor subclass does not override\n            // the visitObject method.\n            var newObject = callMethod('visitObject', type);\n            if (newObject) {\n                visitFields(newObject);\n            }\n            return newObject;\n        }\n        if (type instanceof graphql_1.GraphQLInterfaceType) {\n            var newInterface = callMethod('visitInterface', type);\n            if (newInterface) {\n                visitFields(newInterface);\n            }\n            return newInterface;\n        }\n        if (type instanceof graphql_1.GraphQLInputObjectType) {\n            var newInputObject_1 = callMethod('visitInputObject', type);\n            if (newInputObject_1) {\n                updateEachKey(newInputObject_1.getFields(), function (field) {\n                    // Since we call a different method for input object fields, we\n                    // can't reuse the visitFields function here.\n                    return callMethod('visitInputFieldDefinition', field, {\n                        objectType: newInputObject_1,\n                    });\n                });\n            }\n            return newInputObject_1;\n        }\n        if (type instanceof graphql_1.GraphQLScalarType) {\n            return callMethod('visitScalar', type);\n        }\n        if (type instanceof graphql_1.GraphQLUnionType) {\n            return callMethod('visitUnion', type);\n        }\n        if (type instanceof graphql_1.GraphQLEnumType) {\n            var newEnum_1 = callMethod('visitEnum', type);\n            if (newEnum_1) {\n                updateEachKey(newEnum_1.getValues(), function (value) {\n                    return callMethod('visitEnumValue', value, {\n                        enumType: newEnum_1,\n                    });\n                });\n            }\n            return newEnum_1;\n        }\n        throw new Error(\"Unexpected schema type: \" + type);\n    }\n    function visitFields(type) {\n        updateEachKey(type.getFields(), function (field) {\n            // It would be nice if we could call visit(field) recursively here, but\n            // GraphQLField is merely a type, not a value that can be detected using\n            // an instanceof check, so we have to visit the fields in this lexical\n            // context, so that TypeScript can validate the call to\n            // visitFieldDefinition.\n            var newField = callMethod('visitFieldDefinition', field, {\n                // While any field visitor needs a reference to the field object, some\n                // field visitors may also need to know the enclosing (parent) type,\n                // perhaps to determine if the parent is a GraphQLObjectType or a\n                // GraphQLInterfaceType. To obtain a reference to the parent, a\n                // visitor method can have a second parameter, which will be an object\n                // with an .objectType property referring to the parent.\n                objectType: type,\n            });\n            if (newField && newField.args) {\n                updateEachKey(newField.args, function (arg) {\n                    return callMethod('visitArgumentDefinition', arg, {\n                        // Like visitFieldDefinition, visitArgumentDefinition takes a\n                        // second parameter that provides additional context, namely the\n                        // parent .field and grandparent .objectType. Remember that the\n                        // current GraphQLSchema is always available via this.schema.\n                        field: newField,\n                        objectType: type,\n                    });\n                });\n            }\n            return newField;\n        });\n    }\n    visit(schema);\n    // Return the original schema for convenience, even though it cannot have\n    // been replaced or removed by the code above.\n    return schema;\n}\nexports.visitSchema = visitSchema;\n// Update any references to named schema types that disagree with the named\n// types found in schema.getTypeMap().\nfunction healSchema(schema) {\n    heal(schema);\n    return schema;\n    function heal(type) {\n        if (type instanceof graphql_1.GraphQLSchema) {\n            var originalTypeMap_1 = type.getTypeMap();\n            var actualNamedTypeMap_1 = Object.create(null);\n            // If any of the .name properties of the GraphQLNamedType objects in\n            // schema.getTypeMap() have changed, the keys of the type map need to\n            // be updated accordingly.\n            each(originalTypeMap_1, function (namedType, typeName) {\n                if (typeName.startsWith('__')) {\n                    return;\n                }\n                var actualName = namedType.name;\n                if (actualName.startsWith('__')) {\n                    return;\n                }\n                if (hasOwn.call(actualNamedTypeMap_1, actualName)) {\n                    throw new Error(\"Duplicate schema type name \" + actualName);\n                }\n                actualNamedTypeMap_1[actualName] = namedType;\n                // Note: we are deliberately leaving namedType in the schema by its\n                // original name (which might be different from actualName), so that\n                // references by that name can be healed.\n            });\n            // Now add back every named type by its actual name.\n            each(actualNamedTypeMap_1, function (namedType, typeName) {\n                originalTypeMap_1[typeName] = namedType;\n            });\n            // Directive declaration argument types can refer to named types.\n            each(type.getDirectives(), function (decl) {\n                if (decl.args) {\n                    each(decl.args, function (arg) {\n                        arg.type = healType(arg.type);\n                    });\n                }\n            });\n            each(originalTypeMap_1, function (namedType, typeName) {\n                if (!typeName.startsWith('__')) {\n                    heal(namedType);\n                }\n            });\n            updateEachKey(originalTypeMap_1, function (namedType, typeName) {\n                // Dangling references to renamed types should remain in the schema\n                // during healing, but must be removed now, so that the following\n                // invariant holds for all names: schema.getType(name).name === name\n                if (!typeName.startsWith('__') &&\n                    !hasOwn.call(actualNamedTypeMap_1, typeName)) {\n                    return null;\n                }\n            });\n        }\n        else if (type instanceof graphql_1.GraphQLObjectType) {\n            healFields(type);\n            each(type.getInterfaces(), function (iface) { return heal(iface); });\n        }\n        else if (type instanceof graphql_1.GraphQLInterfaceType) {\n            healFields(type);\n        }\n        else if (type instanceof graphql_1.GraphQLInputObjectType) {\n            each(type.getFields(), function (field) {\n                field.type = healType(field.type);\n            });\n        }\n        else if (type instanceof graphql_1.GraphQLScalarType) {\n            // Nothing to do.\n        }\n        else if (type instanceof graphql_1.GraphQLUnionType) {\n            updateEachKey(type.getTypes(), function (t) { return healType(t); });\n        }\n        else if (type instanceof graphql_1.GraphQLEnumType) {\n            // Nothing to do.\n        }\n        else {\n            throw new Error(\"Unexpected schema type: \" + type);\n        }\n    }\n    function healFields(type) {\n        each(type.getFields(), function (field) {\n            field.type = healType(field.type);\n            if (field.args) {\n                each(field.args, function (arg) {\n                    arg.type = healType(arg.type);\n                });\n            }\n        });\n    }\n    function healType(type) {\n        // Unwrap the two known wrapper types\n        if (type instanceof graphql_1.GraphQLList) {\n            type = new graphql_1.GraphQLList(healType(type.ofType));\n        }\n        else if (type instanceof graphql_1.GraphQLNonNull) {\n            type = new graphql_1.GraphQLNonNull(healType(type.ofType));\n        }\n        else if (graphql_1.isNamedType(type)) {\n            // If a type annotation on a field or an argument or a union member is\n            // any `GraphQLNamedType` with a `name`, then it must end up identical\n            // to `schema.getType(name)`, since `schema.getTypeMap()` is the source\n            // of truth for all named schema types.\n            var namedType = type;\n            var officialType = schema.getType(namedType.name);\n            if (officialType && namedType !== officialType) {\n                return officialType;\n            }\n        }\n        return type;\n    }\n}\nexports.healSchema = healSchema;\n// This class represents a reusable implementation of a @directive that may\n// appear in a GraphQL schema written in Schema Definition Language.\n//\n// By overriding one or more visit{Object,Union,...} methods, a subclass\n// registers interest in certain schema types, such as GraphQLObjectType,\n// GraphQLUnionType, etc. When SchemaDirectiveVisitor.visitSchemaDirectives is\n// called with a GraphQLSchema object and a map of visitor subclasses, the\n// overidden methods of those subclasses allow the visitors to obtain\n// references to any type objects that have @directives attached to them,\n// enabling visitors to inspect or modify the schema as appropriate.\n//\n// For example, if a directive called @rest(url: \"...\") appears after a field\n// definition, a SchemaDirectiveVisitor subclass could provide meaning to that\n// directive by overriding the visitFieldDefinition method (which receives a\n// GraphQLField parameter), and then the body of that visitor method could\n// manipulate the field's resolver function to fetch data from a REST endpoint\n// described by the url argument passed to the @rest directive:\n//\n//   const typeDefs = `\n//   type Query {\n//     people: [Person] @rest(url: \"/api/v1/people\")\n//   }`;\n//\n//   const schema = makeExecutableSchema({ typeDefs });\n//\n//   SchemaDirectiveVisitor.visitSchemaDirectives(schema, {\n//     rest: class extends SchemaDirectiveVisitor {\n//       public visitFieldDefinition(field: GraphQLField<any, any>) {\n//         const { url } = this.args;\n//         field.resolve = () => fetch(url);\n//       }\n//     }\n//   });\n//\n// The subclass in this example is defined as an anonymous class expression,\n// for brevity. A truly reusable SchemaDirectiveVisitor would most likely be\n// defined in a library using a named class declaration, and then exported for\n// consumption by other modules and packages.\n//\n// See below for a complete list of overridable visitor methods, their\n// parameter types, and more details about the properties exposed by instances\n// of the SchemaDirectiveVisitor class.\nvar SchemaDirectiveVisitor = /** @class */ (function (_super) {\n    __extends(SchemaDirectiveVisitor, _super);\n    // Mark the constructor protected to enforce passing SchemaDirectiveVisitor\n    // subclasses (not instances) to visitSchemaDirectives.\n    function SchemaDirectiveVisitor(config) {\n        var _this = _super.call(this) || this;\n        _this.name = config.name;\n        _this.args = config.args;\n        _this.visitedType = config.visitedType;\n        _this.schema = config.schema;\n        _this.context = config.context;\n        return _this;\n    }\n    // Override this method to return a custom GraphQLDirective (or modify one\n    // already present in the schema) to enforce argument types, provide default\n    // argument values, or specify schema locations where this @directive may\n    // appear. By default, any declaration found in the schema will be returned.\n    SchemaDirectiveVisitor.getDirectiveDeclaration = function (directiveName, schema) {\n        return schema.getDirective(directiveName);\n    };\n    // Call SchemaDirectiveVisitor.visitSchemaDirectives to visit every\n    // @directive in the schema and create an appropriate SchemaDirectiveVisitor\n    // instance to visit the object decorated by the @directive.\n    SchemaDirectiveVisitor.visitSchemaDirectives = function (schema, directiveVisitors, \n    // Optional context object that will be available to all visitor instances\n    // via this.context. Defaults to an empty null-prototype object.\n    context) {\n        if (context === void 0) { \n        // Optional context object that will be available to all visitor instances\n        // via this.context. Defaults to an empty null-prototype object.\n        context = Object.create(null); }\n        // If the schema declares any directives for public consumption, record\n        // them here so that we can properly coerce arguments when/if we encounter\n        // an occurrence of the directive while walking the schema below.\n        var declaredDirectives = this.getDeclaredDirectives(schema, directiveVisitors);\n        // Map from directive names to lists of SchemaDirectiveVisitor instances\n        // created while visiting the schema.\n        var createdVisitors = Object.create(null);\n        Object.keys(directiveVisitors).forEach(function (directiveName) {\n            createdVisitors[directiveName] = [];\n        });\n        function visitorSelector(type, methodName) {\n            var visitors = [];\n            var directiveNodes = type.astNode && type.astNode.directives;\n            if (!directiveNodes) {\n                return visitors;\n            }\n            directiveNodes.forEach(function (directiveNode) {\n                var directiveName = directiveNode.name.value;\n                if (!hasOwn.call(directiveVisitors, directiveName)) {\n                    return;\n                }\n                var visitorClass = directiveVisitors[directiveName];\n                // Avoid creating visitor objects if visitorClass does not override\n                // the visitor method named by methodName.\n                if (!visitorClass.implementsVisitorMethod(methodName)) {\n                    return;\n                }\n                var decl = declaredDirectives[directiveName];\n                var args;\n                if (decl) {\n                    // If this directive was explicitly declared, use the declared\n                    // argument types (and any default values) to check, coerce, and/or\n                    // supply default values for the given arguments.\n                    args = values_1.getArgumentValues(decl, directiveNode);\n                }\n                else {\n                    // If this directive was not explicitly declared, just convert the\n                    // argument nodes to their corresponding JavaScript values.\n                    args = Object.create(null);\n                    directiveNode.arguments.forEach(function (arg) {\n                        args[arg.name.value] = valueFromASTUntyped(arg.value);\n                    });\n                }\n                // As foretold in comments near the top of the visitSchemaDirectives\n                // method, this is where instances of the SchemaDirectiveVisitor class\n                // get created and assigned names. While subclasses could override the\n                // constructor method, the constructor is marked as protected, so\n                // these are the only arguments that will ever be passed.\n                visitors.push(new visitorClass({\n                    name: directiveName,\n                    args: args,\n                    visitedType: type,\n                    schema: schema,\n                    context: context,\n                }));\n            });\n            if (visitors.length > 0) {\n                visitors.forEach(function (visitor) {\n                    createdVisitors[visitor.name].push(visitor);\n                });\n            }\n            return visitors;\n        }\n        visitSchema(schema, visitorSelector);\n        // Automatically update any references to named schema types replaced\n        // during the traversal, so implementors don't have to worry about that.\n        healSchema(schema);\n        return createdVisitors;\n    };\n    SchemaDirectiveVisitor.getDeclaredDirectives = function (schema, directiveVisitors) {\n        var declaredDirectives = Object.create(null);\n        each(schema.getDirectives(), function (decl) {\n            declaredDirectives[decl.name] = decl;\n        });\n        // If the visitor subclass overrides getDirectiveDeclaration, and it\n        // returns a non-null GraphQLDirective, use that instead of any directive\n        // declared in the schema itself. Reasoning: if a SchemaDirectiveVisitor\n        // goes to the trouble of implementing getDirectiveDeclaration, it should\n        // be able to rely on that implementation.\n        each(directiveVisitors, function (visitorClass, directiveName) {\n            var decl = visitorClass.getDirectiveDeclaration(directiveName, schema);\n            if (decl) {\n                declaredDirectives[directiveName] = decl;\n            }\n        });\n        each(declaredDirectives, function (decl, name) {\n            if (!hasOwn.call(directiveVisitors, name)) {\n                // SchemaDirectiveVisitors.visitSchemaDirectives might be called\n                // multiple times with partial directiveVisitors maps, so it's not\n                // necessarily an error for directiveVisitors to be missing an\n                // implementation of a directive that was declared in the schema.\n                return;\n            }\n            var visitorClass = directiveVisitors[name];\n            each(decl.locations, function (loc) {\n                var visitorMethodName = directiveLocationToVisitorMethodName(loc);\n                if (SchemaVisitor.implementsVisitorMethod(visitorMethodName) &&\n                    !visitorClass.implementsVisitorMethod(visitorMethodName)) {\n                    // While visitor subclasses may implement extra visitor methods,\n                    // it's definitely a mistake if the GraphQLDirective declares itself\n                    // applicable to certain schema locations, and the visitor subclass\n                    // does not implement all the corresponding methods.\n                    throw new Error(\"SchemaDirectiveVisitor for @\" + name + \" must implement \" + visitorMethodName + \" method\");\n                }\n            });\n        });\n        return declaredDirectives;\n    };\n    return SchemaDirectiveVisitor;\n}(SchemaVisitor));\nexports.SchemaDirectiveVisitor = SchemaDirectiveVisitor;\n// Convert a string like \"FIELD_DEFINITION\" to \"visitFieldDefinition\".\nfunction directiveLocationToVisitorMethodName(loc) {\n    return 'visit' + loc.replace(/([^_]*)_?/g, function (wholeMatch, part) {\n        return part.charAt(0).toUpperCase() + part.slice(1).toLowerCase();\n    });\n}\nfunction each(arrayOrObject, callback) {\n    Object.keys(arrayOrObject).forEach(function (key) {\n        callback(arrayOrObject[key], key);\n    });\n}\n// A more powerful version of each that has the ability to replace or remove\n// array or object keys.\nfunction updateEachKey(arrayOrObject, \n// The callback can return nothing to leave the key untouched, null to remove\n// the key from the array or object, or a non-null V to replace the value.\ncallback) {\n    var deletedCount = 0;\n    Object.keys(arrayOrObject).forEach(function (key) {\n        var result = callback(arrayOrObject[key], key);\n        if (typeof result === 'undefined') {\n            return;\n        }\n        if (result === null) {\n            delete arrayOrObject[key];\n            deletedCount++;\n            return;\n        }\n        arrayOrObject[key] = result;\n    });\n    if (deletedCount > 0 && Array.isArray(arrayOrObject)) {\n        // Remove any holes from the array due to deleted elements.\n        arrayOrObject.splice(0).forEach(function (elem) {\n            arrayOrObject.push(elem);\n        });\n    }\n}\n// Similar to the graphql-js function of the same name, slightly simplified:\n// https://github.com/graphql/graphql-js/blob/master/src/utilities/valueFromASTUntyped.js\nfunction valueFromASTUntyped(valueNode) {\n    switch (valueNode.kind) {\n        case graphql_1.Kind.NULL:\n            return null;\n        case graphql_1.Kind.INT:\n            return parseInt(valueNode.value, 10);\n        case graphql_1.Kind.FLOAT:\n            return parseFloat(valueNode.value);\n        case graphql_1.Kind.STRING:\n        case graphql_1.Kind.ENUM:\n        case graphql_1.Kind.BOOLEAN:\n            return valueNode.value;\n        case graphql_1.Kind.LIST:\n            return valueNode.values.map(valueFromASTUntyped);\n        case graphql_1.Kind.OBJECT:\n            var obj_1 = Object.create(null);\n            valueNode.fields.forEach(function (field) {\n                obj_1[field.name.value] = valueFromASTUntyped(field.value);\n            });\n            return obj_1;\n        /* istanbul ignore next */\n        default:\n            throw new Error('Unexpected value kind: ' + valueNode.kind);\n    }\n}\n//# sourceMappingURL=schemaVisitor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/schemaVisitor.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/defaultMergedResolver.js":
/*!****************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/defaultMergedResolver.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar error_1 = __webpack_require__(/*! graphql/error */ \"./node_modules/graphql/error/index.mjs\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/graphql-tools/dist/stitching/errors.js\");\nvar getResponseKeyFromInfo_1 = __webpack_require__(/*! ./getResponseKeyFromInfo */ \"./node_modules/graphql-tools/dist/stitching/getResponseKeyFromInfo.js\");\n// Resolver that knows how to:\n// a) handle aliases for proxied schemas\n// b) handle errors from proxied schemas\nvar defaultMergedResolver = function (parent, args, context, info) {\n    if (!parent) {\n        return null;\n    }\n    var responseKey = getResponseKeyFromInfo_1.getResponseKeyFromInfo(info);\n    var errorResult = errors_1.getErrorsFromParent(parent, responseKey);\n    if (errorResult.kind === 'OWN') {\n        throw error_1.locatedError(new Error(errorResult.error.message), info.fieldNodes, graphql_1.responsePathAsArray(info.path));\n    }\n    var result = parent[responseKey];\n    // subscription result mapping\n    if (!result && parent.data && parent.data[responseKey]) {\n        result = parent.data[responseKey];\n    }\n    if (errorResult.errors) {\n        result = errors_1.annotateWithChildrenErrors(result, errorResult.errors);\n    }\n    return result;\n};\nexports.default = defaultMergedResolver;\n//# sourceMappingURL=defaultMergedResolver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9kZWZhdWx0TWVyZ2VkUmVzb2x2ZXIuanM/M2VlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQyxjQUFjLG1CQUFPLENBQUMsNkRBQWU7QUFDckMsZUFBZSxtQkFBTyxDQUFDLHVFQUFVO0FBQ2pDLCtCQUErQixtQkFBTyxDQUFDLHVHQUEwQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9kZWZhdWx0TWVyZ2VkUmVzb2x2ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG52YXIgZXJyb3JfMSA9IHJlcXVpcmUoXCJncmFwaHFsL2Vycm9yXCIpO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xudmFyIGdldFJlc3BvbnNlS2V5RnJvbUluZm9fMSA9IHJlcXVpcmUoXCIuL2dldFJlc3BvbnNlS2V5RnJvbUluZm9cIik7XG4vLyBSZXNvbHZlciB0aGF0IGtub3dzIGhvdyB0bzpcbi8vIGEpIGhhbmRsZSBhbGlhc2VzIGZvciBwcm94aWVkIHNjaGVtYXNcbi8vIGIpIGhhbmRsZSBlcnJvcnMgZnJvbSBwcm94aWVkIHNjaGVtYXNcbnZhciBkZWZhdWx0TWVyZ2VkUmVzb2x2ZXIgPSBmdW5jdGlvbiAocGFyZW50LCBhcmdzLCBjb250ZXh0LCBpbmZvKSB7XG4gICAgaWYgKCFwYXJlbnQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciByZXNwb25zZUtleSA9IGdldFJlc3BvbnNlS2V5RnJvbUluZm9fMS5nZXRSZXNwb25zZUtleUZyb21JbmZvKGluZm8pO1xuICAgIHZhciBlcnJvclJlc3VsdCA9IGVycm9yc18xLmdldEVycm9yc0Zyb21QYXJlbnQocGFyZW50LCByZXNwb25zZUtleSk7XG4gICAgaWYgKGVycm9yUmVzdWx0LmtpbmQgPT09ICdPV04nKSB7XG4gICAgICAgIHRocm93IGVycm9yXzEubG9jYXRlZEVycm9yKG5ldyBFcnJvcihlcnJvclJlc3VsdC5lcnJvci5tZXNzYWdlKSwgaW5mby5maWVsZE5vZGVzLCBncmFwaHFsXzEucmVzcG9uc2VQYXRoQXNBcnJheShpbmZvLnBhdGgpKTtcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9IHBhcmVudFtyZXNwb25zZUtleV07XG4gICAgLy8gc3Vic2NyaXB0aW9uIHJlc3VsdCBtYXBwaW5nXG4gICAgaWYgKCFyZXN1bHQgJiYgcGFyZW50LmRhdGEgJiYgcGFyZW50LmRhdGFbcmVzcG9uc2VLZXldKSB7XG4gICAgICAgIHJlc3VsdCA9IHBhcmVudC5kYXRhW3Jlc3BvbnNlS2V5XTtcbiAgICB9XG4gICAgaWYgKGVycm9yUmVzdWx0LmVycm9ycykge1xuICAgICAgICByZXN1bHQgPSBlcnJvcnNfMS5hbm5vdGF0ZVdpdGhDaGlsZHJlbkVycm9ycyhyZXN1bHQsIGVycm9yUmVzdWx0LmVycm9ycyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gZGVmYXVsdE1lcmdlZFJlc29sdmVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdE1lcmdlZFJlc29sdmVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/defaultMergedResolver.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/delegateToSchema.js":
/*!***********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/delegateToSchema.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar transforms_1 = __webpack_require__(/*! ../transforms/transforms */ \"./node_modules/graphql-tools/dist/transforms/transforms.js\");\nvar AddArgumentsAsVariables_1 = __webpack_require__(/*! ../transforms/AddArgumentsAsVariables */ \"./node_modules/graphql-tools/dist/transforms/AddArgumentsAsVariables.js\");\nvar FilterToSchema_1 = __webpack_require__(/*! ../transforms/FilterToSchema */ \"./node_modules/graphql-tools/dist/transforms/FilterToSchema.js\");\nvar AddTypenameToAbstract_1 = __webpack_require__(/*! ../transforms/AddTypenameToAbstract */ \"./node_modules/graphql-tools/dist/transforms/AddTypenameToAbstract.js\");\nvar CheckResultAndHandleErrors_1 = __webpack_require__(/*! ../transforms/CheckResultAndHandleErrors */ \"./node_modules/graphql-tools/dist/transforms/CheckResultAndHandleErrors.js\");\nvar mapAsyncIterator_1 = __webpack_require__(/*! ./mapAsyncIterator */ \"./node_modules/graphql-tools/dist/stitching/mapAsyncIterator.js\");\nvar ExpandAbstractTypes_1 = __webpack_require__(/*! ../transforms/ExpandAbstractTypes */ \"./node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js\");\nvar ReplaceFieldWithFragment_1 = __webpack_require__(/*! ../transforms/ReplaceFieldWithFragment */ \"./node_modules/graphql-tools/dist/transforms/ReplaceFieldWithFragment.js\");\nfunction delegateToSchema(options) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (options instanceof graphql_1.GraphQLSchema) {\n        throw new Error('Passing positional arguments to delegateToSchema is a deprecated. ' +\n            'Please pass named parameters instead.');\n    }\n    return delegateToSchemaImplementation(options);\n}\nexports.default = delegateToSchema;\nfunction delegateToSchemaImplementation(options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var info, _a, args, operation, rawDocument, rawRequest, transforms, processedRequest, errors, _b, executionResult;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    info = options.info, _a = options.args, args = _a === void 0 ? {} : _a;\n                    operation = options.operation || info.operation.operation;\n                    rawDocument = createDocument(options.fieldName, operation, info.fieldNodes, Object.keys(info.fragments).map(function (fragmentName) { return info.fragments[fragmentName]; }), info.operation.variableDefinitions, info.operation.name);\n                    rawRequest = {\n                        document: rawDocument,\n                        variables: info.variableValues,\n                    };\n                    transforms = (options.transforms || []).concat([\n                        new ExpandAbstractTypes_1.default(info.schema, options.schema)\n                    ]);\n                    if (info.mergeInfo && info.mergeInfo.fragments) {\n                        transforms.push(new ReplaceFieldWithFragment_1.default(options.schema, info.mergeInfo.fragments));\n                    }\n                    transforms = transforms.concat([\n                        new AddArgumentsAsVariables_1.default(options.schema, args),\n                        new FilterToSchema_1.default(options.schema),\n                        new AddTypenameToAbstract_1.default(options.schema),\n                        new CheckResultAndHandleErrors_1.default(info, options.fieldName)\n                    ]);\n                    processedRequest = transforms_1.applyRequestTransforms(rawRequest, transforms);\n                    if (!options.skipValidation) {\n                        errors = graphql_1.validate(options.schema, processedRequest.document);\n                        if (errors.length > 0) {\n                            throw errors;\n                        }\n                    }\n                    if (!(operation === 'query' || operation === 'mutation')) return [3 /*break*/, 2];\n                    _b = transforms_1.applyResultTransforms;\n                    return [4 /*yield*/, graphql_1.execute(options.schema, processedRequest.document, info.rootValue, options.context, processedRequest.variables)];\n                case 1: return [2 /*return*/, _b.apply(void 0, [_c.sent(),\n                        transforms])];\n                case 2:\n                    if (!(operation === 'subscription')) return [3 /*break*/, 4];\n                    return [4 /*yield*/, graphql_1.subscribe(options.schema, processedRequest.document, info.rootValue, options.context, processedRequest.variables)];\n                case 3:\n                    executionResult = _c.sent();\n                    // \"subscribe\" to the subscription result and map the result through the transforms\n                    return [2 /*return*/, mapAsyncIterator_1.default(executionResult, function (result) {\n                            var _a;\n                            var transformedResult = transforms_1.applyResultTransforms(result, transforms);\n                            var subscriptionKey = Object.keys(result.data)[0];\n                            // for some reason the returned transformedResult needs to be nested inside the root subscription field\n                            // does not work otherwise...\n                            return _a = {},\n                                _a[subscriptionKey] = transformedResult,\n                                _a;\n                        })];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction createDocument(targetField, targetOperation, originalSelections, fragments, variables, operationName) {\n    var selections = [];\n    var args = [];\n    originalSelections.forEach(function (field) {\n        var fieldSelections = field.selectionSet\n            ? field.selectionSet.selections\n            : [];\n        selections = selections.concat(fieldSelections);\n        args = args.concat(field.arguments || []);\n    });\n    var selectionSet = null;\n    if (selections.length > 0) {\n        selectionSet = {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: selections,\n        };\n    }\n    var rootField = {\n        kind: graphql_1.Kind.FIELD,\n        alias: null,\n        arguments: args,\n        selectionSet: selectionSet,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: targetField,\n        },\n    };\n    var rootSelectionSet = {\n        kind: graphql_1.Kind.SELECTION_SET,\n        selections: [rootField],\n    };\n    var operationDefinition = {\n        kind: graphql_1.Kind.OPERATION_DEFINITION,\n        operation: targetOperation,\n        variableDefinitions: variables,\n        selectionSet: rootSelectionSet,\n        name: operationName,\n    };\n    return {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: [operationDefinition].concat(fragments),\n    };\n}\n//# sourceMappingURL=delegateToSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/delegateToSchema.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/errors.js":
/*!*************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/errors.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar error_1 = __webpack_require__(/*! graphql/error */ \"./node_modules/graphql/error/index.mjs\");\nvar getResponseKeyFromInfo_1 = __webpack_require__(/*! ./getResponseKeyFromInfo */ \"./node_modules/graphql-tools/dist/stitching/getResponseKeyFromInfo.js\");\nif ((typeof global !== 'undefined' && 'Symbol' in global) ||\n    (typeof window !== 'undefined' && 'Symbol' in window)) {\n    exports.ERROR_SYMBOL = Symbol('subSchemaErrors');\n}\nelse {\n    exports.ERROR_SYMBOL = '@@__subSchemaErrors';\n}\nfunction annotateWithChildrenErrors(object, childrenErrors) {\n    var _a;\n    if (!childrenErrors || childrenErrors.length === 0) {\n        // Nothing to see here, move along\n        return object;\n    }\n    if (Array.isArray(object)) {\n        var byIndex_1 = {};\n        childrenErrors.forEach(function (error) {\n            if (!error.path) {\n                return;\n            }\n            var index = error.path[1];\n            var current = byIndex_1[index] || [];\n            current.push(__assign({}, error, { path: error.path.slice(1) }));\n            byIndex_1[index] = current;\n        });\n        return object.map(function (item, index) { return annotateWithChildrenErrors(item, byIndex_1[index]); });\n    }\n    return __assign({}, object, (_a = {}, _a[exports.ERROR_SYMBOL] = childrenErrors.map(function (error) { return (__assign({}, error, (error.path ? { path: error.path.slice(1) } : {}))); }), _a));\n}\nexports.annotateWithChildrenErrors = annotateWithChildrenErrors;\nfunction getErrorsFromParent(object, fieldName) {\n    var errors = (object && object[exports.ERROR_SYMBOL]) || [];\n    var childrenErrors = [];\n    for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n        var error = errors_1[_i];\n        if (!error.path || (error.path.length === 1 && error.path[0] === fieldName)) {\n            return {\n                kind: 'OWN',\n                error: error\n            };\n        }\n        else if (error.path[0] === fieldName) {\n            childrenErrors.push(error);\n        }\n    }\n    return {\n        kind: 'CHILDREN',\n        errors: childrenErrors\n    };\n}\nexports.getErrorsFromParent = getErrorsFromParent;\nvar CombinedError = /** @class */ (function (_super) {\n    __extends(CombinedError, _super);\n    function CombinedError(message, errors) {\n        var _this = _super.call(this, message) || this;\n        _this.errors = errors;\n        return _this;\n    }\n    return CombinedError;\n}(Error));\nfunction checkResultAndHandleErrors(result, info, responseKey) {\n    if (!responseKey) {\n        responseKey = getResponseKeyFromInfo_1.getResponseKeyFromInfo(info);\n    }\n    if (result.errors && (!result.data || result.data[responseKey] == null)) {\n        // apollo-link-http & http-link-dataloader need the\n        // result property to be passed through for better error handling.\n        // If there is only one error, which contains a result property, pass the error through\n        var newError = result.errors.length === 1 && hasResult(result.errors[0])\n            ? result.errors[0]\n            : new CombinedError(concatErrors(result.errors), result.errors);\n        throw error_1.locatedError(newError, info.fieldNodes, graphql_1.responsePathAsArray(info.path));\n    }\n    var resultObject = result.data[responseKey];\n    if (result.errors) {\n        resultObject = annotateWithChildrenErrors(resultObject, result.errors);\n    }\n    return resultObject;\n}\nexports.checkResultAndHandleErrors = checkResultAndHandleErrors;\nfunction concatErrors(errors) {\n    return errors.map(function (error) { return error.message; }).join('\\n');\n}\nfunction hasResult(error) {\n    return error.result || error.extensions || (error.originalError && error.originalError.result);\n}\n//# sourceMappingURL=errors.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9lcnJvcnMuanM/YzA1NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQixzQ0FBc0MsaUJBQWlCLEVBQUU7QUFDdkYsNkJBQTZCLHVEQUF1RDtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsZ0RBQWdELE9BQU87QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDLGNBQWMsbUJBQU8sQ0FBQyw2REFBZTtBQUNyQywrQkFBK0IsbUJBQU8sQ0FBQyx1R0FBMEI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLFVBQVUsNEJBQTRCO0FBQzFFO0FBQ0EsU0FBUztBQUNULGtEQUFrRCwyREFBMkQsRUFBRTtBQUMvRztBQUNBLHNCQUFzQixrQkFBa0Isa0VBQWtFLG9CQUFvQix3QkFBd0IsNEJBQTRCLEtBQUssSUFBSSxFQUFFO0FBQzdMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsc0JBQXNCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxzQkFBc0IsRUFBRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC9zdGl0Y2hpbmcvZXJyb3JzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG52YXIgZXJyb3JfMSA9IHJlcXVpcmUoXCJncmFwaHFsL2Vycm9yXCIpO1xudmFyIGdldFJlc3BvbnNlS2V5RnJvbUluZm9fMSA9IHJlcXVpcmUoXCIuL2dldFJlc3BvbnNlS2V5RnJvbUluZm9cIik7XG5pZiAoKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnICYmICdTeW1ib2wnIGluIGdsb2JhbCkgfHxcbiAgICAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgJ1N5bWJvbCcgaW4gd2luZG93KSkge1xuICAgIGV4cG9ydHMuRVJST1JfU1lNQk9MID0gU3ltYm9sKCdzdWJTY2hlbWFFcnJvcnMnKTtcbn1cbmVsc2Uge1xuICAgIGV4cG9ydHMuRVJST1JfU1lNQk9MID0gJ0BAX19zdWJTY2hlbWFFcnJvcnMnO1xufVxuZnVuY3Rpb24gYW5ub3RhdGVXaXRoQ2hpbGRyZW5FcnJvcnMob2JqZWN0LCBjaGlsZHJlbkVycm9ycykge1xuICAgIHZhciBfYTtcbiAgICBpZiAoIWNoaWxkcmVuRXJyb3JzIHx8IGNoaWxkcmVuRXJyb3JzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAvLyBOb3RoaW5nIHRvIHNlZSBoZXJlLCBtb3ZlIGFsb25nXG4gICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KG9iamVjdCkpIHtcbiAgICAgICAgdmFyIGJ5SW5kZXhfMSA9IHt9O1xuICAgICAgICBjaGlsZHJlbkVycm9ycy5mb3JFYWNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKCFlcnJvci5wYXRoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGluZGV4ID0gZXJyb3IucGF0aFsxXTtcbiAgICAgICAgICAgIHZhciBjdXJyZW50ID0gYnlJbmRleF8xW2luZGV4XSB8fCBbXTtcbiAgICAgICAgICAgIGN1cnJlbnQucHVzaChfX2Fzc2lnbih7fSwgZXJyb3IsIHsgcGF0aDogZXJyb3IucGF0aC5zbGljZSgxKSB9KSk7XG4gICAgICAgICAgICBieUluZGV4XzFbaW5kZXhdID0gY3VycmVudDtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBvYmplY3QubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgeyByZXR1cm4gYW5ub3RhdGVXaXRoQ2hpbGRyZW5FcnJvcnMoaXRlbSwgYnlJbmRleF8xW2luZGV4XSk7IH0pO1xuICAgIH1cbiAgICByZXR1cm4gX19hc3NpZ24oe30sIG9iamVjdCwgKF9hID0ge30sIF9hW2V4cG9ydHMuRVJST1JfU1lNQk9MXSA9IGNoaWxkcmVuRXJyb3JzLm1hcChmdW5jdGlvbiAoZXJyb3IpIHsgcmV0dXJuIChfX2Fzc2lnbih7fSwgZXJyb3IsIChlcnJvci5wYXRoID8geyBwYXRoOiBlcnJvci5wYXRoLnNsaWNlKDEpIH0gOiB7fSkpKTsgfSksIF9hKSk7XG59XG5leHBvcnRzLmFubm90YXRlV2l0aENoaWxkcmVuRXJyb3JzID0gYW5ub3RhdGVXaXRoQ2hpbGRyZW5FcnJvcnM7XG5mdW5jdGlvbiBnZXRFcnJvcnNGcm9tUGFyZW50KG9iamVjdCwgZmllbGROYW1lKSB7XG4gICAgdmFyIGVycm9ycyA9IChvYmplY3QgJiYgb2JqZWN0W2V4cG9ydHMuRVJST1JfU1lNQk9MXSkgfHwgW107XG4gICAgdmFyIGNoaWxkcmVuRXJyb3JzID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAwLCBlcnJvcnNfMSA9IGVycm9yczsgX2kgPCBlcnJvcnNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGVycm9yID0gZXJyb3JzXzFbX2ldO1xuICAgICAgICBpZiAoIWVycm9yLnBhdGggfHwgKGVycm9yLnBhdGgubGVuZ3RoID09PSAxICYmIGVycm9yLnBhdGhbMF0gPT09IGZpZWxkTmFtZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAga2luZDogJ09XTicsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGVycm9yLnBhdGhbMF0gPT09IGZpZWxkTmFtZSkge1xuICAgICAgICAgICAgY2hpbGRyZW5FcnJvcnMucHVzaChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2luZDogJ0NISUxEUkVOJyxcbiAgICAgICAgZXJyb3JzOiBjaGlsZHJlbkVycm9yc1xuICAgIH07XG59XG5leHBvcnRzLmdldEVycm9yc0Zyb21QYXJlbnQgPSBnZXRFcnJvcnNGcm9tUGFyZW50O1xudmFyIENvbWJpbmVkRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENvbWJpbmVkRXJyb3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ29tYmluZWRFcnJvcihtZXNzYWdlLCBlcnJvcnMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbWVzc2FnZSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZXJyb3JzID0gZXJyb3JzO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBDb21iaW5lZEVycm9yO1xufShFcnJvcikpO1xuZnVuY3Rpb24gY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMocmVzdWx0LCBpbmZvLCByZXNwb25zZUtleSkge1xuICAgIGlmICghcmVzcG9uc2VLZXkpIHtcbiAgICAgICAgcmVzcG9uc2VLZXkgPSBnZXRSZXNwb25zZUtleUZyb21JbmZvXzEuZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbyhpbmZvKTtcbiAgICB9XG4gICAgaWYgKHJlc3VsdC5lcnJvcnMgJiYgKCFyZXN1bHQuZGF0YSB8fCByZXN1bHQuZGF0YVtyZXNwb25zZUtleV0gPT0gbnVsbCkpIHtcbiAgICAgICAgLy8gYXBvbGxvLWxpbmstaHR0cCAmIGh0dHAtbGluay1kYXRhbG9hZGVyIG5lZWQgdGhlXG4gICAgICAgIC8vIHJlc3VsdCBwcm9wZXJ0eSB0byBiZSBwYXNzZWQgdGhyb3VnaCBmb3IgYmV0dGVyIGVycm9yIGhhbmRsaW5nLlxuICAgICAgICAvLyBJZiB0aGVyZSBpcyBvbmx5IG9uZSBlcnJvciwgd2hpY2ggY29udGFpbnMgYSByZXN1bHQgcHJvcGVydHksIHBhc3MgdGhlIGVycm9yIHRocm91Z2hcbiAgICAgICAgdmFyIG5ld0Vycm9yID0gcmVzdWx0LmVycm9ycy5sZW5ndGggPT09IDEgJiYgaGFzUmVzdWx0KHJlc3VsdC5lcnJvcnNbMF0pXG4gICAgICAgICAgICA/IHJlc3VsdC5lcnJvcnNbMF1cbiAgICAgICAgICAgIDogbmV3IENvbWJpbmVkRXJyb3IoY29uY2F0RXJyb3JzKHJlc3VsdC5lcnJvcnMpLCByZXN1bHQuZXJyb3JzKTtcbiAgICAgICAgdGhyb3cgZXJyb3JfMS5sb2NhdGVkRXJyb3IobmV3RXJyb3IsIGluZm8uZmllbGROb2RlcywgZ3JhcGhxbF8xLnJlc3BvbnNlUGF0aEFzQXJyYXkoaW5mby5wYXRoKSk7XG4gICAgfVxuICAgIHZhciByZXN1bHRPYmplY3QgPSByZXN1bHQuZGF0YVtyZXNwb25zZUtleV07XG4gICAgaWYgKHJlc3VsdC5lcnJvcnMpIHtcbiAgICAgICAgcmVzdWx0T2JqZWN0ID0gYW5ub3RhdGVXaXRoQ2hpbGRyZW5FcnJvcnMocmVzdWx0T2JqZWN0LCByZXN1bHQuZXJyb3JzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdE9iamVjdDtcbn1cbmV4cG9ydHMuY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMgPSBjaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycztcbmZ1bmN0aW9uIGNvbmNhdEVycm9ycyhlcnJvcnMpIHtcbiAgICByZXR1cm4gZXJyb3JzLm1hcChmdW5jdGlvbiAoZXJyb3IpIHsgcmV0dXJuIGVycm9yLm1lc3NhZ2U7IH0pLmpvaW4oJ1xcbicpO1xufVxuZnVuY3Rpb24gaGFzUmVzdWx0KGVycm9yKSB7XG4gICAgcmV0dXJuIGVycm9yLnJlc3VsdCB8fCBlcnJvci5leHRlbnNpb25zIHx8IChlcnJvci5vcmlnaW5hbEVycm9yICYmIGVycm9yLm9yaWdpbmFsRXJyb3IucmVzdWx0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/errors.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/getResponseKeyFromInfo.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/getResponseKeyFromInfo.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Get the key under which the result of this resolver will be placed in the response JSON. Basically, just\n * resolves aliases.\n * @param info The info argument to the resolver.\n */\nfunction getResponseKeyFromInfo(info) {\n    return info.fieldNodes[0].alias ? info.fieldNodes[0].alias.value : info.fieldName;\n}\nexports.getResponseKeyFromInfo = getResponseKeyFromInfo;\n//# sourceMappingURL=getResponseKeyFromInfo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9nZXRSZXNwb25zZUtleUZyb21JbmZvLmpzPzYzZWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9nZXRSZXNwb25zZUtleUZyb21JbmZvLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBHZXQgdGhlIGtleSB1bmRlciB3aGljaCB0aGUgcmVzdWx0IG9mIHRoaXMgcmVzb2x2ZXIgd2lsbCBiZSBwbGFjZWQgaW4gdGhlIHJlc3BvbnNlIEpTT04uIEJhc2ljYWxseSwganVzdFxuICogcmVzb2x2ZXMgYWxpYXNlcy5cbiAqIEBwYXJhbSBpbmZvIFRoZSBpbmZvIGFyZ3VtZW50IHRvIHRoZSByZXNvbHZlci5cbiAqL1xuZnVuY3Rpb24gZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbyhpbmZvKSB7XG4gICAgcmV0dXJuIGluZm8uZmllbGROb2Rlc1swXS5hbGlhcyA/IGluZm8uZmllbGROb2Rlc1swXS5hbGlhcy52YWx1ZSA6IGluZm8uZmllbGROYW1lO1xufVxuZXhwb3J0cy5nZXRSZXNwb25zZUtleUZyb21JbmZvID0gZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFJlc3BvbnNlS2V5RnJvbUluZm8uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/getResponseKeyFromInfo.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/index.js":
/*!************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar makeRemoteExecutableSchema_1 = __webpack_require__(/*! ./makeRemoteExecutableSchema */ \"./node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js\");\nexports.makeRemoteExecutableSchema = makeRemoteExecutableSchema_1.default;\nexports.defaultCreateRemoteResolver = makeRemoteExecutableSchema_1.createResolver;\nvar introspectSchema_1 = __webpack_require__(/*! ./introspectSchema */ \"./node_modules/graphql-tools/dist/stitching/introspectSchema.js\");\nexports.introspectSchema = introspectSchema_1.default;\nvar mergeSchemas_1 = __webpack_require__(/*! ./mergeSchemas */ \"./node_modules/graphql-tools/dist/stitching/mergeSchemas.js\");\nexports.mergeSchemas = mergeSchemas_1.default;\nvar delegateToSchema_1 = __webpack_require__(/*! ./delegateToSchema */ \"./node_modules/graphql-tools/dist/stitching/delegateToSchema.js\");\nexports.delegateToSchema = delegateToSchema_1.default;\nvar defaultMergedResolver_1 = __webpack_require__(/*! ./defaultMergedResolver */ \"./node_modules/graphql-tools/dist/stitching/defaultMergedResolver.js\");\nexports.defaultMergedResolver = defaultMergedResolver_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9pbmRleC5qcz80MjRmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELG1DQUFtQyxtQkFBTyxDQUFDLCtHQUE4QjtBQUN6RTtBQUNBO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsMkZBQW9CO0FBQ3JEO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsbUZBQWdCO0FBQzdDO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsMkZBQW9CO0FBQ3JEO0FBQ0EsOEJBQThCLG1CQUFPLENBQUMscUdBQXlCO0FBQy9EO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBtYWtlUmVtb3RlRXhlY3V0YWJsZVNjaGVtYV8xID0gcmVxdWlyZShcIi4vbWFrZVJlbW90ZUV4ZWN1dGFibGVTY2hlbWFcIik7XG5leHBvcnRzLm1ha2VSZW1vdGVFeGVjdXRhYmxlU2NoZW1hID0gbWFrZVJlbW90ZUV4ZWN1dGFibGVTY2hlbWFfMS5kZWZhdWx0O1xuZXhwb3J0cy5kZWZhdWx0Q3JlYXRlUmVtb3RlUmVzb2x2ZXIgPSBtYWtlUmVtb3RlRXhlY3V0YWJsZVNjaGVtYV8xLmNyZWF0ZVJlc29sdmVyO1xudmFyIGludHJvc3BlY3RTY2hlbWFfMSA9IHJlcXVpcmUoXCIuL2ludHJvc3BlY3RTY2hlbWFcIik7XG5leHBvcnRzLmludHJvc3BlY3RTY2hlbWEgPSBpbnRyb3NwZWN0U2NoZW1hXzEuZGVmYXVsdDtcbnZhciBtZXJnZVNjaGVtYXNfMSA9IHJlcXVpcmUoXCIuL21lcmdlU2NoZW1hc1wiKTtcbmV4cG9ydHMubWVyZ2VTY2hlbWFzID0gbWVyZ2VTY2hlbWFzXzEuZGVmYXVsdDtcbnZhciBkZWxlZ2F0ZVRvU2NoZW1hXzEgPSByZXF1aXJlKFwiLi9kZWxlZ2F0ZVRvU2NoZW1hXCIpO1xuZXhwb3J0cy5kZWxlZ2F0ZVRvU2NoZW1hID0gZGVsZWdhdGVUb1NjaGVtYV8xLmRlZmF1bHQ7XG52YXIgZGVmYXVsdE1lcmdlZFJlc29sdmVyXzEgPSByZXF1aXJlKFwiLi9kZWZhdWx0TWVyZ2VkUmVzb2x2ZXJcIik7XG5leHBvcnRzLmRlZmF1bHRNZXJnZWRSZXNvbHZlciA9IGRlZmF1bHRNZXJnZWRSZXNvbHZlcl8xLmRlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/index.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/introspectSchema.js":
/*!***********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/introspectSchema.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar linkToFetcher_1 = __webpack_require__(/*! ./linkToFetcher */ \"./node_modules/graphql-tools/dist/stitching/linkToFetcher.js\");\nvar parsedIntrospectionQuery = graphql_1.parse(graphql_1.introspectionQuery);\nfunction introspectSchema(fetcher, linkContext) {\n    return __awaiter(this, void 0, void 0, function () {\n        var introspectionResult, schema;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    // Convert link to fetcher\n                    if (fetcher.request) {\n                        fetcher = linkToFetcher_1.default(fetcher);\n                    }\n                    return [4 /*yield*/, fetcher({\n                            query: parsedIntrospectionQuery,\n                            context: linkContext,\n                        })];\n                case 1:\n                    introspectionResult = _a.sent();\n                    if ((introspectionResult.errors && introspectionResult.errors.length) ||\n                        !introspectionResult.data.__schema) {\n                        throw introspectionResult.errors;\n                    }\n                    else {\n                        schema = graphql_1.buildClientSchema(introspectionResult.data);\n                        return [2 /*return*/, schema];\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.default = introspectSchema;\n//# sourceMappingURL=introspectSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9pbnRyb3NwZWN0U2NoZW1hLmpzPzBmYzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLG1DQUFtQyxNQUFNLDZCQUE2QixFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ2pHLGtDQUFrQyxNQUFNLGlDQUFpQyxFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ3BHLCtCQUErQixpRUFBaUUsdUJBQXVCLEVBQUUsNEJBQTRCO0FBQ3JKO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDZCQUE2QiwwQkFBMEIsYUFBYSxFQUFFLHFCQUFxQjtBQUN4RyxnQkFBZ0IscURBQXFELG9FQUFvRSxhQUFhLEVBQUU7QUFDeEosc0JBQXNCLHNCQUFzQixxQkFBcUIsR0FBRztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsa0NBQWtDLFNBQVM7QUFDM0Msa0NBQWtDLFdBQVcsVUFBVTtBQUN2RCx5Q0FBeUMsY0FBYztBQUN2RDtBQUNBLDZHQUE2RyxPQUFPLFVBQVU7QUFDOUgsZ0ZBQWdGLGlCQUFpQixPQUFPO0FBQ3hHLHdEQUF3RCxnQkFBZ0IsUUFBUSxPQUFPO0FBQ3ZGLDhDQUE4QyxnQkFBZ0IsZ0JBQWdCLE9BQU87QUFDckY7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLFNBQVMsWUFBWSxhQUFhLE9BQU8sRUFBRSxVQUFVLFdBQVc7QUFDaEUsbUNBQW1DLFNBQVM7QUFDNUM7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDLHNCQUFzQixtQkFBTyxDQUFDLHFGQUFpQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC9zdGl0Y2hpbmcvaW50cm9zcGVjdFNjaGVtYS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG52YXIgbGlua1RvRmV0Y2hlcl8xID0gcmVxdWlyZShcIi4vbGlua1RvRmV0Y2hlclwiKTtcbnZhciBwYXJzZWRJbnRyb3NwZWN0aW9uUXVlcnkgPSBncmFwaHFsXzEucGFyc2UoZ3JhcGhxbF8xLmludHJvc3BlY3Rpb25RdWVyeSk7XG5mdW5jdGlvbiBpbnRyb3NwZWN0U2NoZW1hKGZldGNoZXIsIGxpbmtDb250ZXh0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaW50cm9zcGVjdGlvblJlc3VsdCwgc2NoZW1hO1xuICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAvLyBDb252ZXJ0IGxpbmsgdG8gZmV0Y2hlclxuICAgICAgICAgICAgICAgICAgICBpZiAoZmV0Y2hlci5yZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZXRjaGVyID0gbGlua1RvRmV0Y2hlcl8xLmRlZmF1bHQoZmV0Y2hlcik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgZmV0Y2hlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6IHBhcnNlZEludHJvc3BlY3Rpb25RdWVyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0OiBsaW5rQ29udGV4dCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIGludHJvc3BlY3Rpb25SZXN1bHQgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoaW50cm9zcGVjdGlvblJlc3VsdC5lcnJvcnMgJiYgaW50cm9zcGVjdGlvblJlc3VsdC5lcnJvcnMubGVuZ3RoKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgIWludHJvc3BlY3Rpb25SZXN1bHQuZGF0YS5fX3NjaGVtYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgaW50cm9zcGVjdGlvblJlc3VsdC5lcnJvcnM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWEgPSBncmFwaHFsXzEuYnVpbGRDbGllbnRTY2hlbWEoaW50cm9zcGVjdGlvblJlc3VsdC5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBzY2hlbWFdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBpbnRyb3NwZWN0U2NoZW1hO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50cm9zcGVjdFNjaGVtYS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/introspectSchema.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/linkToFetcher.js":
/*!********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/linkToFetcher.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar apollo_link_1 = __webpack_require__(/*! apollo-link */ \"./node_modules/apollo-link/lib/index.js\");\nvar apollo_link_2 = __webpack_require__(/*! apollo-link */ \"./node_modules/apollo-link/lib/index.js\");\nexports.execute = apollo_link_2.execute;\nfunction linkToFetcher(link) {\n    return function (fetcherOperation) {\n        return apollo_link_1.makePromise(apollo_link_1.execute(link, fetcherOperation));\n    };\n}\nexports.default = linkToFetcher;\n//# sourceMappingURL=linkToFetcher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9saW5rVG9GZXRjaGVyLmpzPzQ4ZDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQsb0JBQW9CLG1CQUFPLENBQUMsNERBQWE7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMsNERBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3Qvc3RpdGNoaW5nL2xpbmtUb0ZldGNoZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYXBvbGxvX2xpbmtfMSA9IHJlcXVpcmUoXCJhcG9sbG8tbGlua1wiKTtcbnZhciBhcG9sbG9fbGlua18yID0gcmVxdWlyZShcImFwb2xsby1saW5rXCIpO1xuZXhwb3J0cy5leGVjdXRlID0gYXBvbGxvX2xpbmtfMi5leGVjdXRlO1xuZnVuY3Rpb24gbGlua1RvRmV0Y2hlcihsaW5rKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChmZXRjaGVyT3BlcmF0aW9uKSB7XG4gICAgICAgIHJldHVybiBhcG9sbG9fbGlua18xLm1ha2VQcm9taXNlKGFwb2xsb19saW5rXzEuZXhlY3V0ZShsaW5rLCBmZXRjaGVyT3BlcmF0aW9uKSk7XG4gICAgfTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGxpbmtUb0ZldGNoZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5rVG9GZXRjaGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/linkToFetcher.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar linkToFetcher_1 = __webpack_require__(/*! ./linkToFetcher */ \"./node_modules/graphql-tools/dist/stitching/linkToFetcher.js\");\nvar isEmptyObject_1 = __webpack_require__(/*! ../isEmptyObject */ \"./node_modules/graphql-tools/dist/isEmptyObject.js\");\nvar makeExecutableSchema_1 = __webpack_require__(/*! ../makeExecutableSchema */ \"./node_modules/graphql-tools/dist/makeExecutableSchema.js\");\nvar schemaRecreation_1 = __webpack_require__(/*! ./schemaRecreation */ \"./node_modules/graphql-tools/dist/stitching/schemaRecreation.js\");\nvar resolveFromParentTypename_1 = __webpack_require__(/*! ./resolveFromParentTypename */ \"./node_modules/graphql-tools/dist/stitching/resolveFromParentTypename.js\");\nvar defaultMergedResolver_1 = __webpack_require__(/*! ./defaultMergedResolver */ \"./node_modules/graphql-tools/dist/stitching/defaultMergedResolver.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/graphql-tools/dist/stitching/errors.js\");\nvar observableToAsyncIterable_1 = __webpack_require__(/*! ./observableToAsyncIterable */ \"./node_modules/graphql-tools/dist/stitching/observableToAsyncIterable.js\");\nfunction makeRemoteExecutableSchema(_a) {\n    var schema = _a.schema, link = _a.link, fetcher = _a.fetcher, _b = _a.createResolver, customCreateResolver = _b === void 0 ? createResolver : _b;\n    var _c;\n    if (!fetcher && link) {\n        fetcher = linkToFetcher_1.default(link);\n    }\n    var typeDefs;\n    var printOptions = { commentDescriptions: true };\n    if (typeof schema === 'string') {\n        typeDefs = schema;\n        schema = graphql_1.buildSchema(typeDefs);\n    }\n    else {\n        // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n        typeDefs = graphql_1.printSchema(schema, printOptions);\n    }\n    // prepare query resolvers\n    var queryResolvers = {};\n    var queryType = schema.getQueryType();\n    var queries = queryType.getFields();\n    Object.keys(queries).forEach(function (key) {\n        queryResolvers[key] = customCreateResolver(fetcher);\n    });\n    // prepare mutation resolvers\n    var mutationResolvers = {};\n    var mutationType = schema.getMutationType();\n    if (mutationType) {\n        var mutations = mutationType.getFields();\n        Object.keys(mutations).forEach(function (key) {\n            mutationResolvers[key] = customCreateResolver(fetcher);\n        });\n    }\n    // prepare subscription resolvers\n    var subscriptionResolvers = {};\n    var subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        var subscriptions = subscriptionType.getFields();\n        Object.keys(subscriptions).forEach(function (key) {\n            subscriptionResolvers[key] = {\n                subscribe: createSubscriptionResolver(key, link),\n            };\n        });\n    }\n    // merge resolvers into resolver map\n    var resolvers = (_c = {}, _c[queryType.name] = queryResolvers, _c);\n    if (!isEmptyObject_1.default(mutationResolvers)) {\n        resolvers[mutationType.name] = mutationResolvers;\n    }\n    if (!isEmptyObject_1.default(subscriptionResolvers)) {\n        resolvers[subscriptionType.name] = subscriptionResolvers;\n    }\n    // add missing abstract resolvers (scalar, unions, interfaces)\n    var typeMap = schema.getTypeMap();\n    var types = Object.keys(typeMap).map(function (name) { return typeMap[name]; });\n    var _loop_1 = function (type) {\n        if (type instanceof graphql_1.GraphQLInterfaceType ||\n            type instanceof graphql_1.GraphQLUnionType) {\n            resolvers[type.name] = {\n                __resolveType: function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                },\n            };\n        }\n        else if (type instanceof graphql_1.GraphQLScalarType) {\n            if (!(type === graphql_1.GraphQLID ||\n                type === graphql_1.GraphQLString ||\n                type === graphql_1.GraphQLFloat ||\n                type === graphql_1.GraphQLBoolean ||\n                type === graphql_1.GraphQLInt)) {\n                resolvers[type.name] = schemaRecreation_1.recreateType(type, function (name) { return null; }, false);\n            }\n        }\n        else if (type instanceof graphql_1.GraphQLObjectType &&\n            type.name.slice(0, 2) !== '__' &&\n            type !== queryType &&\n            type !== mutationType &&\n            type !== subscriptionType) {\n            var resolver_1 = {};\n            Object.keys(type.getFields()).forEach(function (field) {\n                resolver_1[field] = defaultMergedResolver_1.default;\n            });\n            resolvers[type.name] = resolver_1;\n        }\n    };\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        _loop_1(type);\n    }\n    return makeExecutableSchema_1.makeExecutableSchema({\n        typeDefs: typeDefs,\n        resolvers: resolvers,\n    });\n}\nexports.default = makeRemoteExecutableSchema;\nfunction createResolver(fetcher) {\n    var _this = this;\n    return function (root, args, context, info) { return __awaiter(_this, void 0, void 0, function () {\n        var fragments, document, result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n                    document = {\n                        kind: graphql_1.Kind.DOCUMENT,\n                        definitions: [info.operation].concat(fragments),\n                    };\n                    return [4 /*yield*/, fetcher({\n                            query: document,\n                            variables: info.variableValues,\n                            context: { graphqlContext: context },\n                        })];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/, errors_1.checkResultAndHandleErrors(result, info)];\n            }\n        });\n    }); };\n}\nexports.createResolver = createResolver;\nfunction createSubscriptionResolver(name, link) {\n    return function (root, args, context, info) {\n        var fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n        var document = {\n            kind: graphql_1.Kind.DOCUMENT,\n            definitions: [info.operation].concat(fragments),\n        };\n        var operation = {\n            query: document,\n            variables: info.variableValues,\n            context: { graphqlContext: context },\n        };\n        var observable = linkToFetcher_1.execute(link, operation);\n        return observableToAsyncIterable_1.observableToAsyncIterable(observable);\n    };\n}\n//# sourceMappingURL=makeRemoteExecutableSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9tYWtlUmVtb3RlRXhlY3V0YWJsZVNjaGVtYS5qcz84YTU4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxtQ0FBbUMsTUFBTSw2QkFBNkIsRUFBRSxZQUFZLFdBQVcsRUFBRTtBQUNqRyxrQ0FBa0MsTUFBTSxpQ0FBaUMsRUFBRSxZQUFZLFdBQVcsRUFBRTtBQUNwRywrQkFBK0IsaUVBQWlFLHVCQUF1QixFQUFFLDRCQUE0QjtBQUNySjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsYUFBYSw2QkFBNkIsMEJBQTBCLGFBQWEsRUFBRSxxQkFBcUI7QUFDeEcsZ0JBQWdCLHFEQUFxRCxvRUFBb0UsYUFBYSxFQUFFO0FBQ3hKLHNCQUFzQixzQkFBc0IscUJBQXFCLEdBQUc7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDLGtDQUFrQyxTQUFTO0FBQzNDLGtDQUFrQyxXQUFXLFVBQVU7QUFDdkQseUNBQXlDLGNBQWM7QUFDdkQ7QUFDQSw2R0FBNkcsT0FBTyxVQUFVO0FBQzlILGdGQUFnRixpQkFBaUIsT0FBTztBQUN4Ryx3REFBd0QsZ0JBQWdCLFFBQVEsT0FBTztBQUN2Riw4Q0FBOEMsZ0JBQWdCLGdCQUFnQixPQUFPO0FBQ3JGO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxTQUFTLFlBQVksYUFBYSxPQUFPLEVBQUUsVUFBVSxXQUFXO0FBQ2hFLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQyxzQkFBc0IsbUJBQU8sQ0FBQyxxRkFBaUI7QUFDL0Msc0JBQXNCLG1CQUFPLENBQUMsNEVBQWtCO0FBQ2hELDZCQUE2QixtQkFBTyxDQUFDLDBGQUF5QjtBQUM5RCx5QkFBeUIsbUJBQU8sQ0FBQywyRkFBb0I7QUFDckQsa0NBQWtDLG1CQUFPLENBQUMsNkdBQTZCO0FBQ3ZFLDhCQUE4QixtQkFBTyxDQUFDLHFHQUF5QjtBQUMvRCxlQUFlLG1CQUFPLENBQUMsdUVBQVU7QUFDakMsa0NBQWtDLG1CQUFPLENBQUMsNkdBQTZCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELHNCQUFzQixFQUFFO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEZBQThGLGFBQWEsRUFBRTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMscUJBQXFCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFGQUFxRixpQ0FBaUMsRUFBRTtBQUN4SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywwQkFBMEI7QUFDaEUseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUssRUFBRTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLGlDQUFpQyxFQUFFO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDBCQUEwQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9tYWtlUmVtb3RlRXhlY3V0YWJsZVNjaGVtYS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG52YXIgbGlua1RvRmV0Y2hlcl8xID0gcmVxdWlyZShcIi4vbGlua1RvRmV0Y2hlclwiKTtcbnZhciBpc0VtcHR5T2JqZWN0XzEgPSByZXF1aXJlKFwiLi4vaXNFbXB0eU9iamVjdFwiKTtcbnZhciBtYWtlRXhlY3V0YWJsZVNjaGVtYV8xID0gcmVxdWlyZShcIi4uL21ha2VFeGVjdXRhYmxlU2NoZW1hXCIpO1xudmFyIHNjaGVtYVJlY3JlYXRpb25fMSA9IHJlcXVpcmUoXCIuL3NjaGVtYVJlY3JlYXRpb25cIik7XG52YXIgcmVzb2x2ZUZyb21QYXJlbnRUeXBlbmFtZV8xID0gcmVxdWlyZShcIi4vcmVzb2x2ZUZyb21QYXJlbnRUeXBlbmFtZVwiKTtcbnZhciBkZWZhdWx0TWVyZ2VkUmVzb2x2ZXJfMSA9IHJlcXVpcmUoXCIuL2RlZmF1bHRNZXJnZWRSZXNvbHZlclwiKTtcbnZhciBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbnZhciBvYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlXzEgPSByZXF1aXJlKFwiLi9vYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlXCIpO1xuZnVuY3Rpb24gbWFrZVJlbW90ZUV4ZWN1dGFibGVTY2hlbWEoX2EpIHtcbiAgICB2YXIgc2NoZW1hID0gX2Euc2NoZW1hLCBsaW5rID0gX2EubGluaywgZmV0Y2hlciA9IF9hLmZldGNoZXIsIF9iID0gX2EuY3JlYXRlUmVzb2x2ZXIsIGN1c3RvbUNyZWF0ZVJlc29sdmVyID0gX2IgPT09IHZvaWQgMCA/IGNyZWF0ZVJlc29sdmVyIDogX2I7XG4gICAgdmFyIF9jO1xuICAgIGlmICghZmV0Y2hlciAmJiBsaW5rKSB7XG4gICAgICAgIGZldGNoZXIgPSBsaW5rVG9GZXRjaGVyXzEuZGVmYXVsdChsaW5rKTtcbiAgICB9XG4gICAgdmFyIHR5cGVEZWZzO1xuICAgIHZhciBwcmludE9wdGlvbnMgPSB7IGNvbW1lbnREZXNjcmlwdGlvbnM6IHRydWUgfTtcbiAgICBpZiAodHlwZW9mIHNjaGVtYSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdHlwZURlZnMgPSBzY2hlbWE7XG4gICAgICAgIHNjaGVtYSA9IGdyYXBocWxfMS5idWlsZFNjaGVtYSh0eXBlRGVmcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBUT0RPIGZpeCB0eXBlcyBodHRwczovL2dpdGh1Yi5jb20vYXBvbGxvZ3JhcGhxbC9ncmFwaHFsLXRvb2xzL2lzc3Vlcy81NDJcbiAgICAgICAgdHlwZURlZnMgPSBncmFwaHFsXzEucHJpbnRTY2hlbWEoc2NoZW1hLCBwcmludE9wdGlvbnMpO1xuICAgIH1cbiAgICAvLyBwcmVwYXJlIHF1ZXJ5IHJlc29sdmVyc1xuICAgIHZhciBxdWVyeVJlc29sdmVycyA9IHt9O1xuICAgIHZhciBxdWVyeVR5cGUgPSBzY2hlbWEuZ2V0UXVlcnlUeXBlKCk7XG4gICAgdmFyIHF1ZXJpZXMgPSBxdWVyeVR5cGUuZ2V0RmllbGRzKCk7XG4gICAgT2JqZWN0LmtleXMocXVlcmllcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHF1ZXJ5UmVzb2x2ZXJzW2tleV0gPSBjdXN0b21DcmVhdGVSZXNvbHZlcihmZXRjaGVyKTtcbiAgICB9KTtcbiAgICAvLyBwcmVwYXJlIG11dGF0aW9uIHJlc29sdmVyc1xuICAgIHZhciBtdXRhdGlvblJlc29sdmVycyA9IHt9O1xuICAgIHZhciBtdXRhdGlvblR5cGUgPSBzY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCk7XG4gICAgaWYgKG11dGF0aW9uVHlwZSkge1xuICAgICAgICB2YXIgbXV0YXRpb25zID0gbXV0YXRpb25UeXBlLmdldEZpZWxkcygpO1xuICAgICAgICBPYmplY3Qua2V5cyhtdXRhdGlvbnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgbXV0YXRpb25SZXNvbHZlcnNba2V5XSA9IGN1c3RvbUNyZWF0ZVJlc29sdmVyKGZldGNoZXIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gcHJlcGFyZSBzdWJzY3JpcHRpb24gcmVzb2x2ZXJzXG4gICAgdmFyIHN1YnNjcmlwdGlvblJlc29sdmVycyA9IHt9O1xuICAgIHZhciBzdWJzY3JpcHRpb25UeXBlID0gc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKTtcbiAgICBpZiAoc3Vic2NyaXB0aW9uVHlwZSkge1xuICAgICAgICB2YXIgc3Vic2NyaXB0aW9ucyA9IHN1YnNjcmlwdGlvblR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgIE9iamVjdC5rZXlzKHN1YnNjcmlwdGlvbnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uUmVzb2x2ZXJzW2tleV0gPSB7XG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlOiBjcmVhdGVTdWJzY3JpcHRpb25SZXNvbHZlcihrZXksIGxpbmspLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIG1lcmdlIHJlc29sdmVycyBpbnRvIHJlc29sdmVyIG1hcFxuICAgIHZhciByZXNvbHZlcnMgPSAoX2MgPSB7fSwgX2NbcXVlcnlUeXBlLm5hbWVdID0gcXVlcnlSZXNvbHZlcnMsIF9jKTtcbiAgICBpZiAoIWlzRW1wdHlPYmplY3RfMS5kZWZhdWx0KG11dGF0aW9uUmVzb2x2ZXJzKSkge1xuICAgICAgICByZXNvbHZlcnNbbXV0YXRpb25UeXBlLm5hbWVdID0gbXV0YXRpb25SZXNvbHZlcnM7XG4gICAgfVxuICAgIGlmICghaXNFbXB0eU9iamVjdF8xLmRlZmF1bHQoc3Vic2NyaXB0aW9uUmVzb2x2ZXJzKSkge1xuICAgICAgICByZXNvbHZlcnNbc3Vic2NyaXB0aW9uVHlwZS5uYW1lXSA9IHN1YnNjcmlwdGlvblJlc29sdmVycztcbiAgICB9XG4gICAgLy8gYWRkIG1pc3NpbmcgYWJzdHJhY3QgcmVzb2x2ZXJzIChzY2FsYXIsIHVuaW9ucywgaW50ZXJmYWNlcylcbiAgICB2YXIgdHlwZU1hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgdmFyIHR5cGVzID0gT2JqZWN0LmtleXModHlwZU1hcCkubWFwKGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiB0eXBlTWFwW25hbWVdOyB9KTtcbiAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIGlmICh0eXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxJbnRlcmZhY2VUeXBlIHx8XG4gICAgICAgICAgICB0eXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxVbmlvblR5cGUpIHtcbiAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlLm5hbWVdID0ge1xuICAgICAgICAgICAgICAgIF9fcmVzb2x2ZVR5cGU6IGZ1bmN0aW9uIChwYXJlbnQsIGNvbnRleHQsIGluZm8pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVGcm9tUGFyZW50VHlwZW5hbWVfMS5kZWZhdWx0KHBhcmVudCwgaW5mby5zY2hlbWEpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTFNjYWxhclR5cGUpIHtcbiAgICAgICAgICAgIGlmICghKHR5cGUgPT09IGdyYXBocWxfMS5HcmFwaFFMSUQgfHxcbiAgICAgICAgICAgICAgICB0eXBlID09PSBncmFwaHFsXzEuR3JhcGhRTFN0cmluZyB8fFxuICAgICAgICAgICAgICAgIHR5cGUgPT09IGdyYXBocWxfMS5HcmFwaFFMRmxvYXQgfHxcbiAgICAgICAgICAgICAgICB0eXBlID09PSBncmFwaHFsXzEuR3JhcGhRTEJvb2xlYW4gfHxcbiAgICAgICAgICAgICAgICB0eXBlID09PSBncmFwaHFsXzEuR3JhcGhRTEludCkpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZS5uYW1lXSA9IHNjaGVtYVJlY3JlYXRpb25fMS5yZWNyZWF0ZVR5cGUodHlwZSwgZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIG51bGw7IH0sIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxPYmplY3RUeXBlICYmXG4gICAgICAgICAgICB0eXBlLm5hbWUuc2xpY2UoMCwgMikgIT09ICdfXycgJiZcbiAgICAgICAgICAgIHR5cGUgIT09IHF1ZXJ5VHlwZSAmJlxuICAgICAgICAgICAgdHlwZSAhPT0gbXV0YXRpb25UeXBlICYmXG4gICAgICAgICAgICB0eXBlICE9PSBzdWJzY3JpcHRpb25UeXBlKSB7XG4gICAgICAgICAgICB2YXIgcmVzb2x2ZXJfMSA9IHt9O1xuICAgICAgICAgICAgT2JqZWN0LmtleXModHlwZS5nZXRGaWVsZHMoKSkuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlcl8xW2ZpZWxkXSA9IGRlZmF1bHRNZXJnZWRSZXNvbHZlcl8xLmRlZmF1bHQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlLm5hbWVdID0gcmVzb2x2ZXJfMTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgZm9yICh2YXIgX2kgPSAwLCB0eXBlc18xID0gdHlwZXM7IF9pIDwgdHlwZXNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIHR5cGUgPSB0eXBlc18xW19pXTtcbiAgICAgICAgX2xvb3BfMSh0eXBlKTtcbiAgICB9XG4gICAgcmV0dXJuIG1ha2VFeGVjdXRhYmxlU2NoZW1hXzEubWFrZUV4ZWN1dGFibGVTY2hlbWEoe1xuICAgICAgICB0eXBlRGVmczogdHlwZURlZnMsXG4gICAgICAgIHJlc29sdmVyczogcmVzb2x2ZXJzLFxuICAgIH0pO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gbWFrZVJlbW90ZUV4ZWN1dGFibGVTY2hlbWE7XG5mdW5jdGlvbiBjcmVhdGVSZXNvbHZlcihmZXRjaGVyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICByZXR1cm4gZnVuY3Rpb24gKHJvb3QsIGFyZ3MsIGNvbnRleHQsIGluZm8pIHsgcmV0dXJuIF9fYXdhaXRlcihfdGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGZyYWdtZW50cywgZG9jdW1lbnQsIHJlc3VsdDtcbiAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgZnJhZ21lbnRzID0gT2JqZWN0LmtleXMoaW5mby5mcmFnbWVudHMpLm1hcChmdW5jdGlvbiAoZnJhZ21lbnQpIHsgcmV0dXJuIGluZm8uZnJhZ21lbnRzW2ZyYWdtZW50XTsgfSk7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuRE9DVU1FTlQsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZpbml0aW9uczogW2luZm8ub3BlcmF0aW9uXS5jb25jYXQoZnJhZ21lbnRzKSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgZmV0Y2hlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6IGRvY3VtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogaW5mby52YXJpYWJsZVZhbHVlcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0OiB7IGdyYXBocWxDb250ZXh0OiBjb250ZXh0IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBlcnJvcnNfMS5jaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycyhyZXN1bHQsIGluZm8pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7IH07XG59XG5leHBvcnRzLmNyZWF0ZVJlc29sdmVyID0gY3JlYXRlUmVzb2x2ZXI7XG5mdW5jdGlvbiBjcmVhdGVTdWJzY3JpcHRpb25SZXNvbHZlcihuYW1lLCBsaW5rKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChyb290LCBhcmdzLCBjb250ZXh0LCBpbmZvKSB7XG4gICAgICAgIHZhciBmcmFnbWVudHMgPSBPYmplY3Qua2V5cyhpbmZvLmZyYWdtZW50cykubWFwKGZ1bmN0aW9uIChmcmFnbWVudCkgeyByZXR1cm4gaW5mby5mcmFnbWVudHNbZnJhZ21lbnRdOyB9KTtcbiAgICAgICAgdmFyIGRvY3VtZW50ID0ge1xuICAgICAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuRE9DVU1FTlQsXG4gICAgICAgICAgICBkZWZpbml0aW9uczogW2luZm8ub3BlcmF0aW9uXS5jb25jYXQoZnJhZ21lbnRzKSxcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIG9wZXJhdGlvbiA9IHtcbiAgICAgICAgICAgIHF1ZXJ5OiBkb2N1bWVudCxcbiAgICAgICAgICAgIHZhcmlhYmxlczogaW5mby52YXJpYWJsZVZhbHVlcyxcbiAgICAgICAgICAgIGNvbnRleHQ6IHsgZ3JhcGhxbENvbnRleHQ6IGNvbnRleHQgfSxcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIG9ic2VydmFibGUgPSBsaW5rVG9GZXRjaGVyXzEuZXhlY3V0ZShsaW5rLCBvcGVyYXRpb24pO1xuICAgICAgICByZXR1cm4gb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZV8xLm9ic2VydmFibGVUb0FzeW5jSXRlcmFibGUob2JzZXJ2YWJsZSk7XG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ha2VSZW1vdGVFeGVjdXRhYmxlU2NoZW1hLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/mapAsyncIterator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/mapAsyncIterator.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar iterall_1 = __webpack_require__(/*! iterall */ \"./node_modules/iterall/index.mjs\");\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, callback, rejectCallback) {\n    var _a;\n    var $return;\n    var abruptClose;\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = function (error) {\n            var rethrow = function () { return Promise.reject(error); };\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        return result.done\n            ? result\n            : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n    }\n    var mapReject;\n    if (rejectCallback) {\n        // Capture rejectCallback to ensure it cannot be null.\n        var reject_1 = rejectCallback;\n        mapReject = function (error) {\n            return asyncMapValue(error, reject_1).then(iteratorResult, abruptClose);\n        };\n    }\n    return _a = {\n            next: function () {\n                return iterator.next().then(mapResult, mapReject);\n            },\n            return: function () {\n                return $return\n                    ? $return.call(iterator).then(mapResult, mapReject)\n                    : Promise.resolve({ value: undefined, done: true });\n            },\n            throw: function (error) {\n                if (typeof iterator.throw === 'function') {\n                    return iterator.throw(error).then(mapResult, mapReject);\n                }\n                return Promise.reject(error).catch(abruptClose);\n            }\n        },\n        _a[iterall_1.$$asyncIterator] = function () {\n            return this;\n        },\n        _a;\n}\nexports.default = mapAsyncIterator;\nfunction asyncMapValue(value, callback) {\n    return new Promise(function (resolve) { return resolve(callback(value)); });\n}\nfunction iteratorResult(value) {\n    return { value: value, done: false };\n}\n//# sourceMappingURL=mapAsyncIterator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9tYXBBc3luY0l0ZXJhdG9yLmpzPzFlZDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsaURBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyw4QkFBOEI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLCtCQUErQjtBQUN0RSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsaUNBQWlDLEVBQUU7QUFDOUU7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC9zdGl0Y2hpbmcvbWFwQXN5bmNJdGVyYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBpdGVyYWxsXzEgPSByZXF1aXJlKFwiaXRlcmFsbFwiKTtcbi8qKlxuICogR2l2ZW4gYW4gQXN5bmNJdGVyYWJsZSBhbmQgYSBjYWxsYmFjayBmdW5jdGlvbiwgcmV0dXJuIGFuIEFzeW5jSXRlcmF0b3JcbiAqIHdoaWNoIHByb2R1Y2VzIHZhbHVlcyBtYXBwZWQgdmlhIGNhbGxpbmcgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBtYXBBc3luY0l0ZXJhdG9yKGl0ZXJhdG9yLCBjYWxsYmFjaywgcmVqZWN0Q2FsbGJhY2spIHtcbiAgICB2YXIgX2E7XG4gICAgdmFyICRyZXR1cm47XG4gICAgdmFyIGFicnVwdENsb3NlO1xuICAgIGlmICh0eXBlb2YgaXRlcmF0b3IucmV0dXJuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICRyZXR1cm4gPSBpdGVyYXRvci5yZXR1cm47XG4gICAgICAgIGFicnVwdENsb3NlID0gZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICB2YXIgcmV0aHJvdyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsgfTtcbiAgICAgICAgICAgIHJldHVybiAkcmV0dXJuLmNhbGwoaXRlcmF0b3IpLnRoZW4ocmV0aHJvdywgcmV0aHJvdyk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIG1hcFJlc3VsdChyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5kb25lXG4gICAgICAgICAgICA/IHJlc3VsdFxuICAgICAgICAgICAgOiBhc3luY01hcFZhbHVlKHJlc3VsdC52YWx1ZSwgY2FsbGJhY2spLnRoZW4oaXRlcmF0b3JSZXN1bHQsIGFicnVwdENsb3NlKTtcbiAgICB9XG4gICAgdmFyIG1hcFJlamVjdDtcbiAgICBpZiAocmVqZWN0Q2FsbGJhY2spIHtcbiAgICAgICAgLy8gQ2FwdHVyZSByZWplY3RDYWxsYmFjayB0byBlbnN1cmUgaXQgY2Fubm90IGJlIG51bGwuXG4gICAgICAgIHZhciByZWplY3RfMSA9IHJlamVjdENhbGxiYWNrO1xuICAgICAgICBtYXBSZWplY3QgPSBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBhc3luY01hcFZhbHVlKGVycm9yLCByZWplY3RfMSkudGhlbihpdGVyYXRvclJlc3VsdCwgYWJydXB0Q2xvc2UpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gX2EgPSB7XG4gICAgICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLm5leHQoKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZXR1cm46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJHJldHVyblxuICAgICAgICAgICAgICAgICAgICA/ICRyZXR1cm4uY2FsbChpdGVyYXRvcikudGhlbihtYXBSZXN1bHQsIG1hcFJlamVjdClcbiAgICAgICAgICAgICAgICAgICAgOiBQcm9taXNlLnJlc29sdmUoeyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRocm93OiBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGl0ZXJhdG9yLnRocm93ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVyYXRvci50aHJvdyhlcnJvcikudGhlbihtYXBSZXN1bHQsIG1hcFJlamVjdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcikuY2F0Y2goYWJydXB0Q2xvc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBfYVtpdGVyYWxsXzEuJCRhc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBfYTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IG1hcEFzeW5jSXRlcmF0b3I7XG5mdW5jdGlvbiBhc3luY01hcFZhbHVlKHZhbHVlLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXR1cm4gcmVzb2x2ZShjYWxsYmFjayh2YWx1ZSkpOyB9KTtcbn1cbmZ1bmN0aW9uIGl0ZXJhdG9yUmVzdWx0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHsgdmFsdWU6IHZhbHVlLCBkb25lOiBmYWxzZSB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFwQXN5bmNJdGVyYXRvci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/mapAsyncIterator.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/mergeSchemas.js":
/*!*******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/mergeSchemas.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar makeExecutableSchema_1 = __webpack_require__(/*! ../makeExecutableSchema */ \"./node_modules/graphql-tools/dist/makeExecutableSchema.js\");\nvar schemaRecreation_1 = __webpack_require__(/*! ./schemaRecreation */ \"./node_modules/graphql-tools/dist/stitching/schemaRecreation.js\");\nvar delegateToSchema_1 = __webpack_require__(/*! ./delegateToSchema */ \"./node_modules/graphql-tools/dist/stitching/delegateToSchema.js\");\nvar typeFromAST_1 = __webpack_require__(/*! ./typeFromAST */ \"./node_modules/graphql-tools/dist/stitching/typeFromAST.js\");\nvar transforms_1 = __webpack_require__(/*! ../transforms */ \"./node_modules/graphql-tools/dist/transforms/index.js\");\nvar mergeDeep_1 = __webpack_require__(/*! ../mergeDeep */ \"./node_modules/graphql-tools/dist/mergeDeep.js\");\nvar schemaVisitor_1 = __webpack_require__(/*! ../schemaVisitor */ \"./node_modules/graphql-tools/dist/schemaVisitor.js\");\nfunction mergeSchemas(_a) {\n    var schemas = _a.schemas, onTypeConflict = _a.onTypeConflict, resolvers = _a.resolvers, schemaDirectives = _a.schemaDirectives, inheritResolversFromInterfaces = _a.inheritResolversFromInterfaces;\n    return mergeSchemasImplementation({ schemas: schemas, resolvers: resolvers, schemaDirectives: schemaDirectives, inheritResolversFromInterfaces: inheritResolversFromInterfaces });\n}\nexports.default = mergeSchemas;\nfunction mergeSchemasImplementation(_a) {\n    var schemas = _a.schemas, resolvers = _a.resolvers, schemaDirectives = _a.schemaDirectives, inheritResolversFromInterfaces = _a.inheritResolversFromInterfaces;\n    var allSchemas = [];\n    var typeCandidates = {};\n    var types = {};\n    var extensions = [];\n    var fragments = [];\n    var resolveType = schemaRecreation_1.createResolveType(function (name) {\n        if (types[name] === undefined) {\n            throw new Error(\"Can't find type \" + name + \".\");\n        }\n        return types[name];\n    });\n    schemas.forEach(function (schema) {\n        if (schema instanceof graphql_1.GraphQLSchema) {\n            allSchemas.push(schema);\n            var queryType_1 = schema.getQueryType();\n            var mutationType_1 = schema.getMutationType();\n            var subscriptionType_1 = schema.getSubscriptionType();\n            if (queryType_1) {\n                addTypeCandidate(typeCandidates, 'Query', {\n                    schema: schema,\n                    type: queryType_1,\n                });\n            }\n            if (mutationType_1) {\n                addTypeCandidate(typeCandidates, 'Mutation', {\n                    schema: schema,\n                    type: mutationType_1,\n                });\n            }\n            if (subscriptionType_1) {\n                addTypeCandidate(typeCandidates, 'Subscription', {\n                    schema: schema,\n                    type: subscriptionType_1,\n                });\n            }\n            var typeMap_1 = schema.getTypeMap();\n            Object.keys(typeMap_1).forEach(function (typeName) {\n                var type = typeMap_1[typeName];\n                if (graphql_1.isNamedType(type) &&\n                    graphql_1.getNamedType(type).name.slice(0, 2) !== '__' &&\n                    type !== queryType_1 &&\n                    type !== mutationType_1 &&\n                    type !== subscriptionType_1) {\n                    addTypeCandidate(typeCandidates, type.name, {\n                        schema: schema,\n                        type: type,\n                    });\n                }\n            });\n        }\n        else if (typeof schema === 'string') {\n            var parsedSchemaDocument = graphql_1.parse(schema);\n            parsedSchemaDocument.definitions.forEach(function (def) {\n                var type = typeFromAST_1.default(def);\n                if (type) {\n                    addTypeCandidate(typeCandidates, type.name, {\n                        type: type,\n                    });\n                }\n            });\n            var extensionsDocument = makeExecutableSchema_1.extractExtensionDefinitions(parsedSchemaDocument);\n            if (extensionsDocument.definitions.length > 0) {\n                extensions.push(extensionsDocument);\n            }\n        }\n        else if (Array.isArray(schema)) {\n            schema.forEach(function (type) {\n                addTypeCandidate(typeCandidates, type.name, {\n                    type: type,\n                });\n            });\n        }\n        else {\n            throw new Error(\"Invalid schema passed\");\n        }\n    });\n    var mergeInfo = createMergeInfo(allSchemas, fragments);\n    if (!resolvers) {\n        resolvers = {};\n    }\n    else if (typeof resolvers === 'function') {\n        console.warn('Passing functions as resolver parameter is deprecated. Use `info.mergeInfo` instead.');\n        resolvers = resolvers(mergeInfo);\n    }\n    else if (Array.isArray(resolvers)) {\n        resolvers = resolvers.reduce(function (left, right) {\n            if (typeof right === 'function') {\n                console.warn('Passing functions as resolver parameter is deprecated. Use `info.mergeInfo` instead.');\n                right = right(mergeInfo);\n            }\n            return mergeDeep_1.default(left, right);\n        }, {});\n    }\n    var generatedResolvers = {};\n    Object.keys(typeCandidates).forEach(function (typeName) {\n        var resultType = defaultVisitType(typeName, typeCandidates[typeName]);\n        if (resultType === null) {\n            types[typeName] = null;\n        }\n        else {\n            var type = void 0;\n            var typeResolvers = void 0;\n            if (graphql_1.isNamedType(resultType)) {\n                type = resultType;\n            }\n            else if (resultType.type) {\n                type = resultType.type;\n                typeResolvers = resultType.resolvers;\n            }\n            else {\n                throw new Error(\"Invalid visitType result for type \" + typeName);\n            }\n            types[typeName] = schemaRecreation_1.recreateType(type, resolveType, false);\n            if (typeResolvers) {\n                generatedResolvers[typeName] = typeResolvers;\n            }\n        }\n    });\n    var mergedSchema = new graphql_1.GraphQLSchema({\n        query: types.Query,\n        mutation: types.Mutation,\n        subscription: types.Subscription,\n        types: Object.keys(types).map(function (key) { return types[key]; }),\n    });\n    extensions.forEach(function (extension) {\n        mergedSchema = graphql_1.extendSchema(mergedSchema, extension, {\n            commentDescriptions: true,\n        });\n    });\n    if (!resolvers) {\n        resolvers = {};\n    }\n    else if (Array.isArray(resolvers)) {\n        resolvers = resolvers.reduce(mergeDeep_1.default, {});\n    }\n    Object.keys(resolvers).forEach(function (typeName) {\n        var type = resolvers[typeName];\n        if (type instanceof graphql_1.GraphQLScalarType) {\n            return;\n        }\n        Object.keys(type).forEach(function (fieldName) {\n            var field = type[fieldName];\n            if (field.fragment) {\n                fragments.push({\n                    field: fieldName,\n                    fragment: field.fragment,\n                });\n            }\n        });\n    });\n    mergedSchema = makeExecutableSchema_1.addResolveFunctionsToSchema({\n        schema: mergedSchema,\n        resolvers: mergeDeep_1.default(generatedResolvers, resolvers),\n        inheritResolversFromInterfaces: inheritResolversFromInterfaces\n    });\n    forEachField(mergedSchema, function (field) {\n        if (field.resolve) {\n            var fieldResolver_1 = field.resolve;\n            field.resolve = function (parent, args, context, info) {\n                var newInfo = __assign({}, info, { mergeInfo: mergeInfo });\n                return fieldResolver_1(parent, args, context, newInfo);\n            };\n        }\n        if (field.subscribe) {\n            var fieldResolver_2 = field.subscribe;\n            field.subscribe = function (parent, args, context, info) {\n                var newInfo = __assign({}, info, { mergeInfo: mergeInfo });\n                return fieldResolver_2(parent, args, context, newInfo);\n            };\n        }\n    });\n    if (schemaDirectives) {\n        schemaVisitor_1.SchemaDirectiveVisitor.visitSchemaDirectives(mergedSchema, schemaDirectives);\n    }\n    return mergedSchema;\n}\nfunction createMergeInfo(allSchemas, fragments) {\n    return {\n        delegate: function (operation, fieldName, args, context, info, transforms) {\n            console.warn('`mergeInfo.delegate` is deprecated. ' +\n                'Use `mergeInfo.delegateToSchema and pass explicit schema instances.');\n            var schema = guessSchemaByRootField(allSchemas, operation, fieldName);\n            var expandTransforms = new transforms_1.ExpandAbstractTypes(info.schema, schema);\n            var fragmentTransform = new transforms_1.ReplaceFieldWithFragment(schema, fragments);\n            return delegateToSchema_1.default({\n                schema: schema,\n                operation: operation,\n                fieldName: fieldName,\n                args: args,\n                context: context,\n                info: info,\n                transforms: (transforms || []).concat([\n                    expandTransforms,\n                    fragmentTransform,\n                ]),\n            });\n        },\n        delegateToSchema: function (options) {\n            return delegateToSchema_1.default(__assign({}, options, { transforms: options.transforms }));\n        },\n        fragments: fragments\n    };\n}\nfunction guessSchemaByRootField(schemas, operation, fieldName) {\n    for (var _i = 0, schemas_1 = schemas; _i < schemas_1.length; _i++) {\n        var schema = schemas_1[_i];\n        var rootObject = void 0;\n        if (operation === 'subscription') {\n            rootObject = schema.getSubscriptionType();\n        }\n        else if (operation === 'mutation') {\n            rootObject = schema.getMutationType();\n        }\n        else {\n            rootObject = schema.getQueryType();\n        }\n        if (rootObject) {\n            var fields = rootObject.getFields();\n            if (fields[fieldName]) {\n                return schema;\n            }\n        }\n    }\n    throw new Error(\"Could not find subschema with field `\" + operation + \".\" + fieldName + \"`\");\n}\nfunction createDelegatingResolver(schema, operation, fieldName) {\n    return function (root, args, context, info) {\n        return info.mergeInfo.delegateToSchema({\n            schema: schema,\n            operation: operation,\n            fieldName: fieldName,\n            args: args,\n            context: context,\n            info: info,\n        });\n    };\n}\nfunction forEachField(schema, fn) {\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        if (!graphql_1.getNamedType(type).name.startsWith('__') &&\n            type instanceof graphql_1.GraphQLObjectType) {\n            var fields_1 = type.getFields();\n            Object.keys(fields_1).forEach(function (fieldName) {\n                var field = fields_1[fieldName];\n                fn(field, typeName, fieldName);\n            });\n        }\n    });\n}\nfunction addTypeCandidate(typeCandidates, name, typeCandidate) {\n    if (!typeCandidates[name]) {\n        typeCandidates[name] = [];\n    }\n    typeCandidates[name].push(typeCandidate);\n}\nfunction defaultVisitType(name, candidates, candidateSelector) {\n    if (!candidateSelector) {\n        candidateSelector = function (cands) { return cands[cands.length - 1]; };\n    }\n    var resolveType = schemaRecreation_1.createResolveType(function (_, type) { return type; });\n    if (name === 'Query' || name === 'Mutation' || name === 'Subscription') {\n        var fields_2 = {};\n        var operationName_1;\n        switch (name) {\n            case 'Query':\n                operationName_1 = 'query';\n                break;\n            case 'Mutation':\n                operationName_1 = 'mutation';\n                break;\n            case 'Subscription':\n                operationName_1 = 'subscription';\n                break;\n            default:\n                break;\n        }\n        var resolvers_1 = {};\n        var resolverKey_1 = operationName_1 === 'subscription' ? 'subscribe' : 'resolve';\n        candidates.forEach(function (_a) {\n            var candidateType = _a.type, schema = _a.schema;\n            var candidateFields = candidateType.getFields();\n            fields_2 = __assign({}, fields_2, candidateFields);\n            Object.keys(candidateFields).forEach(function (fieldName) {\n                var _a;\n                resolvers_1[fieldName] = (_a = {},\n                    _a[resolverKey_1] = createDelegatingResolver(schema, operationName_1, fieldName),\n                    _a);\n            });\n        });\n        var type = new graphql_1.GraphQLObjectType({\n            name: name,\n            fields: schemaRecreation_1.fieldMapToFieldConfigMap(fields_2, resolveType, false),\n        });\n        return {\n            type: type,\n            resolvers: resolvers_1,\n        };\n    }\n    else {\n        var candidate = candidateSelector(candidates);\n        return candidate.type;\n    }\n}\n//# sourceMappingURL=mergeSchemas.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/mergeSchemas.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/observableToAsyncIterable.js":
/*!********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/observableToAsyncIterable.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterall_1 = __webpack_require__(/*! iterall */ \"./node_modules/iterall/index.mjs\");\nfunction observableToAsyncIterable(observable) {\n    var _a;\n    var pullQueue = [];\n    var pushQueue = [];\n    var listening = true;\n    var pushValue = function (_a) {\n        var data = _a.data;\n        if (pullQueue.length !== 0) {\n            pullQueue.shift()({ value: data, done: false });\n        }\n        else {\n            pushQueue.push({ value: data });\n        }\n    };\n    var pushError = function (error) {\n        if (pullQueue.length !== 0) {\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] } });\n        }\n    };\n    var pullValue = function () {\n        return new Promise(function (resolve) {\n            if (pushQueue.length !== 0) {\n                var element = pushQueue.shift();\n                // either {value: {errors: [...]}} or {value: ...}\n                resolve(__assign({}, element, { done: false }));\n            }\n            else {\n                pullQueue.push(resolve);\n            }\n        });\n    };\n    var subscription = observable.subscribe({\n        next: function (value) {\n            pushValue(value);\n        },\n        error: function (err) {\n            pushError(err);\n        },\n    });\n    var emptyQueue = function () {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            pullQueue.forEach(function (resolve) { return resolve({ value: undefined, done: true }); });\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return _a = {\n            next: function () {\n                return __awaiter(this, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        return [2 /*return*/, listening ? pullValue() : this.return()];\n                    });\n                });\n            },\n            return: function () {\n                emptyQueue();\n                return Promise.resolve({ value: undefined, done: true });\n            },\n            throw: function (error) {\n                emptyQueue();\n                return Promise.reject(error);\n            }\n        },\n        _a[iterall_1.$$asyncIterator] = function () {\n            return this;\n        },\n        _a;\n}\nexports.observableToAsyncIterable = observableToAsyncIterable;\n//# sourceMappingURL=observableToAsyncIterable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/observableToAsyncIterable.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/resolveFromParentTypename.js":
/*!********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/resolveFromParentTypename.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nfunction resolveFromParentTypename(parent, schema) {\n    var parentTypename = parent['__typename'];\n    if (!parentTypename) {\n        throw new Error('Did not fetch typename for object, unable to resolve interface.');\n    }\n    var resolvedType = schema.getType(parentTypename);\n    if (!(resolvedType instanceof graphql_1.GraphQLObjectType)) {\n        throw new Error('__typename did not match an object type: ' + parentTypename);\n    }\n    return resolvedType;\n}\nexports.default = resolveFromParentTypename;\n//# sourceMappingURL=resolveFromParentTypename.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9yZXNvbHZlRnJvbVBhcmVudFR5cGVuYW1lLmpzP2NjZGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsaURBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9yZXNvbHZlRnJvbVBhcmVudFR5cGVuYW1lLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xuZnVuY3Rpb24gcmVzb2x2ZUZyb21QYXJlbnRUeXBlbmFtZShwYXJlbnQsIHNjaGVtYSkge1xuICAgIHZhciBwYXJlbnRUeXBlbmFtZSA9IHBhcmVudFsnX190eXBlbmFtZSddO1xuICAgIGlmICghcGFyZW50VHlwZW5hbWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEaWQgbm90IGZldGNoIHR5cGVuYW1lIGZvciBvYmplY3QsIHVuYWJsZSB0byByZXNvbHZlIGludGVyZmFjZS4nKTtcbiAgICB9XG4gICAgdmFyIHJlc29sdmVkVHlwZSA9IHNjaGVtYS5nZXRUeXBlKHBhcmVudFR5cGVuYW1lKTtcbiAgICBpZiAoIShyZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTE9iamVjdFR5cGUpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignX190eXBlbmFtZSBkaWQgbm90IG1hdGNoIGFuIG9iamVjdCB0eXBlOiAnICsgcGFyZW50VHlwZW5hbWUpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzb2x2ZWRUeXBlO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gcmVzb2x2ZUZyb21QYXJlbnRUeXBlbmFtZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc29sdmVGcm9tUGFyZW50VHlwZW5hbWUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/resolveFromParentTypename.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/resolvers.js":
/*!****************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/resolvers.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar delegateToSchema_1 = __webpack_require__(/*! ./delegateToSchema */ \"./node_modules/graphql-tools/dist/stitching/delegateToSchema.js\");\nfunction generateProxyingResolvers(targetSchema, transforms, mapping) {\n    var result = {};\n    Object.keys(mapping).forEach(function (name) {\n        result[name] = {};\n        var innerMapping = mapping[name];\n        Object.keys(innerMapping).forEach(function (from) {\n            var _a;\n            var to = innerMapping[from];\n            var resolverType = to.operation === 'subscription' ? 'subscribe' : 'resolve';\n            result[name][from] = (_a = {},\n                _a[resolverType] = createProxyingResolver(targetSchema, to.operation, to.name, transforms),\n                _a);\n        });\n    });\n    return result;\n}\nexports.generateProxyingResolvers = generateProxyingResolvers;\nfunction generateSimpleMapping(targetSchema) {\n    var query = targetSchema.getQueryType();\n    var mutation = targetSchema.getMutationType();\n    var subscription = targetSchema.getSubscriptionType();\n    var result = {};\n    if (query) {\n        result[query.name] = generateMappingFromObjectType(query, 'query');\n    }\n    if (mutation) {\n        result[mutation.name] = generateMappingFromObjectType(mutation, 'mutation');\n    }\n    if (subscription) {\n        result[subscription.name] = generateMappingFromObjectType(subscription, 'subscription');\n    }\n    return result;\n}\nexports.generateSimpleMapping = generateSimpleMapping;\nfunction generateMappingFromObjectType(type, operation) {\n    var result = {};\n    var fields = type.getFields();\n    Object.keys(fields).forEach(function (fieldName) {\n        result[fieldName] = {\n            name: fieldName,\n            operation: operation,\n        };\n    });\n    return result;\n}\nexports.generateMappingFromObjectType = generateMappingFromObjectType;\nfunction createProxyingResolver(schema, operation, fieldName, transforms) {\n    return function (parent, args, context, info) { return delegateToSchema_1.default({\n        schema: schema,\n        operation: operation,\n        fieldName: fieldName,\n        args: {},\n        context: context,\n        info: info,\n        transforms: transforms,\n    }); };\n}\n//# sourceMappingURL=resolvers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3N0aXRjaGluZy9yZXNvbHZlcnMuanM/Yzc3NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCx5QkFBeUIsbUJBQU8sQ0FBQywyRkFBb0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxLQUFLLEVBQUU7QUFDUDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC9zdGl0Y2hpbmcvcmVzb2x2ZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGRlbGVnYXRlVG9TY2hlbWFfMSA9IHJlcXVpcmUoXCIuL2RlbGVnYXRlVG9TY2hlbWFcIik7XG5mdW5jdGlvbiBnZW5lcmF0ZVByb3h5aW5nUmVzb2x2ZXJzKHRhcmdldFNjaGVtYSwgdHJhbnNmb3JtcywgbWFwcGluZykge1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhtYXBwaW5nKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHJlc3VsdFtuYW1lXSA9IHt9O1xuICAgICAgICB2YXIgaW5uZXJNYXBwaW5nID0gbWFwcGluZ1tuYW1lXTtcbiAgICAgICAgT2JqZWN0LmtleXMoaW5uZXJNYXBwaW5nKS5mb3JFYWNoKGZ1bmN0aW9uIChmcm9tKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICB2YXIgdG8gPSBpbm5lck1hcHBpbmdbZnJvbV07XG4gICAgICAgICAgICB2YXIgcmVzb2x2ZXJUeXBlID0gdG8ub3BlcmF0aW9uID09PSAnc3Vic2NyaXB0aW9uJyA/ICdzdWJzY3JpYmUnIDogJ3Jlc29sdmUnO1xuICAgICAgICAgICAgcmVzdWx0W25hbWVdW2Zyb21dID0gKF9hID0ge30sXG4gICAgICAgICAgICAgICAgX2FbcmVzb2x2ZXJUeXBlXSA9IGNyZWF0ZVByb3h5aW5nUmVzb2x2ZXIodGFyZ2V0U2NoZW1hLCB0by5vcGVyYXRpb24sIHRvLm5hbWUsIHRyYW5zZm9ybXMpLFxuICAgICAgICAgICAgICAgIF9hKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuZ2VuZXJhdGVQcm94eWluZ1Jlc29sdmVycyA9IGdlbmVyYXRlUHJveHlpbmdSZXNvbHZlcnM7XG5mdW5jdGlvbiBnZW5lcmF0ZVNpbXBsZU1hcHBpbmcodGFyZ2V0U2NoZW1hKSB7XG4gICAgdmFyIHF1ZXJ5ID0gdGFyZ2V0U2NoZW1hLmdldFF1ZXJ5VHlwZSgpO1xuICAgIHZhciBtdXRhdGlvbiA9IHRhcmdldFNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKTtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGFyZ2V0U2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKTtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKHF1ZXJ5KSB7XG4gICAgICAgIHJlc3VsdFtxdWVyeS5uYW1lXSA9IGdlbmVyYXRlTWFwcGluZ0Zyb21PYmplY3RUeXBlKHF1ZXJ5LCAncXVlcnknKTtcbiAgICB9XG4gICAgaWYgKG11dGF0aW9uKSB7XG4gICAgICAgIHJlc3VsdFttdXRhdGlvbi5uYW1lXSA9IGdlbmVyYXRlTWFwcGluZ0Zyb21PYmplY3RUeXBlKG11dGF0aW9uLCAnbXV0YXRpb24nKTtcbiAgICB9XG4gICAgaWYgKHN1YnNjcmlwdGlvbikge1xuICAgICAgICByZXN1bHRbc3Vic2NyaXB0aW9uLm5hbWVdID0gZ2VuZXJhdGVNYXBwaW5nRnJvbU9iamVjdFR5cGUoc3Vic2NyaXB0aW9uLCAnc3Vic2NyaXB0aW9uJyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmdlbmVyYXRlU2ltcGxlTWFwcGluZyA9IGdlbmVyYXRlU2ltcGxlTWFwcGluZztcbmZ1bmN0aW9uIGdlbmVyYXRlTWFwcGluZ0Zyb21PYmplY3RUeXBlKHR5cGUsIG9wZXJhdGlvbikge1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICB2YXIgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICBPYmplY3Qua2V5cyhmaWVsZHMpLmZvckVhY2goZnVuY3Rpb24gKGZpZWxkTmFtZSkge1xuICAgICAgICByZXN1bHRbZmllbGROYW1lXSA9IHtcbiAgICAgICAgICAgIG5hbWU6IGZpZWxkTmFtZSxcbiAgICAgICAgICAgIG9wZXJhdGlvbjogb3BlcmF0aW9uLFxuICAgICAgICB9O1xuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmdlbmVyYXRlTWFwcGluZ0Zyb21PYmplY3RUeXBlID0gZ2VuZXJhdGVNYXBwaW5nRnJvbU9iamVjdFR5cGU7XG5mdW5jdGlvbiBjcmVhdGVQcm94eWluZ1Jlc29sdmVyKHNjaGVtYSwgb3BlcmF0aW9uLCBmaWVsZE5hbWUsIHRyYW5zZm9ybXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHBhcmVudCwgYXJncywgY29udGV4dCwgaW5mbykgeyByZXR1cm4gZGVsZWdhdGVUb1NjaGVtYV8xLmRlZmF1bHQoe1xuICAgICAgICBzY2hlbWE6IHNjaGVtYSxcbiAgICAgICAgb3BlcmF0aW9uOiBvcGVyYXRpb24sXG4gICAgICAgIGZpZWxkTmFtZTogZmllbGROYW1lLFxuICAgICAgICBhcmdzOiB7fSxcbiAgICAgICAgY29udGV4dDogY29udGV4dCxcbiAgICAgICAgaW5mbzogaW5mbyxcbiAgICAgICAgdHJhbnNmb3JtczogdHJhbnNmb3JtcyxcbiAgICB9KTsgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc29sdmVycy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/resolvers.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/schemaRecreation.js":
/*!***********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/schemaRecreation.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar isSpecifiedScalarType_1 = __webpack_require__(/*! ../isSpecifiedScalarType */ \"./node_modules/graphql-tools/dist/isSpecifiedScalarType.js\");\nvar resolveFromParentTypename_1 = __webpack_require__(/*! ./resolveFromParentTypename */ \"./node_modules/graphql-tools/dist/stitching/resolveFromParentTypename.js\");\nvar defaultMergedResolver_1 = __webpack_require__(/*! ./defaultMergedResolver */ \"./node_modules/graphql-tools/dist/stitching/defaultMergedResolver.js\");\nfunction recreateType(type, resolveType, keepResolvers) {\n    if (type instanceof graphql_1.GraphQLObjectType) {\n        var fields_1 = type.getFields();\n        var interfaces_1 = type.getInterfaces();\n        return new graphql_1.GraphQLObjectType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            isTypeOf: keepResolvers ? type.isTypeOf : undefined,\n            fields: function () {\n                return fieldMapToFieldConfigMap(fields_1, resolveType, keepResolvers);\n            },\n            interfaces: function () { return interfaces_1.map(function (iface) { return resolveType(iface); }); },\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLInterfaceType) {\n        var fields_2 = type.getFields();\n        return new graphql_1.GraphQLInterfaceType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            fields: function () {\n                return fieldMapToFieldConfigMap(fields_2, resolveType, keepResolvers);\n            },\n            resolveType: keepResolvers\n                ? type.resolveType\n                : function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                },\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLUnionType) {\n        return new graphql_1.GraphQLUnionType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            types: function () { return type.getTypes().map(function (unionMember) { return resolveType(unionMember); }); },\n            resolveType: keepResolvers\n                ? type.resolveType\n                : function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                },\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLInputObjectType) {\n        return new graphql_1.GraphQLInputObjectType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            fields: function () {\n                return inputFieldMapToFieldConfigMap(type.getFields(), resolveType);\n            },\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLEnumType) {\n        var values = type.getValues();\n        var newValues_1 = {};\n        values.forEach(function (value) {\n            newValues_1[value.name] = {\n                value: value.value,\n                deprecationReason: value.deprecationReason,\n                description: value.description,\n                astNode: value.astNode,\n            };\n        });\n        return new graphql_1.GraphQLEnumType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            values: newValues_1,\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLScalarType) {\n        if (isSpecifiedScalarType_1.default(type)) {\n            return type;\n        }\n        else {\n            return new graphql_1.GraphQLScalarType({\n                name: type.name,\n                description: type.description,\n                astNode: type.astNode,\n                serialize: function (value) {\n                    return value;\n                },\n                parseValue: function (value) {\n                    return value;\n                },\n                parseLiteral: function (ast) {\n                    return parseLiteral(ast);\n                },\n            });\n        }\n    }\n    else {\n        throw new Error(\"Invalid type \" + type);\n    }\n}\nexports.recreateType = recreateType;\nfunction parseLiteral(ast) {\n    switch (ast.kind) {\n        case graphql_1.Kind.STRING:\n        case graphql_1.Kind.BOOLEAN: {\n            return ast.value;\n        }\n        case graphql_1.Kind.INT:\n        case graphql_1.Kind.FLOAT: {\n            return parseFloat(ast.value);\n        }\n        case graphql_1.Kind.OBJECT: {\n            var value_1 = Object.create(null);\n            ast.fields.forEach(function (field) {\n                value_1[field.name.value] = parseLiteral(field.value);\n            });\n            return value_1;\n        }\n        case graphql_1.Kind.LIST: {\n            return ast.values.map(parseLiteral);\n        }\n        default:\n            return null;\n    }\n}\nfunction fieldMapToFieldConfigMap(fields, resolveType, keepResolvers) {\n    var result = {};\n    Object.keys(fields).forEach(function (name) {\n        var field = fields[name];\n        var type = resolveType(field.type);\n        if (type !== null) {\n            result[name] = fieldToFieldConfig(fields[name], resolveType, keepResolvers);\n        }\n    });\n    return result;\n}\nexports.fieldMapToFieldConfigMap = fieldMapToFieldConfigMap;\nfunction createResolveType(getType) {\n    var resolveType = function (type) {\n        if (type instanceof graphql_1.GraphQLList) {\n            var innerType = resolveType(type.ofType);\n            if (innerType === null) {\n                return null;\n            }\n            else {\n                return new graphql_1.GraphQLList(innerType);\n            }\n        }\n        else if (type instanceof graphql_1.GraphQLNonNull) {\n            var innerType = resolveType(type.ofType);\n            if (innerType === null) {\n                return null;\n            }\n            else {\n                return new graphql_1.GraphQLNonNull(innerType);\n            }\n        }\n        else if (graphql_1.isNamedType(type)) {\n            return getType(graphql_1.getNamedType(type).name, type);\n        }\n        else {\n            return type;\n        }\n    };\n    return resolveType;\n}\nexports.createResolveType = createResolveType;\nfunction fieldToFieldConfig(field, resolveType, keepResolvers) {\n    return {\n        type: resolveType(field.type),\n        args: argsToFieldConfigArgumentMap(field.args, resolveType),\n        resolve: keepResolvers ? field.resolve : defaultMergedResolver_1.default,\n        subscribe: keepResolvers ? field.subscribe : null,\n        description: field.description,\n        deprecationReason: field.deprecationReason,\n        astNode: field.astNode,\n    };\n}\nexports.fieldToFieldConfig = fieldToFieldConfig;\nfunction argsToFieldConfigArgumentMap(args, resolveType) {\n    var result = {};\n    args.forEach(function (arg) {\n        var newArg = argumentToArgumentConfig(arg, resolveType);\n        if (newArg) {\n            result[newArg[0]] = newArg[1];\n        }\n    });\n    return result;\n}\nexports.argsToFieldConfigArgumentMap = argsToFieldConfigArgumentMap;\nfunction argumentToArgumentConfig(argument, resolveType) {\n    var type = resolveType(argument.type);\n    if (type === null) {\n        return null;\n    }\n    else {\n        return [\n            argument.name,\n            {\n                type: type,\n                defaultValue: argument.defaultValue,\n                description: argument.description,\n            },\n        ];\n    }\n}\nexports.argumentToArgumentConfig = argumentToArgumentConfig;\nfunction inputFieldMapToFieldConfigMap(fields, resolveType) {\n    var result = {};\n    Object.keys(fields).forEach(function (name) {\n        var field = fields[name];\n        var type = resolveType(field.type);\n        if (type !== null) {\n            result[name] = inputFieldToFieldConfig(fields[name], resolveType);\n        }\n    });\n    return result;\n}\nexports.inputFieldMapToFieldConfigMap = inputFieldMapToFieldConfigMap;\nfunction inputFieldToFieldConfig(field, resolveType) {\n    return {\n        type: resolveType(field.type),\n        defaultValue: field.defaultValue,\n        description: field.description,\n        astNode: field.astNode,\n    };\n}\nexports.inputFieldToFieldConfig = inputFieldToFieldConfig;\n//# sourceMappingURL=schemaRecreation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/schemaRecreation.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/stitching/typeFromAST.js":
/*!******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/stitching/typeFromAST.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar resolveFromParentTypename_1 = __webpack_require__(/*! ./resolveFromParentTypename */ \"./node_modules/graphql-tools/dist/stitching/resolveFromParentTypename.js\");\nvar backcompatOptions = { commentDescriptions: true };\nfunction typeFromAST(node) {\n    switch (node.kind) {\n        case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n            return makeObjectType(node);\n        case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n            return makeInterfaceType(node);\n        case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n            return makeEnumType(node);\n        case graphql_1.Kind.UNION_TYPE_DEFINITION:\n            return makeUnionType(node);\n        case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n            return makeScalarType(node);\n        case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            return makeInputObjectType(node);\n        default:\n            return null;\n    }\n}\nexports.default = typeFromAST;\nfunction makeObjectType(node) {\n    return new graphql_1.GraphQLObjectType({\n        name: node.name.value,\n        fields: function () { return makeFields(node.fields); },\n        interfaces: function () {\n            return node.interfaces.map(function (iface) { return createNamedStub(iface.name.value, 'interface'); });\n        },\n        description: graphql_1.getDescription(node, backcompatOptions),\n    });\n}\nfunction makeInterfaceType(node) {\n    return new graphql_1.GraphQLInterfaceType({\n        name: node.name.value,\n        fields: function () { return makeFields(node.fields); },\n        description: graphql_1.getDescription(node, backcompatOptions),\n        resolveType: function (parent, context, info) {\n            return resolveFromParentTypename_1.default(parent, info.schema);\n        },\n    });\n}\nfunction makeEnumType(node) {\n    var values = {};\n    node.values.forEach(function (value) {\n        values[value.name.value] = {\n            description: graphql_1.getDescription(value, backcompatOptions),\n        };\n    });\n    return new graphql_1.GraphQLEnumType({\n        name: node.name.value,\n        values: values,\n        description: graphql_1.getDescription(node, backcompatOptions),\n    });\n}\nfunction makeUnionType(node) {\n    return new graphql_1.GraphQLUnionType({\n        name: node.name.value,\n        types: function () {\n            return node.types.map(function (type) { return resolveType(type, 'object'); });\n        },\n        description: graphql_1.getDescription(node, backcompatOptions),\n        resolveType: function (parent, context, info) {\n            return resolveFromParentTypename_1.default(parent, info.schema);\n        },\n    });\n}\nfunction makeScalarType(node) {\n    return new graphql_1.GraphQLScalarType({\n        name: node.name.value,\n        description: graphql_1.getDescription(node, backcompatOptions),\n        serialize: function () { return null; },\n        // Note: validation calls the parse functions to determine if a\n        // literal value is correct. Returning null would cause use of custom\n        // scalars to always fail validation. Returning false causes them to\n        // always pass validation.\n        parseValue: function () { return false; },\n        parseLiteral: function () { return false; },\n    });\n}\nfunction makeInputObjectType(node) {\n    return new graphql_1.GraphQLInputObjectType({\n        name: node.name.value,\n        fields: function () { return makeValues(node.fields); },\n        description: graphql_1.getDescription(node, backcompatOptions),\n    });\n}\nfunction makeFields(nodes) {\n    var result = {};\n    nodes.forEach(function (node) {\n        result[node.name.value] = {\n            type: resolveType(node.type, 'object'),\n            args: makeValues(node.arguments),\n            description: graphql_1.getDescription(node, backcompatOptions),\n        };\n    });\n    return result;\n}\nfunction makeValues(nodes) {\n    var result = {};\n    nodes.forEach(function (node) {\n        var type = resolveType(node.type, 'input');\n        result[node.name.value] = {\n            type: type,\n            defaultValue: graphql_1.valueFromAST(node.defaultValue, type),\n            description: graphql_1.getDescription(node, backcompatOptions),\n        };\n    });\n    return result;\n}\nfunction resolveType(node, type) {\n    switch (node.kind) {\n        case graphql_1.Kind.LIST_TYPE:\n            return new graphql_1.GraphQLList(resolveType(node.type, type));\n        case graphql_1.Kind.NON_NULL_TYPE:\n            return new graphql_1.GraphQLNonNull(resolveType(node.type, type));\n        default:\n            return createNamedStub(node.name.value, type);\n    }\n}\nfunction createNamedStub(name, type) {\n    var constructor;\n    if (type === 'object') {\n        constructor = graphql_1.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql_1.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql_1.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name: name,\n        fields: {\n            __fake: {\n                type: graphql_1.GraphQLString,\n            },\n        },\n    });\n}\n//# sourceMappingURL=typeFromAST.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/stitching/typeFromAST.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/AddArgumentsAsVariables.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/AddArgumentsAsVariables.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar AddArgumentsAsVariablesTransform = /** @class */ (function () {\n    function AddArgumentsAsVariablesTransform(schema, args) {\n        this.schema = schema;\n        this.args = args;\n    }\n    AddArgumentsAsVariablesTransform.prototype.transformRequest = function (originalRequest) {\n        var _a = addVariablesToRootField(this.schema, originalRequest.document, this.args), document = _a.document, newVariables = _a.newVariables;\n        var variables = __assign({}, originalRequest.variables, newVariables);\n        return {\n            document: document,\n            variables: variables,\n        };\n    };\n    return AddArgumentsAsVariablesTransform;\n}());\nexports.default = AddArgumentsAsVariablesTransform;\nfunction addVariablesToRootField(targetSchema, document, args) {\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var variableNames = {};\n    var newOperations = operations.map(function (operation) {\n        var existingVariables = operation.variableDefinitions.map(function (variableDefinition) {\n            return variableDefinition.variable.name.value;\n        });\n        var variableCounter = 0;\n        var variables = {};\n        var generateVariableName = function (argName) {\n            var varName;\n            do {\n                varName = \"_v\" + variableCounter + \"_\" + argName;\n                variableCounter++;\n            } while (existingVariables.indexOf(varName) !== -1);\n            return varName;\n        };\n        var type;\n        if (operation.operation === 'subscription') {\n            type = targetSchema.getSubscriptionType();\n        }\n        else if (operation.operation === 'mutation') {\n            type = targetSchema.getMutationType();\n        }\n        else {\n            type = targetSchema.getQueryType();\n        }\n        var newSelectionSet = [];\n        operation.selectionSet.selections.forEach(function (selection) {\n            if (selection.kind === graphql_1.Kind.FIELD) {\n                var newArgs_1 = {};\n                selection.arguments.forEach(function (argument) {\n                    newArgs_1[argument.name.value] = argument;\n                });\n                var name_1 = selection.name.value;\n                var field = type.getFields()[name_1];\n                field.args.forEach(function (argument) {\n                    if (argument.name in args) {\n                        var variableName = generateVariableName(argument.name);\n                        variableNames[argument.name] = variableName;\n                        newArgs_1[argument.name] = {\n                            kind: graphql_1.Kind.ARGUMENT,\n                            name: {\n                                kind: graphql_1.Kind.NAME,\n                                value: argument.name,\n                            },\n                            value: {\n                                kind: graphql_1.Kind.VARIABLE,\n                                name: {\n                                    kind: graphql_1.Kind.NAME,\n                                    value: variableName,\n                                },\n                            },\n                        };\n                        existingVariables.push(variableName);\n                        variables[variableName] = {\n                            kind: graphql_1.Kind.VARIABLE_DEFINITION,\n                            variable: {\n                                kind: graphql_1.Kind.VARIABLE,\n                                name: {\n                                    kind: graphql_1.Kind.NAME,\n                                    value: variableName,\n                                },\n                            },\n                            type: typeToAst(argument.type),\n                        };\n                    }\n                });\n                newSelectionSet.push(__assign({}, selection, { arguments: Object.keys(newArgs_1).map(function (argName) { return newArgs_1[argName]; }) }));\n            }\n            else {\n                newSelectionSet.push(selection);\n            }\n        });\n        return __assign({}, operation, { variableDefinitions: operation.variableDefinitions.concat(Object.keys(variables).map(function (varName) { return variables[varName]; })), selectionSet: {\n                kind: graphql_1.Kind.SELECTION_SET,\n                selections: newSelectionSet,\n            } });\n    });\n    var newVariables = {};\n    Object.keys(variableNames).forEach(function (name) {\n        newVariables[variableNames[name]] = args[name];\n    });\n    return {\n        document: __assign({}, document, { definitions: newOperations.concat(fragments) }),\n        newVariables: newVariables,\n    };\n}\nfunction typeToAst(type) {\n    if (type instanceof graphql_1.GraphQLNonNull) {\n        var innerType = typeToAst(type.ofType);\n        if (innerType.kind === graphql_1.Kind.LIST_TYPE ||\n            innerType.kind === graphql_1.Kind.NAMED_TYPE) {\n            return {\n                kind: graphql_1.Kind.NON_NULL_TYPE,\n                type: innerType,\n            };\n        }\n        else {\n            throw new Error('Incorrent inner non-null type');\n        }\n    }\n    else if (type instanceof graphql_1.GraphQLList) {\n        return {\n            kind: graphql_1.Kind.LIST_TYPE,\n            type: typeToAst(type.ofType),\n        };\n    }\n    else {\n        return {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type.toString(),\n            },\n        };\n    }\n}\n//# sourceMappingURL=AddArgumentsAsVariables.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/AddArgumentsAsVariables.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/AddTypenameToAbstract.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/AddTypenameToAbstract.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar AddTypenameToAbstract = /** @class */ (function () {\n    function AddTypenameToAbstract(targetSchema) {\n        this.targetSchema = targetSchema;\n    }\n    AddTypenameToAbstract.prototype.transformRequest = function (originalRequest) {\n        var document = addTypenameToAbstract(this.targetSchema, originalRequest.document);\n        return __assign({}, originalRequest, { document: document });\n    };\n    return AddTypenameToAbstract;\n}());\nexports.default = AddTypenameToAbstract;\nfunction addTypenameToAbstract(targetSchema, document) {\n    var _a;\n    var typeInfo = new graphql_1.TypeInfo(targetSchema);\n    return graphql_1.visit(document, graphql_1.visitWithTypeInfo(typeInfo, (_a = {},\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            var selections = node.selections;\n            if (parentType &&\n                (parentType instanceof graphql_1.GraphQLInterfaceType ||\n                    parentType instanceof graphql_1.GraphQLUnionType) &&\n                !selections.find(function (_) {\n                    return _.kind === graphql_1.Kind.FIELD &&\n                        _.name.value === '__typename';\n                })) {\n                selections = selections.concat({\n                    kind: graphql_1.Kind.FIELD,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n            }\n            if (selections !== node.selections) {\n                return __assign({}, node, { selections: selections });\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=AddTypenameToAbstract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvQWRkVHlwZW5hbWVUb0Fic3RyYWN0LmpzPzExYWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLGdEQUFnRCxPQUFPO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0JBQW9CLHFCQUFxQjtBQUNuRTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUZBQW1GO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0Esa0NBQWtDLFNBQVMseUJBQXlCO0FBQ3BFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvdHJhbnNmb3Jtcy9BZGRUeXBlbmFtZVRvQWJzdHJhY3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xudmFyIEFkZFR5cGVuYW1lVG9BYnN0cmFjdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBZGRUeXBlbmFtZVRvQWJzdHJhY3QodGFyZ2V0U2NoZW1hKSB7XG4gICAgICAgIHRoaXMudGFyZ2V0U2NoZW1hID0gdGFyZ2V0U2NoZW1hO1xuICAgIH1cbiAgICBBZGRUeXBlbmFtZVRvQWJzdHJhY3QucHJvdG90eXBlLnRyYW5zZm9ybVJlcXVlc3QgPSBmdW5jdGlvbiAob3JpZ2luYWxSZXF1ZXN0KSB7XG4gICAgICAgIHZhciBkb2N1bWVudCA9IGFkZFR5cGVuYW1lVG9BYnN0cmFjdCh0aGlzLnRhcmdldFNjaGVtYSwgb3JpZ2luYWxSZXF1ZXN0LmRvY3VtZW50KTtcbiAgICAgICAgcmV0dXJuIF9fYXNzaWduKHt9LCBvcmlnaW5hbFJlcXVlc3QsIHsgZG9jdW1lbnQ6IGRvY3VtZW50IH0pO1xuICAgIH07XG4gICAgcmV0dXJuIEFkZFR5cGVuYW1lVG9BYnN0cmFjdDtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBBZGRUeXBlbmFtZVRvQWJzdHJhY3Q7XG5mdW5jdGlvbiBhZGRUeXBlbmFtZVRvQWJzdHJhY3QodGFyZ2V0U2NoZW1hLCBkb2N1bWVudCkge1xuICAgIHZhciBfYTtcbiAgICB2YXIgdHlwZUluZm8gPSBuZXcgZ3JhcGhxbF8xLlR5cGVJbmZvKHRhcmdldFNjaGVtYSk7XG4gICAgcmV0dXJuIGdyYXBocWxfMS52aXNpdChkb2N1bWVudCwgZ3JhcGhxbF8xLnZpc2l0V2l0aFR5cGVJbmZvKHR5cGVJbmZvLCAoX2EgPSB7fSxcbiAgICAgICAgX2FbZ3JhcGhxbF8xLktpbmQuU0VMRUNUSU9OX1NFVF0gPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgdmFyIHBhcmVudFR5cGUgPSB0eXBlSW5mby5nZXRQYXJlbnRUeXBlKCk7XG4gICAgICAgICAgICB2YXIgc2VsZWN0aW9ucyA9IG5vZGUuc2VsZWN0aW9ucztcbiAgICAgICAgICAgIGlmIChwYXJlbnRUeXBlICYmXG4gICAgICAgICAgICAgICAgKHBhcmVudFR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTEludGVyZmFjZVR5cGUgfHxcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50VHlwZSBpbnN0YW5jZW9mIGdyYXBocWxfMS5HcmFwaFFMVW5pb25UeXBlKSAmJlxuICAgICAgICAgICAgICAgICFzZWxlY3Rpb25zLmZpbmQoZnVuY3Rpb24gKF8pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF8ua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuRklFTEQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIF8ubmFtZS52YWx1ZSA9PT0gJ19fdHlwZW5hbWUnO1xuICAgICAgICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgICAgICAgc2VsZWN0aW9ucyA9IHNlbGVjdGlvbnMuY29uY2F0KHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuRklFTEQsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLk5BTUUsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ19fdHlwZW5hbWUnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGVjdGlvbnMgIT09IG5vZGUuc2VsZWN0aW9ucykge1xuICAgICAgICAgICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgbm9kZSwgeyBzZWxlY3Rpb25zOiBzZWxlY3Rpb25zIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBfYSkpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFkZFR5cGVuYW1lVG9BYnN0cmFjdC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/AddTypenameToAbstract.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/CheckResultAndHandleErrors.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/CheckResultAndHandleErrors.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = __webpack_require__(/*! ../stitching/errors */ \"./node_modules/graphql-tools/dist/stitching/errors.js\");\nvar CheckResultAndHandleErrors = /** @class */ (function () {\n    function CheckResultAndHandleErrors(info, fieldName) {\n        this.info = info;\n        this.fieldName = fieldName;\n    }\n    CheckResultAndHandleErrors.prototype.transformResult = function (result) {\n        return errors_1.checkResultAndHandleErrors(result, this.info, this.fieldName);\n    };\n    return CheckResultAndHandleErrors;\n}());\nexports.default = CheckResultAndHandleErrors;\n//# sourceMappingURL=CheckResultAndHandleErrors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvQ2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMuanM/YTY2MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCxlQUFlLG1CQUFPLENBQUMsa0ZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC90cmFuc2Zvcm1zL0NoZWNrUmVzdWx0QW5kSGFuZGxlRXJyb3JzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4uL3N0aXRjaGluZy9lcnJvcnNcIik7XG52YXIgQ2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMoaW5mbywgZmllbGROYW1lKSB7XG4gICAgICAgIHRoaXMuaW5mbyA9IGluZm87XG4gICAgICAgIHRoaXMuZmllbGROYW1lID0gZmllbGROYW1lO1xuICAgIH1cbiAgICBDaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycy5wcm90b3R5cGUudHJhbnNmb3JtUmVzdWx0ID0gZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gZXJyb3JzXzEuY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMocmVzdWx0LCB0aGlzLmluZm8sIHRoaXMuZmllbGROYW1lKTtcbiAgICB9O1xuICAgIHJldHVybiBDaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycztcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBDaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNoZWNrUmVzdWx0QW5kSGFuZGxlRXJyb3JzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/CheckResultAndHandleErrors.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/ConvertEnumValues.js":
/*!*************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/ConvertEnumValues.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar visitSchema_1 = __webpack_require__(/*! ../transforms/visitSchema */ \"./node_modules/graphql-tools/dist/transforms/visitSchema.js\");\n// Transformation used to modifiy `GraphQLEnumType` values in a schema.\nvar ConvertEnumValues = /** @class */ (function () {\n    function ConvertEnumValues(enumValueMap) {\n        this.enumValueMap = enumValueMap;\n    }\n    // Walk a schema looking for `GraphQLEnumType` types. If found, and\n    // matching types have been identified in `this.enumValueMap`, create new\n    // `GraphQLEnumType` types using the `this.enumValueMap` specified new\n    // values, and return them in the new schema.\n    ConvertEnumValues.prototype.transformSchema = function (schema) {\n        var _a;\n        var enumValueMap = this.enumValueMap;\n        if (!enumValueMap || Object.keys(enumValueMap).length === 0) {\n            return schema;\n        }\n        var transformedSchema = visitSchema_1.visitSchema(schema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.ENUM_TYPE] = function (enumType) {\n                var externalToInternalValueMap = enumValueMap[enumType.name];\n                if (externalToInternalValueMap) {\n                    var values = enumType.getValues();\n                    var newValues_1 = {};\n                    values.forEach(function (value) {\n                        var newValue = Object.keys(externalToInternalValueMap).includes(value.name)\n                            ? externalToInternalValueMap[value.name]\n                            : value.name;\n                        newValues_1[value.name] = {\n                            value: newValue,\n                            deprecationReason: value.deprecationReason,\n                            description: value.description,\n                            astNode: value.astNode,\n                        };\n                    });\n                    return new graphql_1.GraphQLEnumType({\n                        name: enumType.name,\n                        description: enumType.description,\n                        astNode: enumType.astNode,\n                        values: newValues_1,\n                    });\n                }\n                return enumType;\n            },\n            _a));\n        // `GraphQLEnumType`'s in `graphql-js` 14.x currently use an internal\n        // `_valueLookup` map to associate enum values with the enums\n        // themselves, when doing an enum lookup. To support `graphql-tools`\n        // internal enum values functionality however, we have to change the\n        // enum value used as the key in the `_valueLookup` map, to be the new\n        // internal only enum value. The code above accomplishes this by\n        // creating a new `GraphQLEnumType` with the internal enum value as the\n        // enum value. Unfortunately, doing this breaks the way scheam delegation\n        // works in `graphql-tools`, since delegation can no longer look an enum\n        // up by its original external facing value. To accommodate this,\n        // here we're switching the enums value back to its original external\n        // facing value. So `_valueLookup` stays as we want it - with the new\n        // enum value as the key in the lookup map, but the defined enum values\n        // array is now back to the way it was, with only external facing values.\n        var schemaTypeMap = transformedSchema.getTypeMap();\n        Object.keys(enumValueMap).forEach(function (enumTypeName) {\n            var enumType = schemaTypeMap[enumTypeName];\n            if (enumType) {\n                enumType.getValues().forEach(function (value) {\n                    value.value = value.name;\n                });\n            }\n        });\n        return transformedSchema;\n    };\n    return ConvertEnumValues;\n}());\nexports.default = ConvertEnumValues;\n//# sourceMappingURL=ConvertEnumValues.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvQ29udmVydEVudW1WYWx1ZXMuanM/ZDg5YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyw4RkFBMkI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC90cmFuc2Zvcm1zL0NvbnZlcnRFbnVtVmFsdWVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xudmFyIHZpc2l0U2NoZW1hXzEgPSByZXF1aXJlKFwiLi4vdHJhbnNmb3Jtcy92aXNpdFNjaGVtYVwiKTtcbi8vIFRyYW5zZm9ybWF0aW9uIHVzZWQgdG8gbW9kaWZpeSBgR3JhcGhRTEVudW1UeXBlYCB2YWx1ZXMgaW4gYSBzY2hlbWEuXG52YXIgQ29udmVydEVudW1WYWx1ZXMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29udmVydEVudW1WYWx1ZXMoZW51bVZhbHVlTWFwKSB7XG4gICAgICAgIHRoaXMuZW51bVZhbHVlTWFwID0gZW51bVZhbHVlTWFwO1xuICAgIH1cbiAgICAvLyBXYWxrIGEgc2NoZW1hIGxvb2tpbmcgZm9yIGBHcmFwaFFMRW51bVR5cGVgIHR5cGVzLiBJZiBmb3VuZCwgYW5kXG4gICAgLy8gbWF0Y2hpbmcgdHlwZXMgaGF2ZSBiZWVuIGlkZW50aWZpZWQgaW4gYHRoaXMuZW51bVZhbHVlTWFwYCwgY3JlYXRlIG5ld1xuICAgIC8vIGBHcmFwaFFMRW51bVR5cGVgIHR5cGVzIHVzaW5nIHRoZSBgdGhpcy5lbnVtVmFsdWVNYXBgIHNwZWNpZmllZCBuZXdcbiAgICAvLyB2YWx1ZXMsIGFuZCByZXR1cm4gdGhlbSBpbiB0aGUgbmV3IHNjaGVtYS5cbiAgICBDb252ZXJ0RW51bVZhbHVlcy5wcm90b3R5cGUudHJhbnNmb3JtU2NoZW1hID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciBlbnVtVmFsdWVNYXAgPSB0aGlzLmVudW1WYWx1ZU1hcDtcbiAgICAgICAgaWYgKCFlbnVtVmFsdWVNYXAgfHwgT2JqZWN0LmtleXMoZW51bVZhbHVlTWFwKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBzY2hlbWE7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHRyYW5zZm9ybWVkU2NoZW1hID0gdmlzaXRTY2hlbWFfMS52aXNpdFNjaGVtYShzY2hlbWEsIChfYSA9IHt9LFxuICAgICAgICAgICAgX2FbdmlzaXRTY2hlbWFfMS5WaXNpdFNjaGVtYUtpbmQuRU5VTV9UWVBFXSA9IGZ1bmN0aW9uIChlbnVtVHlwZSkge1xuICAgICAgICAgICAgICAgIHZhciBleHRlcm5hbFRvSW50ZXJuYWxWYWx1ZU1hcCA9IGVudW1WYWx1ZU1hcFtlbnVtVHlwZS5uYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAoZXh0ZXJuYWxUb0ludGVybmFsVmFsdWVNYXApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlcyA9IGVudW1UeXBlLmdldFZhbHVlcygpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3VmFsdWVzXzEgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3VmFsdWUgPSBPYmplY3Qua2V5cyhleHRlcm5hbFRvSW50ZXJuYWxWYWx1ZU1hcCkuaW5jbHVkZXModmFsdWUubmFtZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGV4dGVybmFsVG9JbnRlcm5hbFZhbHVlTWFwW3ZhbHVlLm5hbWVdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZS5uYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3VmFsdWVzXzFbdmFsdWUubmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG5ld1ZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlcHJlY2F0aW9uUmVhc29uOiB2YWx1ZS5kZXByZWNhdGlvblJlYXNvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdmFsdWUuZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXN0Tm9kZTogdmFsdWUuYXN0Tm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IGdyYXBocWxfMS5HcmFwaFFMRW51bVR5cGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZW51bVR5cGUubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBlbnVtVHlwZS5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzdE5vZGU6IGVudW1UeXBlLmFzdE5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXM6IG5ld1ZhbHVlc18xLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVudW1UeXBlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hKSk7XG4gICAgICAgIC8vIGBHcmFwaFFMRW51bVR5cGVgJ3MgaW4gYGdyYXBocWwtanNgIDE0LnggY3VycmVudGx5IHVzZSBhbiBpbnRlcm5hbFxuICAgICAgICAvLyBgX3ZhbHVlTG9va3VwYCBtYXAgdG8gYXNzb2NpYXRlIGVudW0gdmFsdWVzIHdpdGggdGhlIGVudW1zXG4gICAgICAgIC8vIHRoZW1zZWx2ZXMsIHdoZW4gZG9pbmcgYW4gZW51bSBsb29rdXAuIFRvIHN1cHBvcnQgYGdyYXBocWwtdG9vbHNgXG4gICAgICAgIC8vIGludGVybmFsIGVudW0gdmFsdWVzIGZ1bmN0aW9uYWxpdHkgaG93ZXZlciwgd2UgaGF2ZSB0byBjaGFuZ2UgdGhlXG4gICAgICAgIC8vIGVudW0gdmFsdWUgdXNlZCBhcyB0aGUga2V5IGluIHRoZSBgX3ZhbHVlTG9va3VwYCBtYXAsIHRvIGJlIHRoZSBuZXdcbiAgICAgICAgLy8gaW50ZXJuYWwgb25seSBlbnVtIHZhbHVlLiBUaGUgY29kZSBhYm92ZSBhY2NvbXBsaXNoZXMgdGhpcyBieVxuICAgICAgICAvLyBjcmVhdGluZyBhIG5ldyBgR3JhcGhRTEVudW1UeXBlYCB3aXRoIHRoZSBpbnRlcm5hbCBlbnVtIHZhbHVlIGFzIHRoZVxuICAgICAgICAvLyBlbnVtIHZhbHVlLiBVbmZvcnR1bmF0ZWx5LCBkb2luZyB0aGlzIGJyZWFrcyB0aGUgd2F5IHNjaGVhbSBkZWxlZ2F0aW9uXG4gICAgICAgIC8vIHdvcmtzIGluIGBncmFwaHFsLXRvb2xzYCwgc2luY2UgZGVsZWdhdGlvbiBjYW4gbm8gbG9uZ2VyIGxvb2sgYW4gZW51bVxuICAgICAgICAvLyB1cCBieSBpdHMgb3JpZ2luYWwgZXh0ZXJuYWwgZmFjaW5nIHZhbHVlLiBUbyBhY2NvbW1vZGF0ZSB0aGlzLFxuICAgICAgICAvLyBoZXJlIHdlJ3JlIHN3aXRjaGluZyB0aGUgZW51bXMgdmFsdWUgYmFjayB0byBpdHMgb3JpZ2luYWwgZXh0ZXJuYWxcbiAgICAgICAgLy8gZmFjaW5nIHZhbHVlLiBTbyBgX3ZhbHVlTG9va3VwYCBzdGF5cyBhcyB3ZSB3YW50IGl0IC0gd2l0aCB0aGUgbmV3XG4gICAgICAgIC8vIGVudW0gdmFsdWUgYXMgdGhlIGtleSBpbiB0aGUgbG9va3VwIG1hcCwgYnV0IHRoZSBkZWZpbmVkIGVudW0gdmFsdWVzXG4gICAgICAgIC8vIGFycmF5IGlzIG5vdyBiYWNrIHRvIHRoZSB3YXkgaXQgd2FzLCB3aXRoIG9ubHkgZXh0ZXJuYWwgZmFjaW5nIHZhbHVlcy5cbiAgICAgICAgdmFyIHNjaGVtYVR5cGVNYXAgPSB0cmFuc2Zvcm1lZFNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgICAgIE9iamVjdC5rZXlzKGVudW1WYWx1ZU1hcCkuZm9yRWFjaChmdW5jdGlvbiAoZW51bVR5cGVOYW1lKSB7XG4gICAgICAgICAgICB2YXIgZW51bVR5cGUgPSBzY2hlbWFUeXBlTWFwW2VudW1UeXBlTmFtZV07XG4gICAgICAgICAgICBpZiAoZW51bVR5cGUpIHtcbiAgICAgICAgICAgICAgICBlbnVtVHlwZS5nZXRWYWx1ZXMoKS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZS52YWx1ZSA9IHZhbHVlLm5hbWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdHJhbnNmb3JtZWRTY2hlbWE7XG4gICAgfTtcbiAgICByZXR1cm4gQ29udmVydEVudW1WYWx1ZXM7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gQ29udmVydEVudW1WYWx1ZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db252ZXJ0RW51bVZhbHVlcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/ConvertEnumValues.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js":
/*!***************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar implementsAbstractType_1 = __webpack_require__(/*! ../implementsAbstractType */ \"./node_modules/graphql-tools/dist/implementsAbstractType.js\");\nvar ExpandAbstractTypes = /** @class */ (function () {\n    function ExpandAbstractTypes(transformedSchema, targetSchema) {\n        this.targetSchema = targetSchema;\n        this.mapping = extractPossibleTypes(transformedSchema, targetSchema);\n        this.reverseMapping = flipMapping(this.mapping);\n    }\n    ExpandAbstractTypes.prototype.transformRequest = function (originalRequest) {\n        var document = expandAbstractTypes(this.targetSchema, this.mapping, this.reverseMapping, originalRequest.document);\n        return __assign({}, originalRequest, { document: document });\n    };\n    return ExpandAbstractTypes;\n}());\nexports.default = ExpandAbstractTypes;\nfunction extractPossibleTypes(transformedSchema, targetSchema) {\n    var typeMap = transformedSchema.getTypeMap();\n    var mapping = {};\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        if (graphql_1.isAbstractType(type)) {\n            var targetType = targetSchema.getType(typeName);\n            if (!graphql_1.isAbstractType(targetType)) {\n                var implementations = transformedSchema.getPossibleTypes(type) || [];\n                mapping[typeName] = implementations\n                    .filter(function (impl) { return targetSchema.getType(impl.name); })\n                    .map(function (impl) { return impl.name; });\n            }\n        }\n    });\n    return mapping;\n}\nfunction flipMapping(mapping) {\n    var result = {};\n    Object.keys(mapping).forEach(function (typeName) {\n        var toTypeNames = mapping[typeName];\n        toTypeNames.forEach(function (toTypeName) {\n            if (!result[toTypeName]) {\n                result[toTypeName] = [];\n            }\n            result[toTypeName].push(typeName);\n        });\n    });\n    return result;\n}\nfunction expandAbstractTypes(targetSchema, mapping, reverseMapping, document) {\n    var _a;\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var existingFragmentNames = fragments.map(function (fragment) { return fragment.name.value; });\n    var fragmentCounter = 0;\n    var generateFragmentName = function (typeName) {\n        var fragmentName;\n        do {\n            fragmentName = \"_\" + typeName + \"_Fragment\" + fragmentCounter;\n            fragmentCounter++;\n        } while (existingFragmentNames.indexOf(fragmentName) !== -1);\n        return fragmentName;\n    };\n    var newFragments = [];\n    var fragmentReplacements = {};\n    fragments.forEach(function (fragment) {\n        newFragments.push(fragment);\n        var possibleTypes = mapping[fragment.typeCondition.name.value];\n        if (possibleTypes) {\n            fragmentReplacements[fragment.name.value] = [];\n            possibleTypes.forEach(function (possibleTypeName) {\n                var name = generateFragmentName(possibleTypeName);\n                existingFragmentNames.push(name);\n                var newFragment = {\n                    kind: graphql_1.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: possibleTypeName,\n                        },\n                    },\n                    selectionSet: fragment.selectionSet,\n                };\n                newFragments.push(newFragment);\n                fragmentReplacements[fragment.name.value].push({\n                    fragmentName: name,\n                    typeName: possibleTypeName,\n                });\n            });\n        }\n    });\n    var newDocument = __assign({}, document, { definitions: operations.concat(newFragments) });\n    var typeInfo = new graphql_1.TypeInfo(targetSchema);\n    return graphql_1.visit(newDocument, graphql_1.visitWithTypeInfo(typeInfo, (_a = {},\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var newSelections = node.selections.slice();\n            var parentType = graphql_1.getNamedType(typeInfo.getParentType());\n            node.selections.forEach(function (selection) {\n                if (selection.kind === graphql_1.Kind.INLINE_FRAGMENT) {\n                    var possibleTypes = mapping[selection.typeCondition.name.value];\n                    if (possibleTypes) {\n                        possibleTypes.forEach(function (possibleType) {\n                            if (implementsAbstractType_1.default(targetSchema, parentType, targetSchema.getType(possibleType))) {\n                                newSelections.push({\n                                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                                    typeCondition: {\n                                        kind: graphql_1.Kind.NAMED_TYPE,\n                                        name: {\n                                            kind: graphql_1.Kind.NAME,\n                                            value: possibleType,\n                                        },\n                                    },\n                                    selectionSet: selection.selectionSet,\n                                });\n                            }\n                        });\n                    }\n                }\n                else if (selection.kind === graphql_1.Kind.FRAGMENT_SPREAD) {\n                    var fragmentName = selection.name.value;\n                    var replacements = fragmentReplacements[fragmentName];\n                    if (replacements) {\n                        replacements.forEach(function (replacement) {\n                            var typeName = replacement.typeName;\n                            if (implementsAbstractType_1.default(targetSchema, parentType, targetSchema.getType(typeName))) {\n                                newSelections.push({\n                                    kind: graphql_1.Kind.FRAGMENT_SPREAD,\n                                    name: {\n                                        kind: graphql_1.Kind.NAME,\n                                        value: replacement.fragmentName,\n                                    },\n                                });\n                            }\n                        });\n                    }\n                }\n            });\n            if (parentType && reverseMapping[parentType.name]) {\n                newSelections.push({\n                    kind: graphql_1.Kind.FIELD,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n            }\n            if (newSelections.length !== node.selections.length) {\n                return __assign({}, node, { selections: newSelections });\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=ExpandAbstractTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/ExtractField.js":
/*!********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/ExtractField.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar ExtractField = /** @class */ (function () {\n    function ExtractField(_a) {\n        var from = _a.from, to = _a.to;\n        this.from = from;\n        this.to = to;\n    }\n    ExtractField.prototype.transformRequest = function (originalRequest) {\n        var _a, _b;\n        var fromSelection;\n        var ourPathFrom = JSON.stringify(this.from);\n        var ourPathTo = JSON.stringify(this.to);\n        var fieldPath = [];\n        graphql_1.visit(originalRequest.document, (_a = {},\n            _a[graphql_1.Kind.FIELD] = {\n                enter: function (node) {\n                    fieldPath.push(node.name.value);\n                    if (ourPathFrom === JSON.stringify(fieldPath)) {\n                        fromSelection = node.selectionSet;\n                        return graphql_1.BREAK;\n                    }\n                },\n                leave: function (node) {\n                    fieldPath.pop();\n                },\n            },\n            _a));\n        fieldPath = [];\n        var newDocument = graphql_1.visit(originalRequest.document, (_b = {},\n            _b[graphql_1.Kind.FIELD] = {\n                enter: function (node) {\n                    fieldPath.push(node.name.value);\n                    if (ourPathTo === JSON.stringify(fieldPath) && fromSelection) {\n                        return __assign({}, node, { selectionSet: fromSelection });\n                    }\n                },\n                leave: function (node) {\n                    fieldPath.pop();\n                },\n            },\n            _b));\n        return __assign({}, originalRequest, { document: newDocument });\n    };\n    return ExtractField;\n}());\nexports.default = ExtractField;\n//# sourceMappingURL=ExtractField.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvRXh0cmFjdEZpZWxkLmpzP2NjZGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLGdEQUFnRCxPQUFPO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBLDRFQUE0RTtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxTQUFTLDhCQUE4QjtBQUNqRjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBLDBCQUEwQixvQkFBb0Isd0JBQXdCO0FBQ3RFO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvdHJhbnNmb3Jtcy9FeHRyYWN0RmllbGQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xudmFyIEV4dHJhY3RGaWVsZCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBFeHRyYWN0RmllbGQoX2EpIHtcbiAgICAgICAgdmFyIGZyb20gPSBfYS5mcm9tLCB0byA9IF9hLnRvO1xuICAgICAgICB0aGlzLmZyb20gPSBmcm9tO1xuICAgICAgICB0aGlzLnRvID0gdG87XG4gICAgfVxuICAgIEV4dHJhY3RGaWVsZC5wcm90b3R5cGUudHJhbnNmb3JtUmVxdWVzdCA9IGZ1bmN0aW9uIChvcmlnaW5hbFJlcXVlc3QpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgdmFyIGZyb21TZWxlY3Rpb247XG4gICAgICAgIHZhciBvdXJQYXRoRnJvbSA9IEpTT04uc3RyaW5naWZ5KHRoaXMuZnJvbSk7XG4gICAgICAgIHZhciBvdXJQYXRoVG8gPSBKU09OLnN0cmluZ2lmeSh0aGlzLnRvKTtcbiAgICAgICAgdmFyIGZpZWxkUGF0aCA9IFtdO1xuICAgICAgICBncmFwaHFsXzEudmlzaXQob3JpZ2luYWxSZXF1ZXN0LmRvY3VtZW50LCAoX2EgPSB7fSxcbiAgICAgICAgICAgIF9hW2dyYXBocWxfMS5LaW5kLkZJRUxEXSA9IHtcbiAgICAgICAgICAgICAgICBlbnRlcjogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRQYXRoLnB1c2gobm9kZS5uYW1lLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG91clBhdGhGcm9tID09PSBKU09OLnN0cmluZ2lmeShmaWVsZFBhdGgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmcm9tU2VsZWN0aW9uID0gbm9kZS5zZWxlY3Rpb25TZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ3JhcGhxbF8xLkJSRUFLO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBsZWF2ZTogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRQYXRoLnBvcCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX2EpKTtcbiAgICAgICAgZmllbGRQYXRoID0gW107XG4gICAgICAgIHZhciBuZXdEb2N1bWVudCA9IGdyYXBocWxfMS52aXNpdChvcmlnaW5hbFJlcXVlc3QuZG9jdW1lbnQsIChfYiA9IHt9LFxuICAgICAgICAgICAgX2JbZ3JhcGhxbF8xLktpbmQuRklFTERdID0ge1xuICAgICAgICAgICAgICAgIGVudGVyOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZFBhdGgucHVzaChub2RlLm5hbWUudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAob3VyUGF0aFRvID09PSBKU09OLnN0cmluZ2lmeShmaWVsZFBhdGgpICYmIGZyb21TZWxlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgbm9kZSwgeyBzZWxlY3Rpb25TZXQ6IGZyb21TZWxlY3Rpb24gfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGxlYXZlOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZFBhdGgucG9wKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfYikpO1xuICAgICAgICByZXR1cm4gX19hc3NpZ24oe30sIG9yaWdpbmFsUmVxdWVzdCwgeyBkb2N1bWVudDogbmV3RG9jdW1lbnQgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gRXh0cmFjdEZpZWxkO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEV4dHJhY3RGaWVsZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV4dHJhY3RGaWVsZC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/ExtractField.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/FilterRootFields.js":
/*!************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/FilterRootFields.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar TransformRootFields_1 = __webpack_require__(/*! ./TransformRootFields */ \"./node_modules/graphql-tools/dist/transforms/TransformRootFields.js\");\nvar FilterRootFields = /** @class */ (function () {\n    function FilterRootFields(filter) {\n        this.transformer = new TransformRootFields_1.default(function (operation, fieldName, field) {\n            if (filter(operation, fieldName, field)) {\n                return undefined;\n            }\n            else {\n                return null;\n            }\n        });\n    }\n    FilterRootFields.prototype.transformSchema = function (originalSchema) {\n        return this.transformer.transformSchema(originalSchema);\n    };\n    return FilterRootFields;\n}());\nexports.default = FilterRootFields;\n//# sourceMappingURL=FilterRootFields.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvRmlsdGVyUm9vdEZpZWxkcy5qcz9hYmRhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELDRCQUE0QixtQkFBTyxDQUFDLGtHQUF1QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC90cmFuc2Zvcm1zL0ZpbHRlclJvb3RGaWVsZHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgVHJhbnNmb3JtUm9vdEZpZWxkc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtUm9vdEZpZWxkc1wiKTtcbnZhciBGaWx0ZXJSb290RmllbGRzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEZpbHRlclJvb3RGaWVsZHMoZmlsdGVyKSB7XG4gICAgICAgIHRoaXMudHJhbnNmb3JtZXIgPSBuZXcgVHJhbnNmb3JtUm9vdEZpZWxkc18xLmRlZmF1bHQoZnVuY3Rpb24gKG9wZXJhdGlvbiwgZmllbGROYW1lLCBmaWVsZCkge1xuICAgICAgICAgICAgaWYgKGZpbHRlcihvcGVyYXRpb24sIGZpZWxkTmFtZSwgZmllbGQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgRmlsdGVyUm9vdEZpZWxkcy5wcm90b3R5cGUudHJhbnNmb3JtU2NoZW1hID0gZnVuY3Rpb24gKG9yaWdpbmFsU2NoZW1hKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRyYW5zZm9ybWVyLnRyYW5zZm9ybVNjaGVtYShvcmlnaW5hbFNjaGVtYSk7XG4gICAgfTtcbiAgICByZXR1cm4gRmlsdGVyUm9vdEZpZWxkcztcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBGaWx0ZXJSb290RmllbGRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmlsdGVyUm9vdEZpZWxkcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/FilterRootFields.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/FilterToSchema.js":
/*!**********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/FilterToSchema.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar implementsAbstractType_1 = __webpack_require__(/*! ../implementsAbstractType */ \"./node_modules/graphql-tools/dist/implementsAbstractType.js\");\nvar FilterToSchema = /** @class */ (function () {\n    function FilterToSchema(targetSchema) {\n        this.targetSchema = targetSchema;\n    }\n    FilterToSchema.prototype.transformRequest = function (originalRequest) {\n        var document = filterDocumentToSchema(this.targetSchema, originalRequest.document);\n        return __assign({}, originalRequest, { document: document });\n    };\n    return FilterToSchema;\n}());\nexports.default = FilterToSchema;\nfunction filterDocumentToSchema(targetSchema, document) {\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var usedFragments = [];\n    var newOperations = [];\n    var newFragments = [];\n    var validFragments = fragments.filter(function (fragment) {\n        var typeName = fragment.typeCondition.name.value;\n        return Boolean(targetSchema.getType(typeName));\n    });\n    var validFragmentsWithType = {};\n    validFragments.forEach(function (fragment) {\n        var typeName = fragment.typeCondition.name.value;\n        var type = targetSchema.getType(typeName);\n        validFragmentsWithType[fragment.name.value] = type;\n    });\n    var fragmentSet = Object.create(null);\n    operations.forEach(function (operation) {\n        var type;\n        if (operation.operation === 'subscription') {\n            type = targetSchema.getSubscriptionType();\n        }\n        else if (operation.operation === 'mutation') {\n            type = targetSchema.getMutationType();\n        }\n        else {\n            type = targetSchema.getQueryType();\n        }\n        var _a = filterSelectionSet(targetSchema, type, validFragmentsWithType, operation.selectionSet), selectionSet = _a.selectionSet, operationUsedFragments = _a.usedFragments, operationUsedVariables = _a.usedVariables;\n        usedFragments = union(usedFragments, operationUsedFragments);\n        var _b = collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments), collectedUsedVariables = _b.usedVariables, collectedNewFragments = _b.newFragments, collectedFragmentSet = _b.fragmentSet;\n        var fullUsedVariables = union(operationUsedVariables, collectedUsedVariables);\n        newFragments = collectedNewFragments;\n        fragmentSet = collectedFragmentSet;\n        var variableDefinitions = operation.variableDefinitions.filter(function (variable) {\n            return fullUsedVariables.indexOf(variable.variable.name.value) !== -1;\n        });\n        newOperations.push({\n            kind: graphql_1.Kind.OPERATION_DEFINITION,\n            operation: operation.operation,\n            name: operation.name,\n            directives: operation.directives,\n            variableDefinitions: variableDefinitions,\n            selectionSet: selectionSet,\n        });\n    });\n    return {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: newOperations.concat(newFragments),\n    };\n}\nfunction collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments) {\n    var usedVariables = [];\n    var newFragments = [];\n    var _loop_1 = function () {\n        var nextFragmentName = usedFragments.pop();\n        var fragment = validFragments.find(function (fr) { return fr.name.value === nextFragmentName; });\n        if (fragment) {\n            var name_1 = nextFragmentName;\n            var typeName = fragment.typeCondition.name.value;\n            var type = targetSchema.getType(typeName);\n            var _a = filterSelectionSet(targetSchema, type, validFragmentsWithType, fragment.selectionSet), selectionSet = _a.selectionSet, fragmentUsedFragments = _a.usedFragments, fragmentUsedVariables = _a.usedVariables;\n            usedFragments = union(usedFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            if (!fragmentSet[name_1]) {\n                fragmentSet[name_1] = true;\n                newFragments.push({\n                    kind: graphql_1.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: name_1,\n                    },\n                    typeCondition: fragment.typeCondition,\n                    selectionSet: selectionSet,\n                });\n            }\n        }\n    };\n    while (usedFragments.length !== 0) {\n        _loop_1();\n    }\n    return {\n        usedVariables: usedVariables,\n        newFragments: newFragments,\n        fragmentSet: fragmentSet,\n    };\n}\nfunction filterSelectionSet(schema, type, validFragments, selectionSet) {\n    var _a;\n    var usedFragments = [];\n    var usedVariables = [];\n    var typeStack = [type];\n    // Should be rewritten using visitWithSchema\n    var filteredSelectionSet = graphql_1.visit(selectionSet, (_a = {},\n        _a[graphql_1.Kind.FIELD] = {\n            enter: function (node) {\n                var parentType = resolveType(typeStack[typeStack.length - 1]);\n                if (parentType instanceof graphql_1.GraphQLObjectType ||\n                    parentType instanceof graphql_1.GraphQLInterfaceType) {\n                    var fields = parentType.getFields();\n                    var field = node.name.value === '__typename'\n                        ? graphql_1.TypeNameMetaFieldDef\n                        : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    else {\n                        typeStack.push(field.type);\n                    }\n                    var argNames_1 = (field.args || []).map(function (arg) { return arg.name; });\n                    if (node.arguments) {\n                        var args = node.arguments.filter(function (arg) {\n                            return argNames_1.indexOf(arg.name.value) !== -1;\n                        });\n                        if (args.length !== node.arguments.length) {\n                            return __assign({}, node, { arguments: args });\n                        }\n                    }\n                }\n                else if (parentType instanceof graphql_1.GraphQLUnionType &&\n                    node.name.value === '__typename') {\n                    typeStack.push(graphql_1.TypeNameMetaFieldDef.type);\n                }\n            },\n            leave: function (node) {\n                var _a;\n                var currentType = typeStack.pop();\n                var resolvedType = resolveType(currentType);\n                if (resolvedType instanceof graphql_1.GraphQLObjectType ||\n                    resolvedType instanceof graphql_1.GraphQLInterfaceType) {\n                    var selections = node.selectionSet && node.selectionSet.selections || null;\n                    if (!selections || selections.length === 0) {\n                        // need to remove any added variables. Is there a better way to do this?\n                        graphql_1.visit(node, (_a = {},\n                            _a[graphql_1.Kind.VARIABLE] = function (variableNode) {\n                                var index = usedVariables.indexOf(variableNode.name.value);\n                                if (index !== -1) {\n                                    usedVariables.splice(index, 1);\n                                }\n                            },\n                            _a));\n                        return null;\n                    }\n                }\n            },\n        },\n        _a[graphql_1.Kind.FRAGMENT_SPREAD] = function (node) {\n            if (node.name.value in validFragments) {\n                var parentType = resolveType(typeStack[typeStack.length - 1]);\n                var innerType = validFragments[node.name.value];\n                if (!implementsAbstractType_1.default(schema, parentType, innerType)) {\n                    return null;\n                }\n                else {\n                    usedFragments.push(node.name.value);\n                    return;\n                }\n            }\n            else {\n                return null;\n            }\n        },\n        _a[graphql_1.Kind.INLINE_FRAGMENT] = {\n            enter: function (node) {\n                if (node.typeCondition) {\n                    var innerType = schema.getType(node.typeCondition.name.value);\n                    var parentType = resolveType(typeStack[typeStack.length - 1]);\n                    if (implementsAbstractType_1.default(schema, parentType, innerType)) {\n                        typeStack.push(innerType);\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            leave: function (node) {\n                typeStack.pop();\n            },\n        },\n        _a[graphql_1.Kind.VARIABLE] = function (node) {\n            usedVariables.push(node.name.value);\n        },\n        _a));\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments: usedFragments,\n        usedVariables: usedVariables,\n    };\n}\nfunction resolveType(type) {\n    var lastType = type;\n    while (lastType instanceof graphql_1.GraphQLNonNull ||\n        lastType instanceof graphql_1.GraphQLList) {\n        lastType = lastType.ofType;\n    }\n    return lastType;\n}\nfunction union() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var cache = {};\n    var result = [];\n    arrays.forEach(function (array) {\n        array.forEach(function (item) {\n            if (!cache[item]) {\n                cache[item] = true;\n                result.push(item);\n            }\n        });\n    });\n    return result;\n}\n//# sourceMappingURL=FilterToSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvRmlsdGVyVG9TY2hlbWEuanM/NjUzOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsZ0RBQWdELE9BQU87QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDLCtCQUErQixtQkFBTyxDQUFDLDhGQUEyQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0JBQW9CLHFCQUFxQjtBQUNuRTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxpRUFBaUUseURBQXlELEVBQUU7QUFDNUgsZ0VBQWdFLHdEQUF3RCxFQUFFO0FBQzFIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELDJDQUEyQyxFQUFFO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLGlCQUFpQixFQUFFO0FBQy9GO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLDhDQUE4QyxTQUFTLGtCQUFrQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvRmlsdGVyVG9TY2hlbWEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xudmFyIGltcGxlbWVudHNBYnN0cmFjdFR5cGVfMSA9IHJlcXVpcmUoXCIuLi9pbXBsZW1lbnRzQWJzdHJhY3RUeXBlXCIpO1xudmFyIEZpbHRlclRvU2NoZW1hID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEZpbHRlclRvU2NoZW1hKHRhcmdldFNjaGVtYSkge1xuICAgICAgICB0aGlzLnRhcmdldFNjaGVtYSA9IHRhcmdldFNjaGVtYTtcbiAgICB9XG4gICAgRmlsdGVyVG9TY2hlbWEucHJvdG90eXBlLnRyYW5zZm9ybVJlcXVlc3QgPSBmdW5jdGlvbiAob3JpZ2luYWxSZXF1ZXN0KSB7XG4gICAgICAgIHZhciBkb2N1bWVudCA9IGZpbHRlckRvY3VtZW50VG9TY2hlbWEodGhpcy50YXJnZXRTY2hlbWEsIG9yaWdpbmFsUmVxdWVzdC5kb2N1bWVudCk7XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgb3JpZ2luYWxSZXF1ZXN0LCB7IGRvY3VtZW50OiBkb2N1bWVudCB9KTtcbiAgICB9O1xuICAgIHJldHVybiBGaWx0ZXJUb1NjaGVtYTtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBGaWx0ZXJUb1NjaGVtYTtcbmZ1bmN0aW9uIGZpbHRlckRvY3VtZW50VG9TY2hlbWEodGFyZ2V0U2NoZW1hLCBkb2N1bWVudCkge1xuICAgIHZhciBvcGVyYXRpb25zID0gZG9jdW1lbnQuZGVmaW5pdGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChkZWYpIHsgcmV0dXJuIGRlZi5raW5kID09PSBncmFwaHFsXzEuS2luZC5PUEVSQVRJT05fREVGSU5JVElPTjsgfSk7XG4gICAgdmFyIGZyYWdtZW50cyA9IGRvY3VtZW50LmRlZmluaXRpb25zLmZpbHRlcihmdW5jdGlvbiAoZGVmKSB7IHJldHVybiBkZWYua2luZCA9PT0gZ3JhcGhxbF8xLktpbmQuRlJBR01FTlRfREVGSU5JVElPTjsgfSk7XG4gICAgdmFyIHVzZWRGcmFnbWVudHMgPSBbXTtcbiAgICB2YXIgbmV3T3BlcmF0aW9ucyA9IFtdO1xuICAgIHZhciBuZXdGcmFnbWVudHMgPSBbXTtcbiAgICB2YXIgdmFsaWRGcmFnbWVudHMgPSBmcmFnbWVudHMuZmlsdGVyKGZ1bmN0aW9uIChmcmFnbWVudCkge1xuICAgICAgICB2YXIgdHlwZU5hbWUgPSBmcmFnbWVudC50eXBlQ29uZGl0aW9uLm5hbWUudmFsdWU7XG4gICAgICAgIHJldHVybiBCb29sZWFuKHRhcmdldFNjaGVtYS5nZXRUeXBlKHR5cGVOYW1lKSk7XG4gICAgfSk7XG4gICAgdmFyIHZhbGlkRnJhZ21lbnRzV2l0aFR5cGUgPSB7fTtcbiAgICB2YWxpZEZyYWdtZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChmcmFnbWVudCkge1xuICAgICAgICB2YXIgdHlwZU5hbWUgPSBmcmFnbWVudC50eXBlQ29uZGl0aW9uLm5hbWUudmFsdWU7XG4gICAgICAgIHZhciB0eXBlID0gdGFyZ2V0U2NoZW1hLmdldFR5cGUodHlwZU5hbWUpO1xuICAgICAgICB2YWxpZEZyYWdtZW50c1dpdGhUeXBlW2ZyYWdtZW50Lm5hbWUudmFsdWVdID0gdHlwZTtcbiAgICB9KTtcbiAgICB2YXIgZnJhZ21lbnRTZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIG9wZXJhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAob3BlcmF0aW9uKSB7XG4gICAgICAgIHZhciB0eXBlO1xuICAgICAgICBpZiAob3BlcmF0aW9uLm9wZXJhdGlvbiA9PT0gJ3N1YnNjcmlwdGlvbicpIHtcbiAgICAgICAgICAgIHR5cGUgPSB0YXJnZXRTY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG9wZXJhdGlvbi5vcGVyYXRpb24gPT09ICdtdXRhdGlvbicpIHtcbiAgICAgICAgICAgIHR5cGUgPSB0YXJnZXRTY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0eXBlID0gdGFyZ2V0U2NoZW1hLmdldFF1ZXJ5VHlwZSgpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBfYSA9IGZpbHRlclNlbGVjdGlvblNldCh0YXJnZXRTY2hlbWEsIHR5cGUsIHZhbGlkRnJhZ21lbnRzV2l0aFR5cGUsIG9wZXJhdGlvbi5zZWxlY3Rpb25TZXQpLCBzZWxlY3Rpb25TZXQgPSBfYS5zZWxlY3Rpb25TZXQsIG9wZXJhdGlvblVzZWRGcmFnbWVudHMgPSBfYS51c2VkRnJhZ21lbnRzLCBvcGVyYXRpb25Vc2VkVmFyaWFibGVzID0gX2EudXNlZFZhcmlhYmxlcztcbiAgICAgICAgdXNlZEZyYWdtZW50cyA9IHVuaW9uKHVzZWRGcmFnbWVudHMsIG9wZXJhdGlvblVzZWRGcmFnbWVudHMpO1xuICAgICAgICB2YXIgX2IgPSBjb2xsZWN0RnJhZ21lbnRWYXJpYWJsZXModGFyZ2V0U2NoZW1hLCBmcmFnbWVudFNldCwgdmFsaWRGcmFnbWVudHMsIHZhbGlkRnJhZ21lbnRzV2l0aFR5cGUsIHVzZWRGcmFnbWVudHMpLCBjb2xsZWN0ZWRVc2VkVmFyaWFibGVzID0gX2IudXNlZFZhcmlhYmxlcywgY29sbGVjdGVkTmV3RnJhZ21lbnRzID0gX2IubmV3RnJhZ21lbnRzLCBjb2xsZWN0ZWRGcmFnbWVudFNldCA9IF9iLmZyYWdtZW50U2V0O1xuICAgICAgICB2YXIgZnVsbFVzZWRWYXJpYWJsZXMgPSB1bmlvbihvcGVyYXRpb25Vc2VkVmFyaWFibGVzLCBjb2xsZWN0ZWRVc2VkVmFyaWFibGVzKTtcbiAgICAgICAgbmV3RnJhZ21lbnRzID0gY29sbGVjdGVkTmV3RnJhZ21lbnRzO1xuICAgICAgICBmcmFnbWVudFNldCA9IGNvbGxlY3RlZEZyYWdtZW50U2V0O1xuICAgICAgICB2YXIgdmFyaWFibGVEZWZpbml0aW9ucyA9IG9wZXJhdGlvbi52YXJpYWJsZURlZmluaXRpb25zLmZpbHRlcihmdW5jdGlvbiAodmFyaWFibGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmdWxsVXNlZFZhcmlhYmxlcy5pbmRleE9mKHZhcmlhYmxlLnZhcmlhYmxlLm5hbWUudmFsdWUpICE9PSAtMTtcbiAgICAgICAgfSk7XG4gICAgICAgIG5ld09wZXJhdGlvbnMucHVzaCh7XG4gICAgICAgICAgICBraW5kOiBncmFwaHFsXzEuS2luZC5PUEVSQVRJT05fREVGSU5JVElPTixcbiAgICAgICAgICAgIG9wZXJhdGlvbjogb3BlcmF0aW9uLm9wZXJhdGlvbixcbiAgICAgICAgICAgIG5hbWU6IG9wZXJhdGlvbi5uYW1lLFxuICAgICAgICAgICAgZGlyZWN0aXZlczogb3BlcmF0aW9uLmRpcmVjdGl2ZXMsXG4gICAgICAgICAgICB2YXJpYWJsZURlZmluaXRpb25zOiB2YXJpYWJsZURlZmluaXRpb25zLFxuICAgICAgICAgICAgc2VsZWN0aW9uU2V0OiBzZWxlY3Rpb25TZXQsXG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLkRPQ1VNRU5ULFxuICAgICAgICBkZWZpbml0aW9uczogbmV3T3BlcmF0aW9ucy5jb25jYXQobmV3RnJhZ21lbnRzKSxcbiAgICB9O1xufVxuZnVuY3Rpb24gY29sbGVjdEZyYWdtZW50VmFyaWFibGVzKHRhcmdldFNjaGVtYSwgZnJhZ21lbnRTZXQsIHZhbGlkRnJhZ21lbnRzLCB2YWxpZEZyYWdtZW50c1dpdGhUeXBlLCB1c2VkRnJhZ21lbnRzKSB7XG4gICAgdmFyIHVzZWRWYXJpYWJsZXMgPSBbXTtcbiAgICB2YXIgbmV3RnJhZ21lbnRzID0gW107XG4gICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBuZXh0RnJhZ21lbnROYW1lID0gdXNlZEZyYWdtZW50cy5wb3AoKTtcbiAgICAgICAgdmFyIGZyYWdtZW50ID0gdmFsaWRGcmFnbWVudHMuZmluZChmdW5jdGlvbiAoZnIpIHsgcmV0dXJuIGZyLm5hbWUudmFsdWUgPT09IG5leHRGcmFnbWVudE5hbWU7IH0pO1xuICAgICAgICBpZiAoZnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHZhciBuYW1lXzEgPSBuZXh0RnJhZ21lbnROYW1lO1xuICAgICAgICAgICAgdmFyIHR5cGVOYW1lID0gZnJhZ21lbnQudHlwZUNvbmRpdGlvbi5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgdmFyIHR5cGUgPSB0YXJnZXRTY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSk7XG4gICAgICAgICAgICB2YXIgX2EgPSBmaWx0ZXJTZWxlY3Rpb25TZXQodGFyZ2V0U2NoZW1hLCB0eXBlLCB2YWxpZEZyYWdtZW50c1dpdGhUeXBlLCBmcmFnbWVudC5zZWxlY3Rpb25TZXQpLCBzZWxlY3Rpb25TZXQgPSBfYS5zZWxlY3Rpb25TZXQsIGZyYWdtZW50VXNlZEZyYWdtZW50cyA9IF9hLnVzZWRGcmFnbWVudHMsIGZyYWdtZW50VXNlZFZhcmlhYmxlcyA9IF9hLnVzZWRWYXJpYWJsZXM7XG4gICAgICAgICAgICB1c2VkRnJhZ21lbnRzID0gdW5pb24odXNlZEZyYWdtZW50cywgZnJhZ21lbnRVc2VkRnJhZ21lbnRzKTtcbiAgICAgICAgICAgIHVzZWRWYXJpYWJsZXMgPSB1bmlvbih1c2VkVmFyaWFibGVzLCBmcmFnbWVudFVzZWRWYXJpYWJsZXMpO1xuICAgICAgICAgICAgaWYgKCFmcmFnbWVudFNldFtuYW1lXzFdKSB7XG4gICAgICAgICAgICAgICAgZnJhZ21lbnRTZXRbbmFtZV8xXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgbmV3RnJhZ21lbnRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBraW5kOiBncmFwaHFsXzEuS2luZC5GUkFHTUVOVF9ERUZJTklUSU9OLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBncmFwaHFsXzEuS2luZC5OQU1FLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG5hbWVfMSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZUNvbmRpdGlvbjogZnJhZ21lbnQudHlwZUNvbmRpdGlvbixcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0OiBzZWxlY3Rpb25TZXQsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHdoaWxlICh1c2VkRnJhZ21lbnRzLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICBfbG9vcF8xKCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHVzZWRWYXJpYWJsZXM6IHVzZWRWYXJpYWJsZXMsXG4gICAgICAgIG5ld0ZyYWdtZW50czogbmV3RnJhZ21lbnRzLFxuICAgICAgICBmcmFnbWVudFNldDogZnJhZ21lbnRTZXQsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGZpbHRlclNlbGVjdGlvblNldChzY2hlbWEsIHR5cGUsIHZhbGlkRnJhZ21lbnRzLCBzZWxlY3Rpb25TZXQpIHtcbiAgICB2YXIgX2E7XG4gICAgdmFyIHVzZWRGcmFnbWVudHMgPSBbXTtcbiAgICB2YXIgdXNlZFZhcmlhYmxlcyA9IFtdO1xuICAgIHZhciB0eXBlU3RhY2sgPSBbdHlwZV07XG4gICAgLy8gU2hvdWxkIGJlIHJld3JpdHRlbiB1c2luZyB2aXNpdFdpdGhTY2hlbWFcbiAgICB2YXIgZmlsdGVyZWRTZWxlY3Rpb25TZXQgPSBncmFwaHFsXzEudmlzaXQoc2VsZWN0aW9uU2V0LCAoX2EgPSB7fSxcbiAgICAgICAgX2FbZ3JhcGhxbF8xLktpbmQuRklFTERdID0ge1xuICAgICAgICAgICAgZW50ZXI6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcmVudFR5cGUgPSByZXNvbHZlVHlwZSh0eXBlU3RhY2tbdHlwZVN0YWNrLmxlbmd0aCAtIDFdKTtcbiAgICAgICAgICAgICAgICBpZiAocGFyZW50VHlwZSBpbnN0YW5jZW9mIGdyYXBocWxfMS5HcmFwaFFMT2JqZWN0VHlwZSB8fFxuICAgICAgICAgICAgICAgICAgICBwYXJlbnRUeXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxJbnRlcmZhY2VUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmaWVsZHMgPSBwYXJlbnRUeXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZmllbGQgPSBub2RlLm5hbWUudmFsdWUgPT09ICdfX3R5cGVuYW1lJ1xuICAgICAgICAgICAgICAgICAgICAgICAgPyBncmFwaHFsXzEuVHlwZU5hbWVNZXRhRmllbGREZWZcbiAgICAgICAgICAgICAgICAgICAgICAgIDogZmllbGRzW25vZGUubmFtZS52YWx1ZV07XG4gICAgICAgICAgICAgICAgICAgIGlmICghZmllbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZVN0YWNrLnB1c2goZmllbGQudHlwZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFyZ05hbWVzXzEgPSAoZmllbGQuYXJncyB8fCBbXSkubWFwKGZ1bmN0aW9uIChhcmcpIHsgcmV0dXJuIGFyZy5uYW1lOyB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUuYXJndW1lbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXJncyA9IG5vZGUuYXJndW1lbnRzLmZpbHRlcihmdW5jdGlvbiAoYXJnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFyZ05hbWVzXzEuaW5kZXhPZihhcmcubmFtZS52YWx1ZSkgIT09IC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXJncy5sZW5ndGggIT09IG5vZGUuYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgbm9kZSwgeyBhcmd1bWVudHM6IGFyZ3MgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocGFyZW50VHlwZSBpbnN0YW5jZW9mIGdyYXBocWxfMS5HcmFwaFFMVW5pb25UeXBlICYmXG4gICAgICAgICAgICAgICAgICAgIG5vZGUubmFtZS52YWx1ZSA9PT0gJ19fdHlwZW5hbWUnKSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGVTdGFjay5wdXNoKGdyYXBocWxfMS5UeXBlTmFtZU1ldGFGaWVsZERlZi50eXBlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbGVhdmU6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50VHlwZSA9IHR5cGVTdGFjay5wb3AoKTtcbiAgICAgICAgICAgICAgICB2YXIgcmVzb2x2ZWRUeXBlID0gcmVzb2x2ZVR5cGUoY3VycmVudFR5cGUpO1xuICAgICAgICAgICAgICAgIGlmIChyZXNvbHZlZFR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTE9iamVjdFR5cGUgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZWRUeXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxJbnRlcmZhY2VUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWxlY3Rpb25zID0gbm9kZS5zZWxlY3Rpb25TZXQgJiYgbm9kZS5zZWxlY3Rpb25TZXQuc2VsZWN0aW9ucyB8fCBudWxsO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXNlbGVjdGlvbnMgfHwgc2VsZWN0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gcmVtb3ZlIGFueSBhZGRlZCB2YXJpYWJsZXMuIElzIHRoZXJlIGEgYmV0dGVyIHdheSB0byBkbyB0aGlzP1xuICAgICAgICAgICAgICAgICAgICAgICAgZ3JhcGhxbF8xLnZpc2l0KG5vZGUsIChfYSA9IHt9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9hW2dyYXBocWxfMS5LaW5kLlZBUklBQkxFXSA9IGZ1bmN0aW9uICh2YXJpYWJsZU5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gdXNlZFZhcmlhYmxlcy5pbmRleE9mKHZhcmlhYmxlTm9kZS5uYW1lLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlZFZhcmlhYmxlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBfYVtncmFwaHFsXzEuS2luZC5GUkFHTUVOVF9TUFJFQURdID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIGlmIChub2RlLm5hbWUudmFsdWUgaW4gdmFsaWRGcmFnbWVudHMpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFyZW50VHlwZSA9IHJlc29sdmVUeXBlKHR5cGVTdGFja1t0eXBlU3RhY2subGVuZ3RoIC0gMV0pO1xuICAgICAgICAgICAgICAgIHZhciBpbm5lclR5cGUgPSB2YWxpZEZyYWdtZW50c1tub2RlLm5hbWUudmFsdWVdO1xuICAgICAgICAgICAgICAgIGlmICghaW1wbGVtZW50c0Fic3RyYWN0VHlwZV8xLmRlZmF1bHQoc2NoZW1hLCBwYXJlbnRUeXBlLCBpbm5lclR5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdXNlZEZyYWdtZW50cy5wdXNoKG5vZGUubmFtZS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgX2FbZ3JhcGhxbF8xLktpbmQuSU5MSU5FX0ZSQUdNRU5UXSA9IHtcbiAgICAgICAgICAgIGVudGVyOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIGlmIChub2RlLnR5cGVDb25kaXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlubmVyVHlwZSA9IHNjaGVtYS5nZXRUeXBlKG5vZGUudHlwZUNvbmRpdGlvbi5uYW1lLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudFR5cGUgPSByZXNvbHZlVHlwZSh0eXBlU3RhY2tbdHlwZVN0YWNrLmxlbmd0aCAtIDFdKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGltcGxlbWVudHNBYnN0cmFjdFR5cGVfMS5kZWZhdWx0KHNjaGVtYSwgcGFyZW50VHlwZSwgaW5uZXJUeXBlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZVN0YWNrLnB1c2goaW5uZXJUeXBlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxlYXZlOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIHR5cGVTdGFjay5wb3AoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIF9hW2dyYXBocWxfMS5LaW5kLlZBUklBQkxFXSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICB1c2VkVmFyaWFibGVzLnB1c2gobm9kZS5uYW1lLnZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgX2EpKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZWxlY3Rpb25TZXQ6IGZpbHRlcmVkU2VsZWN0aW9uU2V0LFxuICAgICAgICB1c2VkRnJhZ21lbnRzOiB1c2VkRnJhZ21lbnRzLFxuICAgICAgICB1c2VkVmFyaWFibGVzOiB1c2VkVmFyaWFibGVzLFxuICAgIH07XG59XG5mdW5jdGlvbiByZXNvbHZlVHlwZSh0eXBlKSB7XG4gICAgdmFyIGxhc3RUeXBlID0gdHlwZTtcbiAgICB3aGlsZSAobGFzdFR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTE5vbk51bGwgfHxcbiAgICAgICAgbGFzdFR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTExpc3QpIHtcbiAgICAgICAgbGFzdFR5cGUgPSBsYXN0VHlwZS5vZlR5cGU7XG4gICAgfVxuICAgIHJldHVybiBsYXN0VHlwZTtcbn1cbmZ1bmN0aW9uIHVuaW9uKCkge1xuICAgIHZhciBhcnJheXMgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICBhcnJheXNbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICB9XG4gICAgdmFyIGNhY2hlID0ge307XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIGFycmF5cy5mb3JFYWNoKGZ1bmN0aW9uIChhcnJheSkge1xuICAgICAgICBhcnJheS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlW2l0ZW1dKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVbaXRlbV0gPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmlsdGVyVG9TY2hlbWEuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/FilterToSchema.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/FilterTypes.js":
/*!*******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/FilterTypes.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* tslint:disable:no-unused-expression */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar visitSchema_1 = __webpack_require__(/*! ../transforms/visitSchema */ \"./node_modules/graphql-tools/dist/transforms/visitSchema.js\");\nvar FilterTypes = /** @class */ (function () {\n    function FilterTypes(filter) {\n        this.filter = filter;\n    }\n    FilterTypes.prototype.transformSchema = function (schema) {\n        var _this = this;\n        var _a;\n        return visitSchema_1.visitSchema(schema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.TYPE] = function (type) {\n                if (_this.filter(type)) {\n                    return undefined;\n                }\n                else {\n                    return null;\n                }\n            },\n            _a));\n    };\n    return FilterTypes;\n}());\nexports.default = FilterTypes;\n//# sourceMappingURL=FilterTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvRmlsdGVyVHlwZXMuanM/NWUyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELG9CQUFvQixtQkFBTyxDQUFDLDhGQUEyQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvdHJhbnNmb3Jtcy9GaWx0ZXJUeXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlOm5vLXVudXNlZC1leHByZXNzaW9uICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdmlzaXRTY2hlbWFfMSA9IHJlcXVpcmUoXCIuLi90cmFuc2Zvcm1zL3Zpc2l0U2NoZW1hXCIpO1xudmFyIEZpbHRlclR5cGVzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEZpbHRlclR5cGVzKGZpbHRlcikge1xuICAgICAgICB0aGlzLmZpbHRlciA9IGZpbHRlcjtcbiAgICB9XG4gICAgRmlsdGVyVHlwZXMucHJvdG90eXBlLnRyYW5zZm9ybVNjaGVtYSA9IGZ1bmN0aW9uIChzY2hlbWEpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gdmlzaXRTY2hlbWFfMS52aXNpdFNjaGVtYShzY2hlbWEsIChfYSA9IHt9LFxuICAgICAgICAgICAgX2FbdmlzaXRTY2hlbWFfMS5WaXNpdFNjaGVtYUtpbmQuVFlQRV0gPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5maWx0ZXIodHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfYSkpO1xuICAgIH07XG4gICAgcmV0dXJuIEZpbHRlclR5cGVzO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEZpbHRlclR5cGVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmlsdGVyVHlwZXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/FilterTypes.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/RenameRootFields.js":
/*!************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/RenameRootFields.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar schemaRecreation_1 = __webpack_require__(/*! ../stitching/schemaRecreation */ \"./node_modules/graphql-tools/dist/stitching/schemaRecreation.js\");\nvar TransformRootFields_1 = __webpack_require__(/*! ./TransformRootFields */ \"./node_modules/graphql-tools/dist/transforms/TransformRootFields.js\");\nvar RenameRootFields = /** @class */ (function () {\n    function RenameRootFields(renamer) {\n        var resolveType = schemaRecreation_1.createResolveType(function (name, type) { return type; });\n        this.transformer = new TransformRootFields_1.default(function (operation, fieldName, field) {\n            return {\n                name: renamer(operation, fieldName, field),\n                field: schemaRecreation_1.fieldToFieldConfig(field, resolveType, true),\n            };\n        });\n    }\n    RenameRootFields.prototype.transformSchema = function (originalSchema) {\n        return this.transformer.transformSchema(originalSchema);\n    };\n    return RenameRootFields;\n}());\nexports.default = RenameRootFields;\n//# sourceMappingURL=RenameRootFields.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvUmVuYW1lUm9vdEZpZWxkcy5qcz83MjgwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELHlCQUF5QixtQkFBTyxDQUFDLHNHQUErQjtBQUNoRSw0QkFBNEIsbUJBQU8sQ0FBQyxrR0FBdUI7QUFDM0Q7QUFDQTtBQUNBLHNGQUFzRixhQUFhLEVBQUU7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvUmVuYW1lUm9vdEZpZWxkcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBzY2hlbWFSZWNyZWF0aW9uXzEgPSByZXF1aXJlKFwiLi4vc3RpdGNoaW5nL3NjaGVtYVJlY3JlYXRpb25cIik7XG52YXIgVHJhbnNmb3JtUm9vdEZpZWxkc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtUm9vdEZpZWxkc1wiKTtcbnZhciBSZW5hbWVSb290RmllbGRzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlbmFtZVJvb3RGaWVsZHMocmVuYW1lcikge1xuICAgICAgICB2YXIgcmVzb2x2ZVR5cGUgPSBzY2hlbWFSZWNyZWF0aW9uXzEuY3JlYXRlUmVzb2x2ZVR5cGUoZnVuY3Rpb24gKG5hbWUsIHR5cGUpIHsgcmV0dXJuIHR5cGU7IH0pO1xuICAgICAgICB0aGlzLnRyYW5zZm9ybWVyID0gbmV3IFRyYW5zZm9ybVJvb3RGaWVsZHNfMS5kZWZhdWx0KGZ1bmN0aW9uIChvcGVyYXRpb24sIGZpZWxkTmFtZSwgZmllbGQpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogcmVuYW1lcihvcGVyYXRpb24sIGZpZWxkTmFtZSwgZmllbGQpLFxuICAgICAgICAgICAgICAgIGZpZWxkOiBzY2hlbWFSZWNyZWF0aW9uXzEuZmllbGRUb0ZpZWxkQ29uZmlnKGZpZWxkLCByZXNvbHZlVHlwZSwgdHJ1ZSksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgUmVuYW1lUm9vdEZpZWxkcy5wcm90b3R5cGUudHJhbnNmb3JtU2NoZW1hID0gZnVuY3Rpb24gKG9yaWdpbmFsU2NoZW1hKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRyYW5zZm9ybWVyLnRyYW5zZm9ybVNjaGVtYShvcmlnaW5hbFNjaGVtYSk7XG4gICAgfTtcbiAgICByZXR1cm4gUmVuYW1lUm9vdEZpZWxkcztcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBSZW5hbWVSb290RmllbGRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVuYW1lUm9vdEZpZWxkcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/RenameRootFields.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/RenameTypes.js":
/*!*******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/RenameTypes.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar isSpecifiedScalarType_1 = __webpack_require__(/*! ../isSpecifiedScalarType */ \"./node_modules/graphql-tools/dist/isSpecifiedScalarType.js\");\nvar visitSchema_1 = __webpack_require__(/*! ../transforms/visitSchema */ \"./node_modules/graphql-tools/dist/transforms/visitSchema.js\");\nvar RenameTypes = /** @class */ (function () {\n    function RenameTypes(renamer, options) {\n        this.renamer = renamer;\n        this.reverseMap = {};\n        var _a = options || {}, _b = _a.renameBuiltins, renameBuiltins = _b === void 0 ? false : _b, _c = _a.renameScalars, renameScalars = _c === void 0 ? true : _c;\n        this.renameBuiltins = renameBuiltins;\n        this.renameScalars = renameScalars;\n    }\n    RenameTypes.prototype.transformSchema = function (originalSchema) {\n        var _this = this;\n        var _a;\n        return visitSchema_1.visitSchema(originalSchema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.TYPE] = function (type) {\n                if (isSpecifiedScalarType_1.default(type) && !_this.renameBuiltins) {\n                    return undefined;\n                }\n                if (type instanceof graphql_1.GraphQLScalarType && !_this.renameScalars) {\n                    return undefined;\n                }\n                var newName = _this.renamer(type.name);\n                if (newName && newName !== type.name) {\n                    _this.reverseMap[newName] = type.name;\n                    var newType = Object.assign(Object.create(type), type);\n                    newType.name = newName;\n                    return newType;\n                }\n            },\n            _a[visitSchema_1.VisitSchemaKind.ROOT_OBJECT] = function (type) {\n                return undefined;\n            },\n            _a));\n    };\n    RenameTypes.prototype.transformRequest = function (originalRequest) {\n        var _this = this;\n        var _a;\n        var newDocument = graphql_1.visit(originalRequest.document, (_a = {},\n            _a[graphql_1.Kind.NAMED_TYPE] = function (node) {\n                var name = node.name.value;\n                if (name in _this.reverseMap) {\n                    return __assign({}, node, { name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: _this.reverseMap[name],\n                        } });\n                }\n            },\n            _a));\n        return {\n            document: newDocument,\n            variables: originalRequest.variables,\n        };\n    };\n    RenameTypes.prototype.transformResult = function (result) {\n        if (result.data) {\n            var data = this.renameTypes(result.data, 'data');\n            if (data !== result.data) {\n                return __assign({}, result, { data: data });\n            }\n        }\n        return result;\n    };\n    RenameTypes.prototype.renameTypes = function (value, name) {\n        var _this = this;\n        if (name === '__typename') {\n            return this.renamer(value);\n        }\n        if (value && typeof value === 'object') {\n            var newValue_1 = Array.isArray(value) ? []\n                // Create a new object with the same prototype.\n                : Object.create(Object.getPrototypeOf(value));\n            var returnNewValue_1 = false;\n            Object.keys(value).forEach(function (key) {\n                var oldChild = value[key];\n                var newChild = _this.renameTypes(oldChild, key);\n                newValue_1[key] = newChild;\n                if (newChild !== oldChild) {\n                    returnNewValue_1 = true;\n                }\n            });\n            if (returnNewValue_1) {\n                return newValue_1;\n            }\n        }\n        return value;\n    };\n    return RenameTypes;\n}());\nexports.default = RenameTypes;\n//# sourceMappingURL=RenameTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvUmVuYW1lVHlwZXMuanM/NjIyOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsZ0RBQWdELE9BQU87QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDLDhCQUE4QixtQkFBTyxDQUFDLDRGQUEwQjtBQUNoRSxvQkFBb0IsbUJBQU8sQ0FBQyw4RkFBMkI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxTQUFTO0FBQy9DO0FBQ0E7QUFDQSx5QkFBeUIsRUFBRTtBQUMzQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxXQUFXLGFBQWE7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvUmVuYW1lVHlwZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xudmFyIGlzU3BlY2lmaWVkU2NhbGFyVHlwZV8xID0gcmVxdWlyZShcIi4uL2lzU3BlY2lmaWVkU2NhbGFyVHlwZVwiKTtcbnZhciB2aXNpdFNjaGVtYV8xID0gcmVxdWlyZShcIi4uL3RyYW5zZm9ybXMvdmlzaXRTY2hlbWFcIik7XG52YXIgUmVuYW1lVHlwZXMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVuYW1lVHlwZXMocmVuYW1lciwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLnJlbmFtZXIgPSByZW5hbWVyO1xuICAgICAgICB0aGlzLnJldmVyc2VNYXAgPSB7fTtcbiAgICAgICAgdmFyIF9hID0gb3B0aW9ucyB8fCB7fSwgX2IgPSBfYS5yZW5hbWVCdWlsdGlucywgcmVuYW1lQnVpbHRpbnMgPSBfYiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYiwgX2MgPSBfYS5yZW5hbWVTY2FsYXJzLCByZW5hbWVTY2FsYXJzID0gX2MgPT09IHZvaWQgMCA/IHRydWUgOiBfYztcbiAgICAgICAgdGhpcy5yZW5hbWVCdWlsdGlucyA9IHJlbmFtZUJ1aWx0aW5zO1xuICAgICAgICB0aGlzLnJlbmFtZVNjYWxhcnMgPSByZW5hbWVTY2FsYXJzO1xuICAgIH1cbiAgICBSZW5hbWVUeXBlcy5wcm90b3R5cGUudHJhbnNmb3JtU2NoZW1hID0gZnVuY3Rpb24gKG9yaWdpbmFsU2NoZW1hKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIHZpc2l0U2NoZW1hXzEudmlzaXRTY2hlbWEob3JpZ2luYWxTY2hlbWEsIChfYSA9IHt9LFxuICAgICAgICAgICAgX2FbdmlzaXRTY2hlbWFfMS5WaXNpdFNjaGVtYUtpbmQuVFlQRV0gPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICAgICAgICAgIGlmIChpc1NwZWNpZmllZFNjYWxhclR5cGVfMS5kZWZhdWx0KHR5cGUpICYmICFfdGhpcy5yZW5hbWVCdWlsdGlucykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZSBpbnN0YW5jZW9mIGdyYXBocWxfMS5HcmFwaFFMU2NhbGFyVHlwZSAmJiAhX3RoaXMucmVuYW1lU2NhbGFycykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgbmV3TmFtZSA9IF90aGlzLnJlbmFtZXIodHlwZS5uYW1lKTtcbiAgICAgICAgICAgICAgICBpZiAobmV3TmFtZSAmJiBuZXdOYW1lICE9PSB0eXBlLm5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucmV2ZXJzZU1hcFtuZXdOYW1lXSA9IHR5cGUubmFtZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld1R5cGUgPSBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUodHlwZSksIHR5cGUpO1xuICAgICAgICAgICAgICAgICAgICBuZXdUeXBlLm5hbWUgPSBuZXdOYW1lO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3VHlwZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX2FbdmlzaXRTY2hlbWFfMS5WaXNpdFNjaGVtYUtpbmQuUk9PVF9PQkpFQ1RdID0gZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hKSk7XG4gICAgfTtcbiAgICBSZW5hbWVUeXBlcy5wcm90b3R5cGUudHJhbnNmb3JtUmVxdWVzdCA9IGZ1bmN0aW9uIChvcmlnaW5hbFJlcXVlc3QpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB2YXIgbmV3RG9jdW1lbnQgPSBncmFwaHFsXzEudmlzaXQob3JpZ2luYWxSZXF1ZXN0LmRvY3VtZW50LCAoX2EgPSB7fSxcbiAgICAgICAgICAgIF9hW2dyYXBocWxfMS5LaW5kLk5BTUVEX1RZUEVdID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IG5vZGUubmFtZS52YWx1ZTtcbiAgICAgICAgICAgICAgICBpZiAobmFtZSBpbiBfdGhpcy5yZXZlcnNlTWFwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgbm9kZSwgeyBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2luZDogZ3JhcGhxbF8xLktpbmQuTkFNRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3RoaXMucmV2ZXJzZU1hcFtuYW1lXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hKSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkb2N1bWVudDogbmV3RG9jdW1lbnQsXG4gICAgICAgICAgICB2YXJpYWJsZXM6IG9yaWdpbmFsUmVxdWVzdC52YXJpYWJsZXMsXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBSZW5hbWVUeXBlcy5wcm90b3R5cGUudHJhbnNmb3JtUmVzdWx0ID0gZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LmRhdGEpIHtcbiAgICAgICAgICAgIHZhciBkYXRhID0gdGhpcy5yZW5hbWVUeXBlcyhyZXN1bHQuZGF0YSwgJ2RhdGEnKTtcbiAgICAgICAgICAgIGlmIChkYXRhICE9PSByZXN1bHQuZGF0YSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgcmVzdWx0LCB7IGRhdGE6IGRhdGEgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIFJlbmFtZVR5cGVzLnByb3RvdHlwZS5yZW5hbWVUeXBlcyA9IGZ1bmN0aW9uICh2YWx1ZSwgbmFtZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAobmFtZSA9PT0gJ19fdHlwZW5hbWUnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5hbWVyKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgdmFyIG5ld1ZhbHVlXzEgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IFtdXG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IG9iamVjdCB3aXRoIHRoZSBzYW1lIHByb3RvdHlwZS5cbiAgICAgICAgICAgICAgICA6IE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbHVlKSk7XG4gICAgICAgICAgICB2YXIgcmV0dXJuTmV3VmFsdWVfMSA9IGZhbHNlO1xuICAgICAgICAgICAgT2JqZWN0LmtleXModmFsdWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgIHZhciBvbGRDaGlsZCA9IHZhbHVlW2tleV07XG4gICAgICAgICAgICAgICAgdmFyIG5ld0NoaWxkID0gX3RoaXMucmVuYW1lVHlwZXMob2xkQ2hpbGQsIGtleSk7XG4gICAgICAgICAgICAgICAgbmV3VmFsdWVfMVtrZXldID0gbmV3Q2hpbGQ7XG4gICAgICAgICAgICAgICAgaWYgKG5ld0NoaWxkICE9PSBvbGRDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm5OZXdWYWx1ZV8xID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChyZXR1cm5OZXdWYWx1ZV8xKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ld1ZhbHVlXzE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgcmV0dXJuIFJlbmFtZVR5cGVzO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJlbmFtZVR5cGVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVuYW1lVHlwZXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/RenameTypes.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/ReplaceFieldWithFragment.js":
/*!********************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/ReplaceFieldWithFragment.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar ReplaceFieldWithFragment = /** @class */ (function () {\n    function ReplaceFieldWithFragment(targetSchema, fragments) {\n        this.targetSchema = targetSchema;\n        this.mapping = {};\n        for (var _i = 0, fragments_1 = fragments; _i < fragments_1.length; _i++) {\n            var _a = fragments_1[_i], field = _a.field, fragment = _a.fragment;\n            var parsedFragment = parseFragmentToInlineFragment(fragment);\n            var actualTypeName = parsedFragment.typeCondition.name.value;\n            this.mapping[actualTypeName] = this.mapping[actualTypeName] || {};\n            if (this.mapping[actualTypeName][field]) {\n                this.mapping[actualTypeName][field].push(parsedFragment);\n            }\n            else {\n                this.mapping[actualTypeName][field] = [parsedFragment];\n            }\n        }\n    }\n    ReplaceFieldWithFragment.prototype.transformRequest = function (originalRequest) {\n        var document = replaceFieldsWithFragments(this.targetSchema, originalRequest.document, this.mapping);\n        return __assign({}, originalRequest, { document: document });\n    };\n    return ReplaceFieldWithFragment;\n}());\nexports.default = ReplaceFieldWithFragment;\nfunction replaceFieldsWithFragments(targetSchema, document, mapping) {\n    var _a;\n    var typeInfo = new graphql_1.TypeInfo(targetSchema);\n    return graphql_1.visit(document, graphql_1.visitWithTypeInfo(typeInfo, (_a = {},\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            if (parentType) {\n                var parentTypeName_1 = parentType.name;\n                var selections_1 = node.selections;\n                if (mapping[parentTypeName_1]) {\n                    node.selections.forEach(function (selection) {\n                        if (selection.kind === graphql_1.Kind.FIELD) {\n                            var name_1 = selection.name.value;\n                            var fragments = mapping[parentTypeName_1][name_1];\n                            if (fragments && fragments.length > 0) {\n                                var fragment = concatInlineFragments(parentTypeName_1, fragments);\n                                selections_1 = selections_1.concat(fragment);\n                            }\n                        }\n                    });\n                }\n                if (selections_1 !== node.selections) {\n                    return __assign({}, node, { selections: selections_1 });\n                }\n            }\n        },\n        _a)));\n}\nfunction parseFragmentToInlineFragment(definitions) {\n    if (definitions.trim().startsWith('fragment')) {\n        var document_1 = graphql_1.parse(definitions);\n        for (var _i = 0, _a = document_1.definitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            if (definition.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n                return {\n                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                    typeCondition: definition.typeCondition,\n                    selectionSet: definition.selectionSet,\n                };\n            }\n        }\n    }\n    var query = graphql_1.parse(\"{\" + definitions + \"}\")\n        .definitions[0];\n    for (var _b = 0, _c = query.selectionSet.selections; _b < _c.length; _b++) {\n        var selection = _c[_b];\n        if (selection.kind === graphql_1.Kind.INLINE_FRAGMENT) {\n            return selection;\n        }\n    }\n    throw new Error('Could not parse fragment');\n}\nfunction concatInlineFragments(type, fragments) {\n    var fragmentSelections = fragments.reduce(function (selections, fragment) {\n        return selections.concat(fragment.selectionSet.selections);\n    }, []);\n    var deduplicatedFragmentSelection = deduplicateSelection(fragmentSelections);\n    return {\n        kind: graphql_1.Kind.INLINE_FRAGMENT,\n        typeCondition: {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type,\n            },\n        },\n        selectionSet: {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: deduplicatedFragmentSelection,\n        },\n    };\n}\nfunction deduplicateSelection(nodes) {\n    var selectionMap = nodes.reduce(function (map, node) {\n        var _a, _b, _c;\n        switch (node.kind) {\n            case 'Field': {\n                if (node.alias) {\n                    if (map.hasOwnProperty(node.alias.value)) {\n                        return map;\n                    }\n                    else {\n                        return __assign({}, map, (_a = {}, _a[node.alias.value] = node, _a));\n                    }\n                }\n                else {\n                    if (map.hasOwnProperty(node.name.value)) {\n                        return map;\n                    }\n                    else {\n                        return __assign({}, map, (_b = {}, _b[node.name.value] = node, _b));\n                    }\n                }\n            }\n            case 'FragmentSpread': {\n                if (map.hasOwnProperty(node.name.value)) {\n                    return map;\n                }\n                else {\n                    return __assign({}, map, (_c = {}, _c[node.name.value] = node, _c));\n                }\n            }\n            case 'InlineFragment': {\n                if (map.__fragment) {\n                    var fragment = map.__fragment;\n                    return __assign({}, map, { __fragment: concatInlineFragments(fragment.typeCondition.name.value, [fragment, node]) });\n                }\n                else {\n                    return __assign({}, map, { __fragment: node });\n                }\n            }\n            default: {\n                return map;\n            }\n        }\n    }, {});\n    var selection = Object.keys(selectionMap).reduce(function (selectionList, node) { return selectionList.concat(selectionMap[node]); }, []);\n    return selection;\n}\n//# sourceMappingURL=ReplaceFieldWithFragment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/ReplaceFieldWithFragment.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/TransformRootFields.js":
/*!***************************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/TransformRootFields.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar isEmptyObject_1 = __webpack_require__(/*! ../isEmptyObject */ \"./node_modules/graphql-tools/dist/isEmptyObject.js\");\nvar visitSchema_1 = __webpack_require__(/*! ./visitSchema */ \"./node_modules/graphql-tools/dist/transforms/visitSchema.js\");\nvar schemaRecreation_1 = __webpack_require__(/*! ../stitching/schemaRecreation */ \"./node_modules/graphql-tools/dist/stitching/schemaRecreation.js\");\nvar TransformRootFields = /** @class */ (function () {\n    function TransformRootFields(transform) {\n        this.transform = transform;\n    }\n    TransformRootFields.prototype.transformSchema = function (originalSchema) {\n        var _this = this;\n        var _a;\n        return visitSchema_1.visitSchema(originalSchema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.QUERY] = function (type) {\n                return transformFields(type, function (fieldName, field) {\n                    return _this.transform('Query', fieldName, field);\n                });\n            },\n            _a[visitSchema_1.VisitSchemaKind.MUTATION] = function (type) {\n                return transformFields(type, function (fieldName, field) {\n                    return _this.transform('Mutation', fieldName, field);\n                });\n            },\n            _a[visitSchema_1.VisitSchemaKind.SUBSCRIPTION] = function (type) {\n                return transformFields(type, function (fieldName, field) {\n                    return _this.transform('Subscription', fieldName, field);\n                });\n            },\n            _a));\n    };\n    return TransformRootFields;\n}());\nexports.default = TransformRootFields;\nfunction transformFields(type, transformer) {\n    var resolveType = schemaRecreation_1.createResolveType(function (name, originalType) {\n        return originalType;\n    });\n    var fields = type.getFields();\n    var newFields = {};\n    Object.keys(fields).forEach(function (fieldName) {\n        var field = fields[fieldName];\n        var newField = transformer(fieldName, field);\n        if (typeof newField === 'undefined') {\n            newFields[fieldName] = schemaRecreation_1.fieldToFieldConfig(field, resolveType, true);\n        }\n        else if (newField !== null) {\n            if (newField.name) {\n                newFields[newField.name] = newField.field;\n            }\n            else {\n                newFields[fieldName] = newField;\n            }\n        }\n    });\n    if (isEmptyObject_1.default(newFields)) {\n        return null;\n    }\n    else {\n        return new graphql_1.GraphQLObjectType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            fields: newFields,\n        });\n    }\n}\n//# sourceMappingURL=TransformRootFields.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvVHJhbnNmb3JtUm9vdEZpZWxkcy5qcz83MTlmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLGlEQUFTO0FBQ2pDLHNCQUFzQixtQkFBTyxDQUFDLDRFQUFrQjtBQUNoRCxvQkFBb0IsbUJBQU8sQ0FBQyxrRkFBZTtBQUMzQyx5QkFBeUIsbUJBQU8sQ0FBQyxzR0FBK0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvVHJhbnNmb3JtUm9vdEZpZWxkcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBncmFwaHFsXzEgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbnZhciBpc0VtcHR5T2JqZWN0XzEgPSByZXF1aXJlKFwiLi4vaXNFbXB0eU9iamVjdFwiKTtcbnZhciB2aXNpdFNjaGVtYV8xID0gcmVxdWlyZShcIi4vdmlzaXRTY2hlbWFcIik7XG52YXIgc2NoZW1hUmVjcmVhdGlvbl8xID0gcmVxdWlyZShcIi4uL3N0aXRjaGluZy9zY2hlbWFSZWNyZWF0aW9uXCIpO1xudmFyIFRyYW5zZm9ybVJvb3RGaWVsZHMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVHJhbnNmb3JtUm9vdEZpZWxkcyh0cmFuc2Zvcm0pIHtcbiAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG4gICAgfVxuICAgIFRyYW5zZm9ybVJvb3RGaWVsZHMucHJvdG90eXBlLnRyYW5zZm9ybVNjaGVtYSA9IGZ1bmN0aW9uIChvcmlnaW5hbFNjaGVtYSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiB2aXNpdFNjaGVtYV8xLnZpc2l0U2NoZW1hKG9yaWdpbmFsU2NoZW1hLCAoX2EgPSB7fSxcbiAgICAgICAgICAgIF9hW3Zpc2l0U2NoZW1hXzEuVmlzaXRTY2hlbWFLaW5kLlFVRVJZXSA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZm9ybUZpZWxkcyh0eXBlLCBmdW5jdGlvbiAoZmllbGROYW1lLCBmaWVsZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMudHJhbnNmb3JtKCdRdWVyeScsIGZpZWxkTmFtZSwgZmllbGQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hW3Zpc2l0U2NoZW1hXzEuVmlzaXRTY2hlbWFLaW5kLk1VVEFUSU9OXSA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZm9ybUZpZWxkcyh0eXBlLCBmdW5jdGlvbiAoZmllbGROYW1lLCBmaWVsZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMudHJhbnNmb3JtKCdNdXRhdGlvbicsIGZpZWxkTmFtZSwgZmllbGQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hW3Zpc2l0U2NoZW1hXzEuVmlzaXRTY2hlbWFLaW5kLlNVQlNDUklQVElPTl0gPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm1GaWVsZHModHlwZSwgZnVuY3Rpb24gKGZpZWxkTmFtZSwgZmllbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnRyYW5zZm9ybSgnU3Vic2NyaXB0aW9uJywgZmllbGROYW1lLCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX2EpKTtcbiAgICB9O1xuICAgIHJldHVybiBUcmFuc2Zvcm1Sb290RmllbGRzO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFRyYW5zZm9ybVJvb3RGaWVsZHM7XG5mdW5jdGlvbiB0cmFuc2Zvcm1GaWVsZHModHlwZSwgdHJhbnNmb3JtZXIpIHtcbiAgICB2YXIgcmVzb2x2ZVR5cGUgPSBzY2hlbWFSZWNyZWF0aW9uXzEuY3JlYXRlUmVzb2x2ZVR5cGUoZnVuY3Rpb24gKG5hbWUsIG9yaWdpbmFsVHlwZSkge1xuICAgICAgICByZXR1cm4gb3JpZ2luYWxUeXBlO1xuICAgIH0pO1xuICAgIHZhciBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgIHZhciBuZXdGaWVsZHMgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhmaWVsZHMpLmZvckVhY2goZnVuY3Rpb24gKGZpZWxkTmFtZSkge1xuICAgICAgICB2YXIgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgdmFyIG5ld0ZpZWxkID0gdHJhbnNmb3JtZXIoZmllbGROYW1lLCBmaWVsZCk7XG4gICAgICAgIGlmICh0eXBlb2YgbmV3RmllbGQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBuZXdGaWVsZHNbZmllbGROYW1lXSA9IHNjaGVtYVJlY3JlYXRpb25fMS5maWVsZFRvRmllbGRDb25maWcoZmllbGQsIHJlc29sdmVUeXBlLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChuZXdGaWVsZCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG5ld0ZpZWxkLm5hbWUpIHtcbiAgICAgICAgICAgICAgICBuZXdGaWVsZHNbbmV3RmllbGQubmFtZV0gPSBuZXdGaWVsZC5maWVsZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld0ZpZWxkc1tmaWVsZE5hbWVdID0gbmV3RmllbGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoaXNFbXB0eU9iamVjdF8xLmRlZmF1bHQobmV3RmllbGRzKSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXcgZ3JhcGhxbF8xLkdyYXBoUUxPYmplY3RUeXBlKHtcbiAgICAgICAgICAgIG5hbWU6IHR5cGUubmFtZSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0eXBlLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgYXN0Tm9kZTogdHlwZS5hc3ROb2RlLFxuICAgICAgICAgICAgZmllbGRzOiBuZXdGaWVsZHMsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zZm9ybVJvb3RGaWVsZHMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/TransformRootFields.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/WrapQuery.js":
/*!*****************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/WrapQuery.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar WrapQuery = /** @class */ (function () {\n    function WrapQuery(path, wrapper, extractor) {\n        this.path = path;\n        this.wrapper = wrapper;\n        this.extractor = extractor;\n    }\n    WrapQuery.prototype.transformRequest = function (originalRequest) {\n        var _this = this;\n        var _a;\n        var document = originalRequest.document;\n        var fieldPath = [];\n        var ourPath = JSON.stringify(this.path);\n        var newDocument = graphql_1.visit(document, (_a = {},\n            _a[graphql_1.Kind.FIELD] = {\n                enter: function (node) {\n                    fieldPath.push(node.name.value);\n                    if (ourPath === JSON.stringify(fieldPath)) {\n                        var wrapResult = _this.wrapper(node.selectionSet);\n                        // Selection can be either a single selection or a selection set. If it's just one selection,\n                        // let's wrap it in a selection set. Otherwise, keep it as is.\n                        var selectionSet = wrapResult.kind === graphql_1.Kind.SELECTION_SET\n                            ? wrapResult\n                            : {\n                                kind: graphql_1.Kind.SELECTION_SET,\n                                selections: [wrapResult]\n                            };\n                        return __assign({}, node, { selectionSet: selectionSet });\n                    }\n                },\n                leave: function (node) {\n                    fieldPath.pop();\n                }\n            },\n            _a));\n        return __assign({}, originalRequest, { document: newDocument });\n    };\n    WrapQuery.prototype.transformResult = function (originalResult) {\n        var data = originalResult.data;\n        if (data) {\n            var path = this.path.slice();\n            while (path.length > 1) {\n                var next = path.unshift();\n                if (data[next]) {\n                    data = data[next];\n                }\n            }\n            data[path[0]] = this.extractor(data[path[0]]);\n        }\n        return {\n            data: data,\n            errors: originalResult.errors\n        };\n    };\n    return WrapQuery;\n}());\nexports.default = WrapQuery;\n//# sourceMappingURL=WrapQuery.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvV3JhcFF1ZXJ5LmpzPzFkNDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLGdEQUFnRCxPQUFPO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsU0FBUyw2QkFBNkI7QUFDaEY7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsMEJBQTBCLG9CQUFvQix3QkFBd0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvdHJhbnNmb3Jtcy9XcmFwUXVlcnkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdyYXBocWxfMSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xudmFyIFdyYXBRdWVyeSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXcmFwUXVlcnkocGF0aCwgd3JhcHBlciwgZXh0cmFjdG9yKSB7XG4gICAgICAgIHRoaXMucGF0aCA9IHBhdGg7XG4gICAgICAgIHRoaXMud3JhcHBlciA9IHdyYXBwZXI7XG4gICAgICAgIHRoaXMuZXh0cmFjdG9yID0gZXh0cmFjdG9yO1xuICAgIH1cbiAgICBXcmFwUXVlcnkucHJvdG90eXBlLnRyYW5zZm9ybVJlcXVlc3QgPSBmdW5jdGlvbiAob3JpZ2luYWxSZXF1ZXN0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIGRvY3VtZW50ID0gb3JpZ2luYWxSZXF1ZXN0LmRvY3VtZW50O1xuICAgICAgICB2YXIgZmllbGRQYXRoID0gW107XG4gICAgICAgIHZhciBvdXJQYXRoID0gSlNPTi5zdHJpbmdpZnkodGhpcy5wYXRoKTtcbiAgICAgICAgdmFyIG5ld0RvY3VtZW50ID0gZ3JhcGhxbF8xLnZpc2l0KGRvY3VtZW50LCAoX2EgPSB7fSxcbiAgICAgICAgICAgIF9hW2dyYXBocWxfMS5LaW5kLkZJRUxEXSA9IHtcbiAgICAgICAgICAgICAgICBlbnRlcjogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRQYXRoLnB1c2gobm9kZS5uYW1lLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG91clBhdGggPT09IEpTT04uc3RyaW5naWZ5KGZpZWxkUGF0aCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB3cmFwUmVzdWx0ID0gX3RoaXMud3JhcHBlcihub2RlLnNlbGVjdGlvblNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBTZWxlY3Rpb24gY2FuIGJlIGVpdGhlciBhIHNpbmdsZSBzZWxlY3Rpb24gb3IgYSBzZWxlY3Rpb24gc2V0LiBJZiBpdCdzIGp1c3Qgb25lIHNlbGVjdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldCdzIHdyYXAgaXQgaW4gYSBzZWxlY3Rpb24gc2V0LiBPdGhlcndpc2UsIGtlZXAgaXQgYXMgaXMuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZWN0aW9uU2V0ID0gd3JhcFJlc3VsdC5raW5kID09PSBncmFwaHFsXzEuS2luZC5TRUxFQ1RJT05fU0VUXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB3cmFwUmVzdWx0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IGdyYXBocWxfMS5LaW5kLlNFTEVDVElPTl9TRVQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbnM6IFt3cmFwUmVzdWx0XVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX19hc3NpZ24oe30sIG5vZGUsIHsgc2VsZWN0aW9uU2V0OiBzZWxlY3Rpb25TZXQgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGxlYXZlOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZFBhdGgucG9wKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hKSk7XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgb3JpZ2luYWxSZXF1ZXN0LCB7IGRvY3VtZW50OiBuZXdEb2N1bWVudCB9KTtcbiAgICB9O1xuICAgIFdyYXBRdWVyeS5wcm90b3R5cGUudHJhbnNmb3JtUmVzdWx0ID0gZnVuY3Rpb24gKG9yaWdpbmFsUmVzdWx0KSB7XG4gICAgICAgIHZhciBkYXRhID0gb3JpZ2luYWxSZXN1bHQuZGF0YTtcbiAgICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgICAgIHZhciBwYXRoID0gdGhpcy5wYXRoLnNsaWNlKCk7XG4gICAgICAgICAgICB3aGlsZSAocGF0aC5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5leHQgPSBwYXRoLnVuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YVtuZXh0XSkge1xuICAgICAgICAgICAgICAgICAgICBkYXRhID0gZGF0YVtuZXh0XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkYXRhW3BhdGhbMF1dID0gdGhpcy5leHRyYWN0b3IoZGF0YVtwYXRoWzBdXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICBlcnJvcnM6IG9yaWdpbmFsUmVzdWx0LmVycm9yc1xuICAgICAgICB9O1xuICAgIH07XG4gICAgcmV0dXJuIFdyYXBRdWVyeTtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBXcmFwUXVlcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XcmFwUXVlcnkuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/WrapQuery.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar transformSchema_1 = __webpack_require__(/*! ./transformSchema */ \"./node_modules/graphql-tools/dist/transforms/transformSchema.js\");\nexports.transformSchema = transformSchema_1.default;\nvar AddArgumentsAsVariables_1 = __webpack_require__(/*! ./AddArgumentsAsVariables */ \"./node_modules/graphql-tools/dist/transforms/AddArgumentsAsVariables.js\");\nexports.AddArgumentsAsVariables = AddArgumentsAsVariables_1.default;\nvar CheckResultAndHandleErrors_1 = __webpack_require__(/*! ./CheckResultAndHandleErrors */ \"./node_modules/graphql-tools/dist/transforms/CheckResultAndHandleErrors.js\");\nexports.CheckResultAndHandleErrors = CheckResultAndHandleErrors_1.default;\nvar ReplaceFieldWithFragment_1 = __webpack_require__(/*! ./ReplaceFieldWithFragment */ \"./node_modules/graphql-tools/dist/transforms/ReplaceFieldWithFragment.js\");\nexports.ReplaceFieldWithFragment = ReplaceFieldWithFragment_1.default;\nvar AddTypenameToAbstract_1 = __webpack_require__(/*! ./AddTypenameToAbstract */ \"./node_modules/graphql-tools/dist/transforms/AddTypenameToAbstract.js\");\nexports.AddTypenameToAbstract = AddTypenameToAbstract_1.default;\nvar FilterToSchema_1 = __webpack_require__(/*! ./FilterToSchema */ \"./node_modules/graphql-tools/dist/transforms/FilterToSchema.js\");\nexports.FilterToSchema = FilterToSchema_1.default;\nvar RenameTypes_1 = __webpack_require__(/*! ./RenameTypes */ \"./node_modules/graphql-tools/dist/transforms/RenameTypes.js\");\nexports.RenameTypes = RenameTypes_1.default;\nvar FilterTypes_1 = __webpack_require__(/*! ./FilterTypes */ \"./node_modules/graphql-tools/dist/transforms/FilterTypes.js\");\nexports.FilterTypes = FilterTypes_1.default;\nvar TransformRootFields_1 = __webpack_require__(/*! ./TransformRootFields */ \"./node_modules/graphql-tools/dist/transforms/TransformRootFields.js\");\nexports.TransformRootFields = TransformRootFields_1.default;\nvar RenameRootFields_1 = __webpack_require__(/*! ./RenameRootFields */ \"./node_modules/graphql-tools/dist/transforms/RenameRootFields.js\");\nexports.RenameRootFields = RenameRootFields_1.default;\nvar FilterRootFields_1 = __webpack_require__(/*! ./FilterRootFields */ \"./node_modules/graphql-tools/dist/transforms/FilterRootFields.js\");\nexports.FilterRootFields = FilterRootFields_1.default;\nvar ExpandAbstractTypes_1 = __webpack_require__(/*! ./ExpandAbstractTypes */ \"./node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js\");\nexports.ExpandAbstractTypes = ExpandAbstractTypes_1.default;\nvar ExtractField_1 = __webpack_require__(/*! ./ExtractField */ \"./node_modules/graphql-tools/dist/transforms/ExtractField.js\");\nexports.ExtractField = ExtractField_1.default;\nvar WrapQuery_1 = __webpack_require__(/*! ./WrapQuery */ \"./node_modules/graphql-tools/dist/transforms/WrapQuery.js\");\nexports.WrapQuery = WrapQuery_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvaW5kZXguanM/YWQ2NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCx3QkFBd0IsbUJBQU8sQ0FBQywwRkFBbUI7QUFDbkQ7QUFDQSxnQ0FBZ0MsbUJBQU8sQ0FBQywwR0FBMkI7QUFDbkU7QUFDQSxtQ0FBbUMsbUJBQU8sQ0FBQyxnSEFBOEI7QUFDekU7QUFDQSxpQ0FBaUMsbUJBQU8sQ0FBQyw0R0FBNEI7QUFDckU7QUFDQSw4QkFBOEIsbUJBQU8sQ0FBQyxzR0FBeUI7QUFDL0Q7QUFDQSx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBa0I7QUFDakQ7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyxrRkFBZTtBQUMzQztBQUNBLG9CQUFvQixtQkFBTyxDQUFDLGtGQUFlO0FBQzNDO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMsa0dBQXVCO0FBQzNEO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsNEZBQW9CO0FBQ3JEO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsNEZBQW9CO0FBQ3JEO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMsa0dBQXVCO0FBQzNEO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzdDO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsOEVBQWE7QUFDdkM7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsLXRvb2xzL2Rpc3QvdHJhbnNmb3Jtcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB0cmFuc2Zvcm1TY2hlbWFfMSA9IHJlcXVpcmUoXCIuL3RyYW5zZm9ybVNjaGVtYVwiKTtcbmV4cG9ydHMudHJhbnNmb3JtU2NoZW1hID0gdHJhbnNmb3JtU2NoZW1hXzEuZGVmYXVsdDtcbnZhciBBZGRBcmd1bWVudHNBc1ZhcmlhYmxlc18xID0gcmVxdWlyZShcIi4vQWRkQXJndW1lbnRzQXNWYXJpYWJsZXNcIik7XG5leHBvcnRzLkFkZEFyZ3VtZW50c0FzVmFyaWFibGVzID0gQWRkQXJndW1lbnRzQXNWYXJpYWJsZXNfMS5kZWZhdWx0O1xudmFyIENoZWNrUmVzdWx0QW5kSGFuZGxlRXJyb3JzXzEgPSByZXF1aXJlKFwiLi9DaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9yc1wiKTtcbmV4cG9ydHMuQ2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMgPSBDaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9yc18xLmRlZmF1bHQ7XG52YXIgUmVwbGFjZUZpZWxkV2l0aEZyYWdtZW50XzEgPSByZXF1aXJlKFwiLi9SZXBsYWNlRmllbGRXaXRoRnJhZ21lbnRcIik7XG5leHBvcnRzLlJlcGxhY2VGaWVsZFdpdGhGcmFnbWVudCA9IFJlcGxhY2VGaWVsZFdpdGhGcmFnbWVudF8xLmRlZmF1bHQ7XG52YXIgQWRkVHlwZW5hbWVUb0Fic3RyYWN0XzEgPSByZXF1aXJlKFwiLi9BZGRUeXBlbmFtZVRvQWJzdHJhY3RcIik7XG5leHBvcnRzLkFkZFR5cGVuYW1lVG9BYnN0cmFjdCA9IEFkZFR5cGVuYW1lVG9BYnN0cmFjdF8xLmRlZmF1bHQ7XG52YXIgRmlsdGVyVG9TY2hlbWFfMSA9IHJlcXVpcmUoXCIuL0ZpbHRlclRvU2NoZW1hXCIpO1xuZXhwb3J0cy5GaWx0ZXJUb1NjaGVtYSA9IEZpbHRlclRvU2NoZW1hXzEuZGVmYXVsdDtcbnZhciBSZW5hbWVUeXBlc18xID0gcmVxdWlyZShcIi4vUmVuYW1lVHlwZXNcIik7XG5leHBvcnRzLlJlbmFtZVR5cGVzID0gUmVuYW1lVHlwZXNfMS5kZWZhdWx0O1xudmFyIEZpbHRlclR5cGVzXzEgPSByZXF1aXJlKFwiLi9GaWx0ZXJUeXBlc1wiKTtcbmV4cG9ydHMuRmlsdGVyVHlwZXMgPSBGaWx0ZXJUeXBlc18xLmRlZmF1bHQ7XG52YXIgVHJhbnNmb3JtUm9vdEZpZWxkc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtUm9vdEZpZWxkc1wiKTtcbmV4cG9ydHMuVHJhbnNmb3JtUm9vdEZpZWxkcyA9IFRyYW5zZm9ybVJvb3RGaWVsZHNfMS5kZWZhdWx0O1xudmFyIFJlbmFtZVJvb3RGaWVsZHNfMSA9IHJlcXVpcmUoXCIuL1JlbmFtZVJvb3RGaWVsZHNcIik7XG5leHBvcnRzLlJlbmFtZVJvb3RGaWVsZHMgPSBSZW5hbWVSb290RmllbGRzXzEuZGVmYXVsdDtcbnZhciBGaWx0ZXJSb290RmllbGRzXzEgPSByZXF1aXJlKFwiLi9GaWx0ZXJSb290RmllbGRzXCIpO1xuZXhwb3J0cy5GaWx0ZXJSb290RmllbGRzID0gRmlsdGVyUm9vdEZpZWxkc18xLmRlZmF1bHQ7XG52YXIgRXhwYW5kQWJzdHJhY3RUeXBlc18xID0gcmVxdWlyZShcIi4vRXhwYW5kQWJzdHJhY3RUeXBlc1wiKTtcbmV4cG9ydHMuRXhwYW5kQWJzdHJhY3RUeXBlcyA9IEV4cGFuZEFic3RyYWN0VHlwZXNfMS5kZWZhdWx0O1xudmFyIEV4dHJhY3RGaWVsZF8xID0gcmVxdWlyZShcIi4vRXh0cmFjdEZpZWxkXCIpO1xuZXhwb3J0cy5FeHRyYWN0RmllbGQgPSBFeHRyYWN0RmllbGRfMS5kZWZhdWx0O1xudmFyIFdyYXBRdWVyeV8xID0gcmVxdWlyZShcIi4vV3JhcFF1ZXJ5XCIpO1xuZXhwb3J0cy5XcmFwUXVlcnkgPSBXcmFwUXVlcnlfMS5kZWZhdWx0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/index.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/transformSchema.js":
/*!***********************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/transformSchema.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar makeExecutableSchema_1 = __webpack_require__(/*! ../makeExecutableSchema */ \"./node_modules/graphql-tools/dist/makeExecutableSchema.js\");\nvar visitSchema_1 = __webpack_require__(/*! ../transforms/visitSchema */ \"./node_modules/graphql-tools/dist/transforms/visitSchema.js\");\nvar transforms_1 = __webpack_require__(/*! ../transforms/transforms */ \"./node_modules/graphql-tools/dist/transforms/transforms.js\");\nvar resolvers_1 = __webpack_require__(/*! ../stitching/resolvers */ \"./node_modules/graphql-tools/dist/stitching/resolvers.js\");\nfunction transformSchema(targetSchema, transforms) {\n    var schema = visitSchema_1.visitSchema(targetSchema, {}, true);\n    var mapping = resolvers_1.generateSimpleMapping(targetSchema);\n    var resolvers = resolvers_1.generateProxyingResolvers(targetSchema, transforms, mapping);\n    schema = makeExecutableSchema_1.addResolveFunctionsToSchema({\n        schema: schema,\n        resolvers: resolvers,\n        resolverValidationOptions: {\n            allowResolversNotInSchema: true,\n        },\n    });\n    schema = transforms_1.applySchemaTransforms(schema, transforms);\n    schema.transforms = transforms;\n    return schema;\n}\nexports.default = transformSchema;\n//# sourceMappingURL=transformSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvdHJhbnNmb3JtU2NoZW1hLmpzP2YxMmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDLGNBQWM7QUFDNUQsNkJBQTZCLG1CQUFPLENBQUMsMEZBQXlCO0FBQzlELG9CQUFvQixtQkFBTyxDQUFDLDhGQUEyQjtBQUN2RCxtQkFBbUIsbUJBQU8sQ0FBQyw0RkFBMEI7QUFDckQsa0JBQWtCLG1CQUFPLENBQUMsd0ZBQXdCO0FBQ2xEO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvdHJhbnNmb3JtU2NoZW1hLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG1ha2VFeGVjdXRhYmxlU2NoZW1hXzEgPSByZXF1aXJlKFwiLi4vbWFrZUV4ZWN1dGFibGVTY2hlbWFcIik7XG52YXIgdmlzaXRTY2hlbWFfMSA9IHJlcXVpcmUoXCIuLi90cmFuc2Zvcm1zL3Zpc2l0U2NoZW1hXCIpO1xudmFyIHRyYW5zZm9ybXNfMSA9IHJlcXVpcmUoXCIuLi90cmFuc2Zvcm1zL3RyYW5zZm9ybXNcIik7XG52YXIgcmVzb2x2ZXJzXzEgPSByZXF1aXJlKFwiLi4vc3RpdGNoaW5nL3Jlc29sdmVyc1wiKTtcbmZ1bmN0aW9uIHRyYW5zZm9ybVNjaGVtYSh0YXJnZXRTY2hlbWEsIHRyYW5zZm9ybXMpIHtcbiAgICB2YXIgc2NoZW1hID0gdmlzaXRTY2hlbWFfMS52aXNpdFNjaGVtYSh0YXJnZXRTY2hlbWEsIHt9LCB0cnVlKTtcbiAgICB2YXIgbWFwcGluZyA9IHJlc29sdmVyc18xLmdlbmVyYXRlU2ltcGxlTWFwcGluZyh0YXJnZXRTY2hlbWEpO1xuICAgIHZhciByZXNvbHZlcnMgPSByZXNvbHZlcnNfMS5nZW5lcmF0ZVByb3h5aW5nUmVzb2x2ZXJzKHRhcmdldFNjaGVtYSwgdHJhbnNmb3JtcywgbWFwcGluZyk7XG4gICAgc2NoZW1hID0gbWFrZUV4ZWN1dGFibGVTY2hlbWFfMS5hZGRSZXNvbHZlRnVuY3Rpb25zVG9TY2hlbWEoe1xuICAgICAgICBzY2hlbWE6IHNjaGVtYSxcbiAgICAgICAgcmVzb2x2ZXJzOiByZXNvbHZlcnMsXG4gICAgICAgIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnM6IHtcbiAgICAgICAgICAgIGFsbG93UmVzb2x2ZXJzTm90SW5TY2hlbWE6IHRydWUsXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgc2NoZW1hID0gdHJhbnNmb3Jtc18xLmFwcGx5U2NoZW1hVHJhbnNmb3JtcyhzY2hlbWEsIHRyYW5zZm9ybXMpO1xuICAgIHNjaGVtYS50cmFuc2Zvcm1zID0gdHJhbnNmb3JtcztcbiAgICByZXR1cm4gc2NoZW1hO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gdHJhbnNmb3JtU2NoZW1hO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNmb3JtU2NoZW1hLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/transformSchema.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/transforms.js":
/*!******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/transforms.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction applySchemaTransforms(originalSchema, transforms) {\n    return transforms.reduce(function (schema, transform) {\n        return transform.transformSchema ? transform.transformSchema(schema) : schema;\n    }, originalSchema);\n}\nexports.applySchemaTransforms = applySchemaTransforms;\nfunction applyRequestTransforms(originalRequest, transforms) {\n    return transforms.reduce(function (request, transform) {\n        return transform.transformRequest\n            ? transform.transformRequest(request)\n            : request;\n    }, originalRequest);\n}\nexports.applyRequestTransforms = applyRequestTransforms;\nfunction applyResultTransforms(originalResult, transforms) {\n    return transforms.reduce(function (result, transform) {\n        return transform.transformResult ? transform.transformResult(result) : result;\n    }, originalResult);\n}\nexports.applyResultTransforms = applyResultTransforms;\nfunction composeTransforms() {\n    var transforms = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transforms[_i] = arguments[_i];\n    }\n    var reverseTransforms = transforms.slice().reverse();\n    return {\n        transformSchema: function (originalSchema) {\n            return applySchemaTransforms(originalSchema, transforms);\n        },\n        transformRequest: function (originalRequest) {\n            return applyRequestTransforms(originalRequest, reverseTransforms);\n        },\n        transformResult: function (result) {\n            return applyResultTransforms(result, reverseTransforms);\n        },\n    };\n}\nexports.composeTransforms = composeTransforms;\n//# sourceMappingURL=transforms.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvdHJhbnNmb3Jtcy5qcz9jZDU4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwtdG9vbHMvZGlzdC90cmFuc2Zvcm1zL3RyYW5zZm9ybXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBhcHBseVNjaGVtYVRyYW5zZm9ybXMob3JpZ2luYWxTY2hlbWEsIHRyYW5zZm9ybXMpIHtcbiAgICByZXR1cm4gdHJhbnNmb3Jtcy5yZWR1Y2UoZnVuY3Rpb24gKHNjaGVtYSwgdHJhbnNmb3JtKSB7XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm0udHJhbnNmb3JtU2NoZW1hID8gdHJhbnNmb3JtLnRyYW5zZm9ybVNjaGVtYShzY2hlbWEpIDogc2NoZW1hO1xuICAgIH0sIG9yaWdpbmFsU2NoZW1hKTtcbn1cbmV4cG9ydHMuYXBwbHlTY2hlbWFUcmFuc2Zvcm1zID0gYXBwbHlTY2hlbWFUcmFuc2Zvcm1zO1xuZnVuY3Rpb24gYXBwbHlSZXF1ZXN0VHJhbnNmb3JtcyhvcmlnaW5hbFJlcXVlc3QsIHRyYW5zZm9ybXMpIHtcbiAgICByZXR1cm4gdHJhbnNmb3Jtcy5yZWR1Y2UoZnVuY3Rpb24gKHJlcXVlc3QsIHRyYW5zZm9ybSkge1xuICAgICAgICByZXR1cm4gdHJhbnNmb3JtLnRyYW5zZm9ybVJlcXVlc3RcbiAgICAgICAgICAgID8gdHJhbnNmb3JtLnRyYW5zZm9ybVJlcXVlc3QocmVxdWVzdClcbiAgICAgICAgICAgIDogcmVxdWVzdDtcbiAgICB9LCBvcmlnaW5hbFJlcXVlc3QpO1xufVxuZXhwb3J0cy5hcHBseVJlcXVlc3RUcmFuc2Zvcm1zID0gYXBwbHlSZXF1ZXN0VHJhbnNmb3JtcztcbmZ1bmN0aW9uIGFwcGx5UmVzdWx0VHJhbnNmb3JtcyhvcmlnaW5hbFJlc3VsdCwgdHJhbnNmb3Jtcykge1xuICAgIHJldHVybiB0cmFuc2Zvcm1zLnJlZHVjZShmdW5jdGlvbiAocmVzdWx0LCB0cmFuc2Zvcm0pIHtcbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybS50cmFuc2Zvcm1SZXN1bHQgPyB0cmFuc2Zvcm0udHJhbnNmb3JtUmVzdWx0KHJlc3VsdCkgOiByZXN1bHQ7XG4gICAgfSwgb3JpZ2luYWxSZXN1bHQpO1xufVxuZXhwb3J0cy5hcHBseVJlc3VsdFRyYW5zZm9ybXMgPSBhcHBseVJlc3VsdFRyYW5zZm9ybXM7XG5mdW5jdGlvbiBjb21wb3NlVHJhbnNmb3JtcygpIHtcbiAgICB2YXIgdHJhbnNmb3JtcyA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHRyYW5zZm9ybXNbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICB9XG4gICAgdmFyIHJldmVyc2VUcmFuc2Zvcm1zID0gdHJhbnNmb3Jtcy5zbGljZSgpLnJldmVyc2UoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0cmFuc2Zvcm1TY2hlbWE6IGZ1bmN0aW9uIChvcmlnaW5hbFNjaGVtYSkge1xuICAgICAgICAgICAgcmV0dXJuIGFwcGx5U2NoZW1hVHJhbnNmb3JtcyhvcmlnaW5hbFNjaGVtYSwgdHJhbnNmb3Jtcyk7XG4gICAgICAgIH0sXG4gICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGZ1bmN0aW9uIChvcmlnaW5hbFJlcXVlc3QpIHtcbiAgICAgICAgICAgIHJldHVybiBhcHBseVJlcXVlc3RUcmFuc2Zvcm1zKG9yaWdpbmFsUmVxdWVzdCwgcmV2ZXJzZVRyYW5zZm9ybXMpO1xuICAgICAgICB9LFxuICAgICAgICB0cmFuc2Zvcm1SZXN1bHQ6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIHJldHVybiBhcHBseVJlc3VsdFRyYW5zZm9ybXMocmVzdWx0LCByZXZlcnNlVHJhbnNmb3Jtcyk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMuY29tcG9zZVRyYW5zZm9ybXMgPSBjb21wb3NlVHJhbnNmb3Jtcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zZm9ybXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/transforms.js\n");

/***/ }),

/***/ "./node_modules/graphql-tools/dist/transforms/visitSchema.js":
/*!*******************************************************************!*\
  !*** ./node_modules/graphql-tools/dist/transforms/visitSchema.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = __webpack_require__(/*! graphql */ \"./node_modules/graphql/index.mjs\");\nvar schemaRecreation_1 = __webpack_require__(/*! ../stitching/schemaRecreation */ \"./node_modules/graphql-tools/dist/stitching/schemaRecreation.js\");\nvar VisitSchemaKind;\n(function (VisitSchemaKind) {\n    VisitSchemaKind[\"TYPE\"] = \"VisitSchemaKind.TYPE\";\n    VisitSchemaKind[\"SCALAR_TYPE\"] = \"VisitSchemaKind.SCALAR_TYPE\";\n    VisitSchemaKind[\"ENUM_TYPE\"] = \"VisitSchemaKind.ENUM_TYPE\";\n    VisitSchemaKind[\"COMPOSITE_TYPE\"] = \"VisitSchemaKind.COMPOSITE_TYPE\";\n    VisitSchemaKind[\"OBJECT_TYPE\"] = \"VisitSchemaKind.OBJECT_TYPE\";\n    VisitSchemaKind[\"INPUT_OBJECT_TYPE\"] = \"VisitSchemaKind.INPUT_OBJECT_TYPE\";\n    VisitSchemaKind[\"ABSTRACT_TYPE\"] = \"VisitSchemaKind.ABSTRACT_TYPE\";\n    VisitSchemaKind[\"UNION_TYPE\"] = \"VisitSchemaKind.UNION_TYPE\";\n    VisitSchemaKind[\"INTERFACE_TYPE\"] = \"VisitSchemaKind.INTERFACE_TYPE\";\n    VisitSchemaKind[\"ROOT_OBJECT\"] = \"VisitSchemaKind.ROOT_OBJECT\";\n    VisitSchemaKind[\"QUERY\"] = \"VisitSchemaKind.QUERY\";\n    VisitSchemaKind[\"MUTATION\"] = \"VisitSchemaKind.MUTATION\";\n    VisitSchemaKind[\"SUBSCRIPTION\"] = \"VisitSchemaKind.SUBSCRIPTION\";\n})(VisitSchemaKind = exports.VisitSchemaKind || (exports.VisitSchemaKind = {}));\nfunction visitSchema(schema, visitor, stripResolvers) {\n    var types = {};\n    var resolveType = schemaRecreation_1.createResolveType(function (name) {\n        if (typeof types[name] === 'undefined') {\n            throw new Error(\"Can't find type \" + name + \".\");\n        }\n        return types[name];\n    });\n    var queryType = schema.getQueryType();\n    var mutationType = schema.getMutationType();\n    var subscriptionType = schema.getSubscriptionType();\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).map(function (typeName) {\n        var type = typeMap[typeName];\n        if (graphql_1.isNamedType(type) && graphql_1.getNamedType(type).name.slice(0, 2) !== '__') {\n            var specifiers = getTypeSpecifiers(type, schema);\n            var typeVisitor = getVisitor(visitor, specifiers);\n            if (typeVisitor) {\n                var result = typeVisitor(type, schema);\n                if (typeof result === 'undefined') {\n                    types[typeName] = schemaRecreation_1.recreateType(type, resolveType, !stripResolvers);\n                }\n                else if (result === null) {\n                    types[typeName] = null;\n                }\n                else {\n                    types[typeName] = schemaRecreation_1.recreateType(result, resolveType, !stripResolvers);\n                }\n            }\n            else {\n                types[typeName] = schemaRecreation_1.recreateType(type, resolveType, !stripResolvers);\n            }\n        }\n    });\n    return new graphql_1.GraphQLSchema({\n        query: queryType ? types[queryType.name] : null,\n        mutation: mutationType\n            ? types[mutationType.name]\n            : null,\n        subscription: subscriptionType\n            ? types[subscriptionType.name]\n            : null,\n        types: Object.keys(types).map(function (name) { return types[name]; }),\n    });\n}\nexports.visitSchema = visitSchema;\nfunction getTypeSpecifiers(type, schema) {\n    var specifiers = [VisitSchemaKind.TYPE];\n    if (type instanceof graphql_1.GraphQLObjectType) {\n        specifiers.unshift(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.OBJECT_TYPE);\n        var query = schema.getQueryType();\n        var mutation = schema.getMutationType();\n        var subscription = schema.getSubscriptionType();\n        if (type === query) {\n            specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.QUERY);\n        }\n        else if (type === mutation) {\n            specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.MUTATION);\n        }\n        else if (type === subscription) {\n            specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.SUBSCRIPTION);\n        }\n    }\n    else if (type instanceof graphql_1.GraphQLInputObjectType) {\n        specifiers.push(VisitSchemaKind.INPUT_OBJECT_TYPE);\n    }\n    else if (type instanceof graphql_1.GraphQLInterfaceType) {\n        specifiers.push(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.ABSTRACT_TYPE, VisitSchemaKind.INTERFACE_TYPE);\n    }\n    else if (type instanceof graphql_1.GraphQLUnionType) {\n        specifiers.push(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.ABSTRACT_TYPE, VisitSchemaKind.UNION_TYPE);\n    }\n    else if (type instanceof graphql_1.GraphQLEnumType) {\n        specifiers.push(VisitSchemaKind.ENUM_TYPE);\n    }\n    else if (type instanceof graphql_1.GraphQLScalarType) {\n        specifiers.push(VisitSchemaKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getVisitor(visitor, specifiers) {\n    var typeVisitor = null;\n    var stack = specifiers.slice();\n    while (!typeVisitor && stack.length > 0) {\n        var next = stack.pop();\n        typeVisitor = visitor[next];\n    }\n    return typeVisitor;\n}\n//# sourceMappingURL=visitSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvdmlzaXRTY2hlbWEuanM/NTY1NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEMsY0FBYztBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpREFBUztBQUNqQyx5QkFBeUIsbUJBQU8sQ0FBQyxzR0FBK0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0RUFBNEU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxvQkFBb0IsRUFBRTtBQUM3RSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ3JhcGhxbC10b29scy9kaXN0L3RyYW5zZm9ybXMvdmlzaXRTY2hlbWEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZ3JhcGhxbF8xID0gcmVxdWlyZShcImdyYXBocWxcIik7XG52YXIgc2NoZW1hUmVjcmVhdGlvbl8xID0gcmVxdWlyZShcIi4uL3N0aXRjaGluZy9zY2hlbWFSZWNyZWF0aW9uXCIpO1xudmFyIFZpc2l0U2NoZW1hS2luZDtcbihmdW5jdGlvbiAoVmlzaXRTY2hlbWFLaW5kKSB7XG4gICAgVmlzaXRTY2hlbWFLaW5kW1wiVFlQRVwiXSA9IFwiVmlzaXRTY2hlbWFLaW5kLlRZUEVcIjtcbiAgICBWaXNpdFNjaGVtYUtpbmRbXCJTQ0FMQVJfVFlQRVwiXSA9IFwiVmlzaXRTY2hlbWFLaW5kLlNDQUxBUl9UWVBFXCI7XG4gICAgVmlzaXRTY2hlbWFLaW5kW1wiRU5VTV9UWVBFXCJdID0gXCJWaXNpdFNjaGVtYUtpbmQuRU5VTV9UWVBFXCI7XG4gICAgVmlzaXRTY2hlbWFLaW5kW1wiQ09NUE9TSVRFX1RZUEVcIl0gPSBcIlZpc2l0U2NoZW1hS2luZC5DT01QT1NJVEVfVFlQRVwiO1xuICAgIFZpc2l0U2NoZW1hS2luZFtcIk9CSkVDVF9UWVBFXCJdID0gXCJWaXNpdFNjaGVtYUtpbmQuT0JKRUNUX1RZUEVcIjtcbiAgICBWaXNpdFNjaGVtYUtpbmRbXCJJTlBVVF9PQkpFQ1RfVFlQRVwiXSA9IFwiVmlzaXRTY2hlbWFLaW5kLklOUFVUX09CSkVDVF9UWVBFXCI7XG4gICAgVmlzaXRTY2hlbWFLaW5kW1wiQUJTVFJBQ1RfVFlQRVwiXSA9IFwiVmlzaXRTY2hlbWFLaW5kLkFCU1RSQUNUX1RZUEVcIjtcbiAgICBWaXNpdFNjaGVtYUtpbmRbXCJVTklPTl9UWVBFXCJdID0gXCJWaXNpdFNjaGVtYUtpbmQuVU5JT05fVFlQRVwiO1xuICAgIFZpc2l0U2NoZW1hS2luZFtcIklOVEVSRkFDRV9UWVBFXCJdID0gXCJWaXNpdFNjaGVtYUtpbmQuSU5URVJGQUNFX1RZUEVcIjtcbiAgICBWaXNpdFNjaGVtYUtpbmRbXCJST09UX09CSkVDVFwiXSA9IFwiVmlzaXRTY2hlbWFLaW5kLlJPT1RfT0JKRUNUXCI7XG4gICAgVmlzaXRTY2hlbWFLaW5kW1wiUVVFUllcIl0gPSBcIlZpc2l0U2NoZW1hS2luZC5RVUVSWVwiO1xuICAgIFZpc2l0U2NoZW1hS2luZFtcIk1VVEFUSU9OXCJdID0gXCJWaXNpdFNjaGVtYUtpbmQuTVVUQVRJT05cIjtcbiAgICBWaXNpdFNjaGVtYUtpbmRbXCJTVUJTQ1JJUFRJT05cIl0gPSBcIlZpc2l0U2NoZW1hS2luZC5TVUJTQ1JJUFRJT05cIjtcbn0pKFZpc2l0U2NoZW1hS2luZCA9IGV4cG9ydHMuVmlzaXRTY2hlbWFLaW5kIHx8IChleHBvcnRzLlZpc2l0U2NoZW1hS2luZCA9IHt9KSk7XG5mdW5jdGlvbiB2aXNpdFNjaGVtYShzY2hlbWEsIHZpc2l0b3IsIHN0cmlwUmVzb2x2ZXJzKSB7XG4gICAgdmFyIHR5cGVzID0ge307XG4gICAgdmFyIHJlc29sdmVUeXBlID0gc2NoZW1hUmVjcmVhdGlvbl8xLmNyZWF0ZVJlc29sdmVUeXBlKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdHlwZXNbbmFtZV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCBmaW5kIHR5cGUgXCIgKyBuYW1lICsgXCIuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0eXBlc1tuYW1lXTtcbiAgICB9KTtcbiAgICB2YXIgcXVlcnlUeXBlID0gc2NoZW1hLmdldFF1ZXJ5VHlwZSgpO1xuICAgIHZhciBtdXRhdGlvblR5cGUgPSBzY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCk7XG4gICAgdmFyIHN1YnNjcmlwdGlvblR5cGUgPSBzY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpO1xuICAgIHZhciB0eXBlTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBPYmplY3Qua2V5cyh0eXBlTWFwKS5tYXAoZnVuY3Rpb24gKHR5cGVOYW1lKSB7XG4gICAgICAgIHZhciB0eXBlID0gdHlwZU1hcFt0eXBlTmFtZV07XG4gICAgICAgIGlmIChncmFwaHFsXzEuaXNOYW1lZFR5cGUodHlwZSkgJiYgZ3JhcGhxbF8xLmdldE5hbWVkVHlwZSh0eXBlKS5uYW1lLnNsaWNlKDAsIDIpICE9PSAnX18nKSB7XG4gICAgICAgICAgICB2YXIgc3BlY2lmaWVycyA9IGdldFR5cGVTcGVjaWZpZXJzKHR5cGUsIHNjaGVtYSk7XG4gICAgICAgICAgICB2YXIgdHlwZVZpc2l0b3IgPSBnZXRWaXNpdG9yKHZpc2l0b3IsIHNwZWNpZmllcnMpO1xuICAgICAgICAgICAgaWYgKHR5cGVWaXNpdG9yKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHR5cGVWaXNpdG9yKHR5cGUsIHNjaGVtYSk7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGVzW3R5cGVOYW1lXSA9IHNjaGVtYVJlY3JlYXRpb25fMS5yZWNyZWF0ZVR5cGUodHlwZSwgcmVzb2x2ZVR5cGUsICFzdHJpcFJlc29sdmVycyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJlc3VsdCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0eXBlc1t0eXBlTmFtZV0gPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZXNbdHlwZU5hbWVdID0gc2NoZW1hUmVjcmVhdGlvbl8xLnJlY3JlYXRlVHlwZShyZXN1bHQsIHJlc29sdmVUeXBlLCAhc3RyaXBSZXNvbHZlcnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHR5cGVzW3R5cGVOYW1lXSA9IHNjaGVtYVJlY3JlYXRpb25fMS5yZWNyZWF0ZVR5cGUodHlwZSwgcmVzb2x2ZVR5cGUsICFzdHJpcFJlc29sdmVycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IGdyYXBocWxfMS5HcmFwaFFMU2NoZW1hKHtcbiAgICAgICAgcXVlcnk6IHF1ZXJ5VHlwZSA/IHR5cGVzW3F1ZXJ5VHlwZS5uYW1lXSA6IG51bGwsXG4gICAgICAgIG11dGF0aW9uOiBtdXRhdGlvblR5cGVcbiAgICAgICAgICAgID8gdHlwZXNbbXV0YXRpb25UeXBlLm5hbWVdXG4gICAgICAgICAgICA6IG51bGwsXG4gICAgICAgIHN1YnNjcmlwdGlvbjogc3Vic2NyaXB0aW9uVHlwZVxuICAgICAgICAgICAgPyB0eXBlc1tzdWJzY3JpcHRpb25UeXBlLm5hbWVdXG4gICAgICAgICAgICA6IG51bGwsXG4gICAgICAgIHR5cGVzOiBPYmplY3Qua2V5cyh0eXBlcykubWFwKGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiB0eXBlc1tuYW1lXTsgfSksXG4gICAgfSk7XG59XG5leHBvcnRzLnZpc2l0U2NoZW1hID0gdmlzaXRTY2hlbWE7XG5mdW5jdGlvbiBnZXRUeXBlU3BlY2lmaWVycyh0eXBlLCBzY2hlbWEpIHtcbiAgICB2YXIgc3BlY2lmaWVycyA9IFtWaXNpdFNjaGVtYUtpbmQuVFlQRV07XG4gICAgaWYgKHR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTE9iamVjdFR5cGUpIHtcbiAgICAgICAgc3BlY2lmaWVycy51bnNoaWZ0KFZpc2l0U2NoZW1hS2luZC5DT01QT1NJVEVfVFlQRSwgVmlzaXRTY2hlbWFLaW5kLk9CSkVDVF9UWVBFKTtcbiAgICAgICAgdmFyIHF1ZXJ5ID0gc2NoZW1hLmdldFF1ZXJ5VHlwZSgpO1xuICAgICAgICB2YXIgbXV0YXRpb24gPSBzY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCk7XG4gICAgICAgIHZhciBzdWJzY3JpcHRpb24gPSBzY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpO1xuICAgICAgICBpZiAodHlwZSA9PT0gcXVlcnkpIHtcbiAgICAgICAgICAgIHNwZWNpZmllcnMucHVzaChWaXNpdFNjaGVtYUtpbmQuUk9PVF9PQkpFQ1QsIFZpc2l0U2NoZW1hS2luZC5RVUVSWSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZSA9PT0gbXV0YXRpb24pIHtcbiAgICAgICAgICAgIHNwZWNpZmllcnMucHVzaChWaXNpdFNjaGVtYUtpbmQuUk9PVF9PQkpFQ1QsIFZpc2l0U2NoZW1hS2luZC5NVVRBVElPTik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZSA9PT0gc3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICBzcGVjaWZpZXJzLnB1c2goVmlzaXRTY2hlbWFLaW5kLlJPT1RfT0JKRUNULCBWaXNpdFNjaGVtYUtpbmQuU1VCU0NSSVBUSU9OKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxJbnB1dE9iamVjdFR5cGUpIHtcbiAgICAgICAgc3BlY2lmaWVycy5wdXNoKFZpc2l0U2NoZW1hS2luZC5JTlBVVF9PQkpFQ1RfVFlQRSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTEludGVyZmFjZVR5cGUpIHtcbiAgICAgICAgc3BlY2lmaWVycy5wdXNoKFZpc2l0U2NoZW1hS2luZC5DT01QT1NJVEVfVFlQRSwgVmlzaXRTY2hlbWFLaW5kLkFCU1RSQUNUX1RZUEUsIFZpc2l0U2NoZW1hS2luZC5JTlRFUkZBQ0VfVFlQRSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTFVuaW9uVHlwZSkge1xuICAgICAgICBzcGVjaWZpZXJzLnB1c2goVmlzaXRTY2hlbWFLaW5kLkNPTVBPU0lURV9UWVBFLCBWaXNpdFNjaGVtYUtpbmQuQUJTVFJBQ1RfVFlQRSwgVmlzaXRTY2hlbWFLaW5kLlVOSU9OX1RZUEUpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlIGluc3RhbmNlb2YgZ3JhcGhxbF8xLkdyYXBoUUxFbnVtVHlwZSkge1xuICAgICAgICBzcGVjaWZpZXJzLnB1c2goVmlzaXRTY2hlbWFLaW5kLkVOVU1fVFlQRSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgaW5zdGFuY2VvZiBncmFwaHFsXzEuR3JhcGhRTFNjYWxhclR5cGUpIHtcbiAgICAgICAgc3BlY2lmaWVycy5wdXNoKFZpc2l0U2NoZW1hS2luZC5TQ0FMQVJfVFlQRSk7XG4gICAgfVxuICAgIHJldHVybiBzcGVjaWZpZXJzO1xufVxuZnVuY3Rpb24gZ2V0VmlzaXRvcih2aXNpdG9yLCBzcGVjaWZpZXJzKSB7XG4gICAgdmFyIHR5cGVWaXNpdG9yID0gbnVsbDtcbiAgICB2YXIgc3RhY2sgPSBzcGVjaWZpZXJzLnNsaWNlKCk7XG4gICAgd2hpbGUgKCF0eXBlVmlzaXRvciAmJiBzdGFjay5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZhciBuZXh0ID0gc3RhY2sucG9wKCk7XG4gICAgICAgIHR5cGVWaXNpdG9yID0gdmlzaXRvcltuZXh0XTtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGVWaXNpdG9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmlzaXRTY2hlbWEuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql-tools/dist/transforms/visitSchema.js\n");

/***/ }),

/***/ "./node_modules/uuid/index.js":
/*!************************************!*\
  !*** ./node_modules/uuid/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var v1 = __webpack_require__(/*! ./v1 */ \"./node_modules/uuid/v1.js\");\nvar v4 = __webpack_require__(/*! ./v4 */ \"./node_modules/uuid/v4.js\");\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9pbmRleC5qcz8xMWMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsbUJBQU8sQ0FBQyx1Q0FBTTtBQUN2QixTQUFTLG1CQUFPLENBQUMsdUNBQU07O0FBRXZCO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHYxID0gcmVxdWlyZSgnLi92MScpO1xudmFyIHY0ID0gcmVxdWlyZSgnLi92NCcpO1xuXG52YXIgdXVpZCA9IHY0O1xudXVpZC52MSA9IHYxO1xudXVpZC52NCA9IHY0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHV1aWQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanM/MjM2NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvYnl0ZXNUb1V1aWQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbnZhciBieXRlVG9IZXggPSBbXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4W2ldID0gKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKTtcbn1cblxuZnVuY3Rpb24gYnl0ZXNUb1V1aWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBvZmZzZXQgfHwgMDtcbiAgdmFyIGJ0aCA9IGJ5dGVUb0hleDtcbiAgLy8gam9pbiB1c2VkIHRvIGZpeCBtZW1vcnkgaXNzdWUgY2F1c2VkIGJ5IGNvbmNhdGVuYXRpb246IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMxNzUjYzRcbiAgcmV0dXJuIChbYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXV0pLmpvaW4oJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJ5dGVzVG9VdWlkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/lib/bytesToUuid.js\n");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9saWIvcm5nLWJyb3dzZXIuanM/ZTFmNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUNBQWlDOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLFFBQVE7QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2xpYi9ybmctYnJvd3Nlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuICBJbiB0aGVcbi8vIGJyb3dzZXIgdGhpcyBpcyBhIGxpdHRsZSBjb21wbGljYXRlZCBkdWUgdG8gdW5rbm93biBxdWFsaXR5IG9mIE1hdGgucmFuZG9tKClcbi8vIGFuZCBpbmNvbnNpc3RlbnQgc3VwcG9ydCBmb3IgdGhlIGBjcnlwdG9gIEFQSS4gIFdlIGRvIHRoZSBiZXN0IHdlIGNhbiB2aWFcbi8vIGZlYXR1cmUtZGV0ZWN0aW9uXG5cbi8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0b1xuLy8gaW1wbGVtZW50YXRpb24uIEFsc28sIGZpbmQgdGhlIGNvbXBsZXRlIGltcGxlbWVudGF0aW9uIG9mIGNyeXB0byBvbiBJRTExLlxudmFyIGdldFJhbmRvbVZhbHVlcyA9ICh0eXBlb2YoY3J5cHRvKSAhPSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YobXNDcnlwdG8pICE9ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cubXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09ICdmdW5jdGlvbicgJiYgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQobXNDcnlwdG8pKTtcblxuaWYgKGdldFJhbmRvbVZhbHVlcykge1xuICAvLyBXSEFUV0cgY3J5cHRvIFJORyAtIGh0dHA6Ly93aWtpLndoYXR3Zy5vcmcvd2lraS9DcnlwdG9cbiAgdmFyIHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB3aGF0d2dSTkcoKSB7XG4gICAgZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbiAgICByZXR1cm4gcm5kczg7XG4gIH07XG59IGVsc2Uge1xuICAvLyBNYXRoLnJhbmRvbSgpLWJhc2VkIChSTkcpXG4gIC8vXG4gIC8vIElmIGFsbCBlbHNlIGZhaWxzLCB1c2UgTWF0aC5yYW5kb20oKS4gIEl0J3MgZmFzdCwgYnV0IGlzIG9mIHVuc3BlY2lmaWVkXG4gIC8vIHF1YWxpdHkuXG4gIHZhciBybmRzID0gbmV3IEFycmF5KDE2KTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1hdGhSTkcoKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHI7IGkgPCAxNjsgaSsrKSB7XG4gICAgICBpZiAoKGkgJiAweDAzKSA9PT0gMCkgciA9IE1hdGgucmFuZG9tKCkgKiAweDEwMDAwMDAwMDtcbiAgICAgIHJuZHNbaV0gPSByID4+PiAoKGkgJiAweDAzKSA8PCAzKSAmIDB4ZmY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJuZHM7XG4gIH07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/lib/rng-browser.js\n");

/***/ }),

/***/ "./node_modules/uuid/v1.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v1.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92MS5qcz9jNDM3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx5REFBVztBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBbUI7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUM7QUFDbkM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvdjEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG4vLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG5cbnZhciBfbm9kZUlkO1xudmFyIF9jbG9ja3NlcTtcblxuLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG52YXIgX2xhc3RNU2VjcyA9IDA7XG52YXIgX2xhc3ROU2VjcyA9IDA7XG5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vYnJvb2ZhL25vZGUtdXVpZCBmb3IgQVBJIGRldGFpbHNcbmZ1bmN0aW9uIHYxKG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIHZhciBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuICB2YXIgYiA9IGJ1ZiB8fCBbXTtcblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIG5vZGUgPSBvcHRpb25zLm5vZGUgfHwgX25vZGVJZDtcbiAgdmFyIGNsb2Nrc2VxID0gb3B0aW9ucy5jbG9ja3NlcSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5jbG9ja3NlcSA6IF9jbG9ja3NlcTtcblxuICAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcbiAgaWYgKG5vZGUgPT0gbnVsbCB8fCBjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgdmFyIHNlZWRCeXRlcyA9IHJuZygpO1xuICAgIGlmIChub2RlID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjUsIGNyZWF0ZSBhbmQgNDgtYml0IG5vZGUgaWQsICg0NyByYW5kb20gYml0cyArIG11bHRpY2FzdCBiaXQgPSAxKVxuICAgICAgbm9kZSA9IF9ub2RlSWQgPSBbXG4gICAgICAgIHNlZWRCeXRlc1swXSB8IDB4MDEsXG4gICAgICAgIHNlZWRCeXRlc1sxXSwgc2VlZEJ5dGVzWzJdLCBzZWVkQnl0ZXNbM10sIHNlZWRCeXRlc1s0XSwgc2VlZEJ5dGVzWzVdXG4gICAgICBdO1xuICAgIH1cbiAgICBpZiAoY2xvY2tzZXEgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuMi4yLCByYW5kb21pemUgKDE0IGJpdCkgY2xvY2tzZXFcbiAgICAgIGNsb2Nrc2VxID0gX2Nsb2Nrc2VxID0gKHNlZWRCeXRlc1s2XSA8PCA4IHwgc2VlZEJ5dGVzWzddKSAmIDB4M2ZmZjtcbiAgICB9XG4gIH1cblxuICAvLyBVVUlEIHRpbWVzdGFtcHMgYXJlIDEwMCBuYW5vLXNlY29uZCB1bml0cyBzaW5jZSB0aGUgR3JlZ29yaWFuIGVwb2NoLFxuICAvLyAoMTU4Mi0xMC0xNSAwMDowMCkuICBKU051bWJlcnMgYXJlbid0IHByZWNpc2UgZW5vdWdoIGZvciB0aGlzLCBzb1xuICAvLyB0aW1lIGlzIGhhbmRsZWQgaW50ZXJuYWxseSBhcyAnbXNlY3MnIChpbnRlZ2VyIG1pbGxpc2Vjb25kcykgYW5kICduc2VjcydcbiAgLy8gKDEwMC1uYW5vc2Vjb25kcyBvZmZzZXQgZnJvbSBtc2Vjcykgc2luY2UgdW5peCBlcG9jaCwgMTk3MC0wMS0wMSAwMDowMC5cbiAgdmFyIG1zZWNzID0gb3B0aW9ucy5tc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5tc2VjcyA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG4gIC8vIFBlciA0LjIuMS4yLCB1c2UgY291bnQgb2YgdXVpZCdzIGdlbmVyYXRlZCBkdXJpbmcgdGhlIGN1cnJlbnQgY2xvY2tcbiAgLy8gY3ljbGUgdG8gc2ltdWxhdGUgaGlnaGVyIHJlc29sdXRpb24gY2xvY2tcbiAgdmFyIG5zZWNzID0gb3B0aW9ucy5uc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc2VjcyA6IF9sYXN0TlNlY3MgKyAxO1xuXG4gIC8vIFRpbWUgc2luY2UgbGFzdCB1dWlkIGNyZWF0aW9uIChpbiBtc2VjcylcbiAgdmFyIGR0ID0gKG1zZWNzIC0gX2xhc3RNU2VjcykgKyAobnNlY3MgLSBfbGFzdE5TZWNzKS8xMDAwMDtcblxuICAvLyBQZXIgNC4yLjEuMiwgQnVtcCBjbG9ja3NlcSBvbiBjbG9jayByZWdyZXNzaW9uXG4gIGlmIChkdCA8IDAgJiYgb3B0aW9ucy5jbG9ja3NlcSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2xvY2tzZXEgPSBjbG9ja3NlcSArIDEgJiAweDNmZmY7XG4gIH1cblxuICAvLyBSZXNldCBuc2VjcyBpZiBjbG9jayByZWdyZXNzZXMgKG5ldyBjbG9ja3NlcSkgb3Igd2UndmUgbW92ZWQgb250byBhIG5ld1xuICAvLyB0aW1lIGludGVydmFsXG4gIGlmICgoZHQgPCAwIHx8IG1zZWNzID4gX2xhc3RNU2VjcykgJiYgb3B0aW9ucy5uc2VjcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbnNlY3MgPSAwO1xuICB9XG5cbiAgLy8gUGVyIDQuMi4xLjIgVGhyb3cgZXJyb3IgaWYgdG9vIG1hbnkgdXVpZHMgYXJlIHJlcXVlc3RlZFxuICBpZiAobnNlY3MgPj0gMTAwMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3V1aWQudjEoKTogQ2FuXFwndCBjcmVhdGUgbW9yZSB0aGFuIDEwTSB1dWlkcy9zZWMnKTtcbiAgfVxuXG4gIF9sYXN0TVNlY3MgPSBtc2VjcztcbiAgX2xhc3ROU2VjcyA9IG5zZWNzO1xuICBfY2xvY2tzZXEgPSBjbG9ja3NlcTtcblxuICAvLyBQZXIgNC4xLjQgLSBDb252ZXJ0IGZyb20gdW5peCBlcG9jaCB0byBHcmVnb3JpYW4gZXBvY2hcbiAgbXNlY3MgKz0gMTIyMTkyOTI4MDAwMDA7XG5cbiAgLy8gYHRpbWVfbG93YFxuICB2YXIgdGwgPSAoKG1zZWNzICYgMHhmZmZmZmZmKSAqIDEwMDAwICsgbnNlY3MpICUgMHgxMDAwMDAwMDA7XG4gIGJbaSsrXSA9IHRsID4+PiAyNCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiAxNiAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdGwgJiAweGZmO1xuXG4gIC8vIGB0aW1lX21pZGBcbiAgdmFyIHRtaCA9IChtc2VjcyAvIDB4MTAwMDAwMDAwICogMTAwMDApICYgMHhmZmZmZmZmO1xuICBiW2krK10gPSB0bWggPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bWggJiAweGZmO1xuXG4gIC8vIGB0aW1lX2hpZ2hfYW5kX3ZlcnNpb25gXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMjQgJiAweGYgfCAweDEwOyAvLyBpbmNsdWRlIHZlcnNpb25cbiAgYltpKytdID0gdG1oID4+PiAxNiAmIDB4ZmY7XG5cbiAgLy8gYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgIChQZXIgNC4yLjIgLSBpbmNsdWRlIHZhcmlhbnQpXG4gIGJbaSsrXSA9IGNsb2Nrc2VxID4+PiA4IHwgMHg4MDtcblxuICAvLyBgY2xvY2tfc2VxX2xvd2BcbiAgYltpKytdID0gY2xvY2tzZXEgJiAweGZmO1xuXG4gIC8vIGBub2RlYFxuICBmb3IgKHZhciBuID0gMDsgbiA8IDY7ICsrbikge1xuICAgIGJbaSArIG5dID0gbm9kZVtuXTtcbiAgfVxuXG4gIHJldHVybiBidWYgPyBidWYgOiBieXRlc1RvVXVpZChiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2MTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/v1.js\n");

/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC92NC5qcz9jNjRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx5REFBVztBQUM3QixrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBbUI7O0FBRTdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvdjQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcblxuICBpZiAodHlwZW9mKG9wdGlvbnMpID09ICdzdHJpbmcnKSB7XG4gICAgYnVmID0gb3B0aW9ucyA9PT0gJ2JpbmFyeScgPyBuZXcgQXJyYXkoMTYpIDogbnVsbDtcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7XG5cbiAgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuICBybmRzWzZdID0gKHJuZHNbNl0gJiAweDBmKSB8IDB4NDA7XG4gIHJuZHNbOF0gPSAocm5kc1s4XSAmIDB4M2YpIHwgMHg4MDtcblxuICAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcbiAgaWYgKGJ1Zikge1xuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCAxNjsgKytpaSkge1xuICAgICAgYnVmW2kgKyBpaV0gPSBybmRzW2lpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IGJ5dGVzVG9VdWlkKHJuZHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHY0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/v4.js\n");

/***/ })

})