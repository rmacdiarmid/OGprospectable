{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendPROSPECT/components/Permissions.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        users {\\n            id\\n            name\\n            email\\n            permissions\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updatePermissions($permissions: [Permission],\\n    $userId: ID!) {\\n        updatedPermissions(permissions: $permissions, userId: $userId) {\\n            id\\n            permissions\\n            name\\n            email\\n        }\\n    }\\n \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nvar possiblePermissions = ['ADMIN', 'USER', 'ITEMCREATE', 'ITEMUPDATE', 'ITEMDELETE', 'PERMISSIONUPDATE'];\nvar UPDATE_PERMISSIONS_MUTATION = gql(_templateObject());\nvar ALL_USERS_QUERY = gql(_templateObject2());\n\nvar Permissions = function Permissions(props) {\n  return __jsx(Query, {\n    query: ALL_USERS_QUERY,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, \"Manage Permissions\"), __jsx(Table, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, __jsx(\"thead\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }\n    }, __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }\n    }, __jsx(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"Name\"), __jsx(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Email\"), possiblePermissions.map(function (permission) {\n      return __jsx(\"th\", {\n        key: permission,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 68\n        }\n      }, permission);\n    }), __jsx(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, \"\\uD83D\\uDC47\\uD83C\\uDFFB\"))), __jsx(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, data.users.map(function (user) {\n      return __jsx(UserPermissions, {\n        user: user,\n        key: user.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 49\n        }\n      });\n    })))));\n  });\n};\n\n_c = Permissions;\n\nvar UserPermissions = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserPermissions, _React$Component);\n\n  var _super = _createSuper(UserPermissions);\n\n  function UserPermissions() {\n    var _this2;\n\n    _classCallCheck(this, UserPermissions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      permissions: _this2.props.user.permissions\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handlePermissionChange\", function (e) {\n      var checkbox = e.target; //take a copy of the current permissions\n\n      var updatedPermissions = _toConsumableArray(_this2.state.permissions); //figure out if we need to remove or add this permission\n\n\n      if (checkbox.checked) {\n        //add it in!\n        updatedPermissions.push(checkbox.value);\n      } else {\n        updatedPermissions = updatedPermissions.filter(function (permission) {\n          return permission !== checkbox.value;\n        });\n      }\n\n      _this2.setState({\n        permissions: updatedPermissions\n      });\n\n      console.log(updatedPermissions);\n    });\n\n    return _this2;\n  }\n\n  _createClass(UserPermissions, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var user = this.props.user;\n      return __jsx(Mutation, {\n        mutation: UPDATE_PERMISSIONS_MUTATION,\n        variables: {\n          permissions: this.state.permissions,\n          userId: this.props.user.id\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, function (updatePermissions, _ref2) {\n        var loading = _ref2.loading,\n            error = _ref2.error;\n        return __jsx(React.Fragment, null, error && __jsx(\"tr\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 26\n          }\n        }, __jsx(\"td\", {\n          colspan: \"8\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 30\n          }\n        }, __jsx(Error, {\n          error: error,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 46\n          }\n        }))), __jsx(\"tr\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }\n        }, __jsx(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }\n        }, user.name), __jsx(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }, user.email), possiblePermissions.map(function (permission) {\n          return __jsx(\"td\", {\n            key: permission,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }\n          }, __jsx(\"label\", {\n            htmlFor: \"\".concat(user.id, \"-permission-\").concat(permission),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }\n          }, __jsx(\"input\", {\n            id: \"\".concat(user.id, \"-permission-\").concat(permission),\n            type: \"checkbox\",\n            checked: _this3.state.permissions.includes(permission),\n            value: permission,\n            onChange: _this3.handlePermissionChange,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }\n          })));\n        }), __jsx(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, __jsx(SickButton, {\n          type: \"button\",\n          disabled: loading,\n          onClick: updatePermissions,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }\n        }, \"Updat\", loading ? 'ing' : 'e'))));\n      });\n    }\n  }]);\n\n  return UserPermissions;\n}(React.Component);\n\n_defineProperty(UserPermissions, \"propTypes\", {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.string,\n    permissions: PropTypes.array\n  }).isRequired\n});\n\nexport default Permissions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Permissions\");","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendPROSPECT/components/Permissions.js"],"names":["Query","Error","gql","Table","SickButton","PropTypes","possiblePermissions","UPDATE_PERMISSIONS_MUTATION","ALL_USERS_QUERY","Permissions","props","data","loading","error","map","permission","users","user","id","UserPermissions","permissions","e","checkbox","target","updatedPermissions","state","checked","push","value","filter","setState","console","log","userId","updatePermissions","name","email","includes","handlePermissionChange","React","Component","shape","string","array","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,mBAAmB,GAAG,CACxB,OADwB,EAExB,MAFwB,EAGxB,YAHwB,EAIxB,YAJwB,EAKxB,YALwB,EAMxB,kBANwB,CAA5B;AASA,IAAMC,2BAA2B,GAAGL,GAAH,mBAAjC;AAYA,IAAMM,eAAe,GAAGN,GAAH,oBAArB;;AAWA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SACrB,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGG,IAAH,QAAGA,IAAH;AAAA,QAASC,OAAT,QAASA,OAAT;AAAA,QAAkBC,KAAlB,QAAkBA,KAAlB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGGP,mBAAmB,CAACQ,GAApB,CAAwB,UAAAC,UAAU;AAAA,aAAI;AAAI,QAAA,GAAG,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBA,UAAtB,CAAJ;AAAA,KAAlC,CAHH,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJF,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,IAAI,CAACK,KAAL,CAAWF,GAAX,CAAe,UAAAG,IAAI;AAAA,aAAI,MAAC,eAAD;AAAiB,QAAA,IAAI,EAAEA,IAAvB;AAA6B,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAAnB,CADH,CATJ,CAFJ,CAFF,CADH;AAAA,GADL,CADqB;AAAA,CAAzB;;KAAMT,W;;IA0BAU,e;;;;;;;;;;;;;;;;6DASM;AACJC,MAAAA,WAAW,EAAC,OAAKV,KAAL,CAAWO,IAAX,CAAgBG;AADxB,K;;8EAGiB,UAACC,CAAD,EAAO;AAC5B,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAnB,CAD4B,CAE5B;;AACA,UAAIC,kBAAkB,sBAAO,OAAKC,KAAL,CAAWL,WAAlB,CAAtB,CAH4B,CAI5B;;;AACA,UAAGE,QAAQ,CAACI,OAAZ,EAAqB;AACrB;AACAF,QAAAA,kBAAkB,CAACG,IAAnB,CAAwBL,QAAQ,CAACM,KAAjC;AACC,OAHD,MAGO;AACHJ,QAAAA,kBAAkB,GAAGA,kBAAkB,CAACK,MAAnB,CACpB,UAAAd,UAAU;AAAA,iBAAIA,UAAU,KAAKO,QAAQ,CAACM,KAA5B;AAAA,SADU,CAArB;AAEH;;AACD,aAAKE,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEI;AAAf,OAAd;;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,kBAAZ;AACH,K;;;;;;;6BACQ;AAAA;;AACL,UAAMP,IAAI,GAAG,KAAKP,KAAL,CAAWO,IAAxB;AACA,aACI,MAAC,QAAD;AAAU,QAAA,QAAQ,EAAEV,2BAApB;AAAiD,QAAA,SAAS,EAAE;AACxDa,UAAAA,WAAW,EAAE,KAAKK,KAAL,CAAWL,WADgC;AAExDa,UAAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWO,IAAX,CAAgBC;AAFgC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKC,UAACgB,iBAAD;AAAA,YAAsBtB,OAAtB,SAAsBA,OAAtB;AAAA,YAA+BC,KAA/B,SAA+BA,KAA/B;AAAA,eACD,4BACIA,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgB,MAAC,KAAD;AAAO,UAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,CAAJ,CADb,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKI,IAAI,CAACkB,IAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKlB,IAAI,CAACmB,KAAV,CAFJ,EAGK9B,mBAAmB,CAACQ,GAApB,CAAwB,UAAAC,UAAU;AAAA,iBAC/B;AAAI,YAAA,GAAG,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAO,YAAA,OAAO,YAAKE,IAAI,CAACC,EAAV,yBAA2BH,UAA3B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AACI,YAAA,EAAE,YAAKE,IAAI,CAACC,EAAV,yBAA2BH,UAA3B,CADN;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,OAAO,EAAE,MAAI,CAACU,KAAL,CAAWL,WAAX,CAAuBiB,QAAvB,CAAgCtB,UAAhC,CAHb;AAII,YAAA,KAAK,EAAEA,UAJX;AAKI,YAAA,QAAQ,EAAE,MAAI,CAACuB,sBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CAD+B;AAAA,SAAlC,CAHL,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,MAAC,UAAD;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,QAAQ,EAAE1B,OAFd;AAGI,UAAA,OAAO,EAAEsB,iBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIWtB,OAAO,GAAG,KAAH,GAAW,GAJ7B,CADA,CAhBJ,CAFJ,CADC;AAAA,OALD,CADJ;AAuCH;;;;EApEyB2B,KAAK,CAACC,S;;gBAA9BrB,e,eACiB;AACfF,EAAAA,IAAI,EAAEZ,SAAS,CAACoC,KAAV,CAAgB;AAClBN,IAAAA,IAAI,EAAE9B,SAAS,CAACqC,MADE;AAElBN,IAAAA,KAAK,EAAE/B,SAAS,CAACqC,MAFC;AAGlBxB,IAAAA,EAAE,EAAEb,SAAS,CAACqC,MAHI;AAIlBtB,IAAAA,WAAW,EAAEf,SAAS,CAACsC;AAJL,GAAhB,EAKHC;AANY,C;;AAsEvB,eAAenC,WAAf","sourcesContent":["import { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n    'ADMIN',\n    'USER',\n    'ITEMCREATE',\n    'ITEMUPDATE',\n    'ITEMDELETE',\n    'PERMISSIONUPDATE',\n];\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n    mutation updatePermissions($permissions: [Permission],\n    $userId: ID!) {\n        updatedPermissions(permissions: $permissions, userId: $userId) {\n            id\n            permissions\n            name\n            email\n        }\n    }\n `;\n\nconst ALL_USERS_QUERY = gql`\n    query {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = props => (\n    <Query query={ALL_USERS_QUERY}>\n        {({ data, loading, error }) => (\n            <div>\n              <Error error={error} />\n              <div>\n                  <h2>Manage Permissions</h2>\n                  <Table>\n                      <thead>\n                          <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\n                            <th>👇🏻</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        {data.users.map(user => <UserPermissions user={user} key={user.id} />)}\n                      </tbody>\n                  </Table>\n              </div>\n            </div>\n        )}\n    </Query>\n);\n\nclass UserPermissions extends React.Component {\n    static propTypes = {\n        user: PropTypes.shape({\n            name: PropTypes.string,\n            email: PropTypes.string,\n            id: PropTypes.string,\n            permissions: PropTypes.array,\n        }).isRequired,\n    };\n    state = {\n        permissions:this.props.user.permissions,\n    };\n    handlePermissionChange = (e) => {\n        const checkbox = e.target;\n        //take a copy of the current permissions\n        let updatedPermissions = [...this.state.permissions];\n        //figure out if we need to remove or add this permission\n        if(checkbox.checked) {\n        //add it in!\n        updatedPermissions.push(checkbox.value);\n        } else {\n            updatedPermissions = updatedPermissions.filter\n            (permission => permission !== checkbox.value); \n        }\n        this.setState({ permissions: updatedPermissions });\n        console.log(updatedPermissions);\n    };\n    render() {\n        const user = this.props.user;\n        return (\n            <Mutation mutation={UPDATE_PERMISSIONS_MUTATION} variables={{\n                permissions: this.state.permissions,\n                userId: this.props.user.id,\n              }}\n            >\n            {(updatePermissions, { loading, error }) => (\n            <> \n               {error && <tr><td colspan=\"8\"><Error error={error} /></td></tr>}\n                <tr>\n                    <td>{user.name}</td>\n                    <td>{user.email}</td>\n                    {possiblePermissions.map(permission => (\n                        <td key={permission}>\n                            <label htmlFor={`${user.id}-permission-${permission}`}>\n                                <input \n                                    id={`${user.id}-permission-${permission}`}\n                                    type=\"checkbox\" \n                                    checked={this.state.permissions.includes(permission)} \n                                    value={permission}\n                                    onChange={this.handlePermissionChange}\n                                />\n                            </label>\n                        </td>\n                    ))}\n                    <td>\n                    <SickButton \n                        type=\"button\"\n                        disabled={loading}\n                        onClick={updatePermissions}\n                        >Updat{loading ? 'ing' : 'e'}\n                    </SickButton>\n                 </td>\n                </tr>\n            </>\n            )\n            }\n            </Mutation>\n        );\n    }\n}\n\nexport default Permissions;"]},"metadata":{},"sourceType":"module"}