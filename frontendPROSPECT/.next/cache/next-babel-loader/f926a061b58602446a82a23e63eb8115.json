{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendPROSPECT/components/Permissions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nconst possiblePermissions = ['ADMIN', 'USER', 'ITEMCREATE', 'ITEMUPDATE', 'ITEMDELETE', 'PERMISSIONUPDATE'];\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n    mutation updatePermissions($permissions: [Permission],\n    $userId: ID!) {\n        updatedPermissions(permissions: $permissions, userId: $userId) {\n            id\n            permissions\n            name\n            email\n        }\n    }\n `;\nconst ALL_USERS_QUERY = gql`\n    query {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = props => __jsx(Query, {\n  query: ALL_USERS_QUERY,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, ({\n  data,\n  loading,\n  error\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }\n}, __jsx(Error, {\n  error: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 15\n  }\n}), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 15\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 19\n  }\n}, \"Manage Permissions\"), __jsx(Table, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 19\n  }\n}, __jsx(\"thead\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }\n}, __jsx(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 27\n  }\n}, __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 29\n  }\n}, \"Name\"), __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 29\n  }\n}, \"Email\"), possiblePermissions.map(permission => __jsx(\"th\", {\n  key: permission,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 68\n  }\n}, permission)), __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 29\n  }\n}, \"\\uD83D\\uDC47\\uD83C\\uDFFB\"))), __jsx(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }\n}, data.users.map(user => __jsx(UserPermissions, {\n  user: user,\n  key: user.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 49\n  }\n})))))));\n\nclass UserPermissions extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      permissions: this.props.user.permissions\n    });\n\n    _defineProperty(this, \"handlePermissionChange\", e => {\n      const checkbox = e.target; //take a copy of the current permissions\n\n      let updatedPermissions = [...this.state.permissions]; //figure out if we need to remove or add this permission\n\n      if (checkbox.checked) {\n        //add it in!\n        updatedPermissions.push(checkbox.value);\n      } else {\n        updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n      }\n\n      this.setState({\n        permissions: updatedPermissions\n      });\n      console.log(updatedPermissions);\n    });\n  }\n\n  render() {\n    const user = this.props.user;\n    return __jsx(Mutation, {\n      mutation: UPDATE_PERMISSIONS_MUTATION,\n      variables: {\n        permissions: this.state.permissions,\n        userId: this.props.user.id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, (updatePermissions, {\n      loading,\n      error\n    }) => __jsx(React.Fragment, null, error && __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 26\n      }\n    }, __jsx(\"td\", {\n      colspan: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 30\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 46\n      }\n    }))), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, user.name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, user.email), possiblePermissions.map(permission => __jsx(\"td\", {\n      key: permission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: `${user.id}-permission-${permission}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, __jsx(\"input\", {\n      //id={`${user.id}-permission-${permission}`}\n      type: \"checkbox\",\n      checked: this.state.permissions.includes(permission),\n      value: permission,\n      onChange: this.handlePermissionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    })))), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, __jsx(SickButton, {\n      type: \"button\",\n      disabled: loading,\n      onClick: updatePermissions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Updat\", loading ? 'ing' : 'e')))));\n  }\n\n}\n\n_defineProperty(UserPermissions, \"propTypes\", {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.string,\n    permissions: PropTypes.array\n  }).isRequired\n});\n\nexport default Permissions;","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendPROSPECT/components/Permissions.js"],"names":["Query","Error","gql","Table","SickButton","PropTypes","possiblePermissions","UPDATE_PERMISSIONS_MUTATION","ALL_USERS_QUERY","Permissions","props","data","loading","error","map","permission","users","user","id","UserPermissions","React","Component","permissions","e","checkbox","target","updatedPermissions","state","checked","push","value","filter","setState","console","log","render","userId","updatePermissions","name","email","includes","handlePermissionChange","shape","string","array","isRequired"],"mappings":"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","sourcesContent":["import { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n    'ADMIN',\n    'USER',\n    'ITEMCREATE',\n    'ITEMUPDATE',\n    'ITEMDELETE',\n    'PERMISSIONUPDATE',\n];\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n    mutation updatePermissions($permissions: [Permission],\n    $userId: ID!) {\n        updatedPermissions(permissions: $permissions, userId: $userId) {\n            id\n            permissions\n            name\n            email\n        }\n    }\n `;\n\nconst ALL_USERS_QUERY = gql`\n    query {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = props => (\n    <Query query={ALL_USERS_QUERY}>\n        {({ data, loading, error }) => (\n            <div>\n              <Error error={error} />\n              <div>\n                  <h2>Manage Permissions</h2>\n                  <Table>\n                      <thead>\n                          <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\n                            <th>👇🏻</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        {data.users.map(user => <UserPermissions user={user} key={user.id} />)}\n                      </tbody>\n                  </Table>\n              </div>\n            </div>\n        )}\n    </Query>\n);\n\nclass UserPermissions extends React.Component {\n    static propTypes = {\n        user: PropTypes.shape({\n            name: PropTypes.string,\n            email: PropTypes.string,\n            id: PropTypes.string,\n            permissions: PropTypes.array,\n        }).isRequired,\n    };\n    state = {\n        permissions:this.props.user.permissions,\n    };\n    handlePermissionChange = (e) => {\n        const checkbox = e.target;\n        //take a copy of the current permissions\n        let updatedPermissions = [...this.state.permissions];\n        //figure out if we need to remove or add this permission\n        if(checkbox.checked) {\n        //add it in!\n        updatedPermissions.push(checkbox.value);\n        } else {\n            updatedPermissions = updatedPermissions.filter\n            (permission => permission !== checkbox.value); \n        }\n        this.setState({ permissions: updatedPermissions });\n        console.log(updatedPermissions);\n    };\n    render() {\n        const user = this.props.user;\n        return (\n            <Mutation mutation={UPDATE_PERMISSIONS_MUTATION} variables={{\n                permissions: this.state.permissions,\n                userId: this.props.user.id,\n              }}\n            >\n            {(updatePermissions, { loading, error }) => (\n            <> \n               {error && <tr><td colspan=\"8\"><Error error={error} /></td></tr>}\n                <tr>\n                    <td>{user.name}</td>\n                    <td>{user.email}</td>\n                    {possiblePermissions.map(permission => (\n                        <td key={permission}>\n                            <label htmlFor={`${user.id}-permission-${permission}`}>\n                                <input \n                                    //id={`${user.id}-permission-${permission}`}\n                                    type=\"checkbox\" \n                                    checked={this.state.permissions.includes(permission)} \n                                    value={permission}\n                                    onChange={this.handlePermissionChange}\n                                />\n                            </label>\n                        </td>\n                    ))}\n                    <td>\n                    <SickButton \n                        type=\"button\"\n                        disabled={loading}\n                        onClick={updatePermissions}\n                        >Updat{loading ? 'ing' : 'e'}\n                    </SickButton>\n                 </td>\n                </tr>\n            </>\n            )}\n            </Mutation>\n        );\n    }\n}\n\nexport default Permissions;"]},"metadata":{},"sourceType":"module"}