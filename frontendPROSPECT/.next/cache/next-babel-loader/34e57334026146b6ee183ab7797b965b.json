{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendPROSPECT/components/ResetPage.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\n        resetPassword(resetToken: $resetToken,\n        password: $password,\n        confirmPassword: $confirmPassword) {\n            id\n            email\n            name\n        }\n    }\n`;\n\nclass ResetPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      password: '',\n      confirmPassword: ''\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: RESET_MUTATION,\n      variables: {\n        resetToken: this.props.resetToken,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n      },\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, (reset, {\n      error,\n      loading,\n      called\n    }) => __jsx(Form, {\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault();\n        await reset();\n        this.setState({\n          password: '',\n          confirmPassword: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Reset Your Password\"), __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }\n    })), __jsx(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Confirm Your Password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"confirm password\",\n      value: this.state.confirmPassword,\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Reset Your Password!\"))));\n  }\n\n}\n\n_defineProperty(ResetPage, \"propTypes\", {\n  resetToken: PropTypes.string.isRequired\n});\n\nexport default ResetPage;","map":{"version":3,"sources":["/Users/ryanmacdiarmid/Dropbox (Personal)/_github/prospectable/frontendPROSPECT/components/ResetPage.js"],"names":["React","Component","Mutation","gql","Form","Error","PropTypes","CURRENT_USER_QUERY","RESET_MUTATION","ResetPage","password","confirmPassword","e","setState","target","name","value","render","resetToken","props","state","query","reset","error","loading","called","preventDefault","saveToState","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\n\n\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\n        resetPassword(resetToken: $resetToken,\n        password: $password,\n        confirmPassword: $confirmPassword) {\n            id\n            email\n            name\n        }\n    }\n`;\n\nclass ResetPage extends Component {\n    static propTypes = {\n        resetToken: PropTypes.string.isRequired,\n    };\n    state = {\n        password: '',\n        confirmPassword: ''\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    render() {\n        return (\n        <Mutation \n            mutation={RESET_MUTATION} \n            variables={{\n                resetToken: this.props.resetToken,\n                password: this.state.password,\n                confirmPassword: this.state.confirmPassword\n        }}\n            refetchQueries={[{\n                query: CURRENT_USER_QUERY\n            }]}\n        >\n            {(reset, { error, loading, called }) => (\n            <Form \n                method=\"post\" \n                onSubmit={async e => {\n                    e.preventDefault();\n                    await reset();\n                    this.setState({ password: '', confirmPassword: '' });\n                }}\n            >\n            <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Reset Your Password</h2>\n                <Error error={error} />\n                <label htmlFor=\"password\">\n                 Password\n                 <input \n                    type=\"password\" \n                    name=\"password\" \n                    placeholder=\"password\" \n                    value={this.state.password} \n                    onChange={this.saveToState}\n                    />\n                </label>\n                <label htmlFor=\"confirmPassword\">\n                 Confirm Your Password\n                 <input \n                    type=\"password\" \n                    name=\"confirmPassword\" \n                    placeholder=\"confirm password\" \n                    value={this.state.confirmPassword} \n                    onChange={this.saveToState}\n                    />\n                </label>\n            <button type=\"submit\">Reset Your Password!</button>\n        </fieldset>\n        </Form>\n        )}\n        </Mutation>\n        );\n    };\n}\n\nexport default ResetPage;"]},"metadata":{},"sourceType":"module"}